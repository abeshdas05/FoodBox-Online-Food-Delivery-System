{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let FoodListComponent = class FoodListComponent {\n  constructor(service) {\n    this.service = service;\n    this.foodItems = [];\n    this.quantities = [];\n    this.filteredFoodItems = [];\n    this.categories = [];\n    this.selectedCategory = null;\n    this.message = '';\n    this.searchQuery = '';\n    this.selectedSortOption = 'default';\n  }\n  ngOnInit() {\n    this.getCategories();\n    this.getFoodItems();\n  }\n  getCategories() {\n    this.service.getCategories().subscribe(categories => {\n      this.categories = categories;\n    });\n  }\n  getFoodItems() {\n    this.service.getFoodItems().subscribe(foodItems => {\n      this.foodItems = foodItems;\n      this.filteredFoodItems = foodItems;\n      this.initializeQuantities();\n    });\n  }\n  initializeQuantities() {\n    this.quantities = new Array(this.foodItems.length).fill(1);\n  }\n  addToCart(foodItem, quantity) {\n    if (quantity <= 0) {\n      alert('Please select a valid quantity');\n    } else if (quantity <= foodItem.availableQuantity) {\n      this.service.addToCart(foodItem.foodItemId, quantity).subscribe(response => {\n        this.message = response;\n        this.showSuccessModal();\n      });\n      console.log(this.message);\n    } else {\n      alert('Quantity exceeds available quantity');\n    }\n  }\n  showSuccessModal() {\n    const modal = document.getElementById('successModal');\n    if (modal) {\n      modal.style.display = 'block';\n    }\n  }\n  closeSuccessModal() {\n    const modal = document.getElementById('successModal');\n    if (modal) {\n      modal.style.display = 'none';\n    }\n  }\n  increaseQuantity(i) {\n    this.quantities[i]++;\n  }\n  decreaseQuantity(i) {\n    this.quantities[i]--;\n  }\n  filterByCategory(category) {\n    this.selectedCategory = category;\n    if (category) {\n      this.filteredFoodItems = this.foodItems.filter(foodItem => foodItem.category.categoryId === category.categoryId);\n    } else {\n      this.filteredFoodItems = this.foodItems;\n    }\n  }\n  applyFilters() {\n    this.filterByCategory(this.selectedCategory);\n    this.filteredFoodItems = this.filteredFoodItems.filter(item => item.name.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    if (this.selectedSortOption === 'lowToHigh') {\n      this.filteredFoodItems.sort((a, b) => a.price - b.price);\n    } else if (this.selectedSortOption === 'highToLow') {\n      this.filteredFoodItems.sort((a, b) => b.price - a.price);\n    }\n    if (this.searchQuery) {\n      this.filteredFoodItems = this.filteredFoodItems.filter(item => item.name.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    }\n  }\n};\nFoodListComponent = __decorate([Component({\n  selector: 'app-food-list',\n  templateUrl: './food-list.component.html',\n  styleUrls: ['./food-list.component.css']\n})], FoodListComponent);","map":{"version":3,"names":["Component","FoodListComponent","constructor","service","foodItems","quantities","filteredFoodItems","categories","selectedCategory","message","searchQuery","selectedSortOption","ngOnInit","getCategories","getFoodItems","subscribe","initializeQuantities","Array","length","fill","addToCart","foodItem","quantity","alert","availableQuantity","foodItemId","response","showSuccessModal","console","log","modal","document","getElementById","style","display","closeSuccessModal","increaseQuantity","i","decreaseQuantity","filterByCategory","category","filter","categoryId","applyFilters","item","name","toLowerCase","includes","sort","a","b","price","__decorate","selector","templateUrl","styleUrls"],"sources":["F:\\PP\\RLL\\FoodBox\\src\\app\\food-list\\food-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../cart.service';\nimport { Category, FoodItem } from '../food-item.model';\n\n@Component({\n  selector: 'app-food-list',\n  templateUrl: './food-list.component.html',\n  styleUrls: ['./food-list.component.css']\n})\nexport class FoodListComponent implements OnInit {\n  constructor(private service: CartService) { }\n  foodItems: FoodItem[] = [];\n  quantities: number[] = [];\n  filteredFoodItems: FoodItem[] = [];\n  categories: Category[] = [];\n  selectedCategory: Category | null = null;\n  message = '';\n  searchQuery = '';\n  selectedSortOption: string = 'default';\n  ngOnInit(): void {\n    this.getCategories();\n    this.getFoodItems();\n  }\n  getCategories() {\n    this.service.getCategories().subscribe(categories => {\n      this.categories = categories;\n\n    });\n  }\n\n  getFoodItems(): void {\n    this.service.getFoodItems().subscribe(foodItems => {\n      this.foodItems = foodItems;\n      this.filteredFoodItems = foodItems;\n      this.initializeQuantities();\n    });\n  }\n  initializeQuantities(): void {\n    this.quantities = new Array(this.foodItems.length).fill(1);\n  }\n  addToCart(foodItem: FoodItem, quantity: number): void {\n    if (quantity <= 0) {\n      alert('Please select a valid quantity');\n    }\n    else if (quantity <= foodItem.availableQuantity) {\n      this.service.addToCart(foodItem.foodItemId, quantity).subscribe(\n        response => {this.message = response;\n          this.showSuccessModal();}\n      );\n      console.log(this.message);\n\n    } else {\n      alert('Quantity exceeds available quantity');\n    }\n  }\n  showSuccessModal(): void {\n    const modal = document.getElementById('successModal');\n    if (modal) {\n      modal.style.display = 'block';\n    }\n  }\n  closeSuccessModal(): void {\n    const modal = document.getElementById('successModal');\n    if (modal) {\n      modal.style.display = 'none';\n    }\n  }\n  increaseQuantity(i: number): void {\n    this.quantities[i]++;\n  }\n\n  decreaseQuantity(i: number): void {\n    this.quantities[i]--;\n  }\n  filterByCategory(category: Category | null): void {\n    this.selectedCategory = category;\n    if (category) {\n      this.filteredFoodItems = this.foodItems.filter(\n        foodItem => foodItem.category.categoryId === category.categoryId\n        \n      );\n    } else {\n      this.filteredFoodItems = this.foodItems;\n    }\n  }\n  applyFilters(): void {\n    this.filterByCategory(this.selectedCategory);\n    this.filteredFoodItems = this.filteredFoodItems.filter(item =>\n      item.name.toLowerCase().includes(this.searchQuery.toLowerCase())\n    );\n    if (this.selectedSortOption === 'lowToHigh') {\n      this.filteredFoodItems.sort((a, b) => a.price - b.price);\n    } else if (this.selectedSortOption === 'highToLow') {\n      this.filteredFoodItems.sort((a, b) => b.price - a.price);\n    }\n\n    if (this.searchQuery) {\n      this.filteredFoodItems = this.filteredFoodItems.filter(item =>\n        item.name.toLowerCase().includes(this.searchQuery.toLowerCase())\n      );\n    }\n  }\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}