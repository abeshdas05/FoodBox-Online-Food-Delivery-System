{"ast":null,"code":"var _class;\nimport { FoodItem } from '../food-item.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../cart.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction FoodItemsManagementComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\nfunction FoodItemsManagementComponent_ng_template_1_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵelement(11, \"img\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function FoodItemsManagementComponent_ng_template_1_tr_23_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const foodItem_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.editFoodItem(foodItem_r7));\n    });\n    i0.ɵɵtext(14, \" Edit \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"td\")(16, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function FoodItemsManagementComponent_ng_template_1_tr_23_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const foodItem_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.deleteFoodItem(foodItem_r7));\n    });\n    i0.ɵɵtext(17, \" Delete \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const foodItem_r7 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(foodItem_r7.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(foodItem_r7.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(foodItem_r7.availableQuantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(foodItem_r7.enabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", foodItem_r7.imagePath, i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", foodItem_r7.name);\n  }\n}\nfunction FoodItemsManagementComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"h2\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementStart(5, \"div\", 6)(6, \"div\")(7, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function FoodItemsManagementComponent_ng_template_1_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.enableAdd());\n    });\n    i0.ɵɵtext(8, \" Add New Food Item \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(9, \"br\")(10, \"br\");\n    i0.ɵɵelementStart(11, \"table\", 8)(12, \"thead\")(13, \"tr\")(14, \"th\");\n    i0.ɵɵtext(15, \"Name & Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"th\");\n    i0.ɵɵtext(17, \"Available Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"th\");\n    i0.ɵɵtext(19, \"Enabled\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"th\");\n    i0.ɵɵtext(21, \"Image Preview\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(22, \"tbody\");\n    i0.ɵɵtemplate(23, FoodItemsManagementComponent_ng_template_1_tr_23_Template, 18, 6, \"tr\", 9);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" List of Food Items - \", ctx_r2.selectedCategory.name, \" \");\n    i0.ɵɵadvance(20);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.foodItems);\n  }\n}\nfunction FoodItemsManagementComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\nfunction FoodItemsManagementComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function FoodItemsManagementComponent_ng_template_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.ngOnInit());\n    });\n    i0.ɵɵtext(1, \"Go Back\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\");\n    i0.ɵɵtext(6, \"Add New Food Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"br\");\n    i0.ɵɵelementStart(8, \"form\")(9, \"div\", 14);\n    i0.ɵɵtext(10, \" Name \");\n    i0.ɵɵelementStart(11, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function FoodItemsManagementComponent_ng_template_4_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.newFoodItem.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 14);\n    i0.ɵɵtext(13, \" Description \");\n    i0.ɵɵelementStart(14, \"textarea\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function FoodItemsManagementComponent_ng_template_4_Template_textarea_ngModelChange_14_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.newFoodItem.description = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 14);\n    i0.ɵɵtext(16, \" Price \");\n    i0.ɵɵelementStart(17, \"input\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function FoodItemsManagementComponent_ng_template_4_Template_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.newFoodItem.price = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\", 14);\n    i0.ɵɵtext(19, \" Available Quantity \");\n    i0.ɵɵelementStart(20, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function FoodItemsManagementComponent_ng_template_4_Template_input_ngModelChange_20_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.newFoodItem.availableQuantity = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(21, \" Enabled \");\n    i0.ɵɵelementStart(22, \"div\", 19)(23, \"input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function FoodItemsManagementComponent_ng_template_4_Template_input_ngModelChange_23_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.newFoodItem.enabled = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \" True \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 19)(26, \"input\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function FoodItemsManagementComponent_ng_template_4_Template_input_ngModelChange_26_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.newFoodItem.enabled = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \" False \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function FoodItemsManagementComponent_ng_template_4_Template_button_click_28_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.addFoodItem(ctx_r21.newFoodItem));\n    });\n    i0.ɵɵelementStart(29, \"div\", 14);\n    i0.ɵɵtext(30, \" Image URL \");\n    i0.ɵɵelementStart(31, \"input\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function FoodItemsManagementComponent_ng_template_4_Template_input_ngModelChange_31_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.newFoodItem.imagePath = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(32, \" Add \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.newFoodItem.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.newFoodItem.description);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.newFoodItem.price);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.newFoodItem.availableQuantity);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.newFoodItem.enabled);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.newFoodItem.enabled);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.newFoodItem.imagePath);\n  }\n}\nexport class FoodItemsManagementComponent {\n  constructor(service, route) {\n    this.service = service;\n    this.route = route;\n    this.showList = true;\n    this.showAdd = false;\n    this.newFoodItem = new FoodItem();\n    this.foodItems = [];\n  }\n  ngOnInit() {\n    // Load food items based on the category ID from route\n    this.showAdd = false;\n    this.categoryId = this.route.snapshot.params[`categoryId`];\n    this.loadFoodItems(this.categoryId);\n    this.getCategory();\n  }\n  enableAdd() {\n    this.showList = false;\n    this.showAdd = true;\n  }\n  loadFoodItems(categoryId) {\n    this.service.getFoodItemsByCategory(categoryId).subscribe(foodItems => {\n      this.foodItems = foodItems;\n    });\n  }\n  getCategory() {\n    this.service.getCategoryById(this.categoryId).subscribe(category => this.selectedCategory = category);\n  }\n  editFoodItem(foodItem) {}\n  deleteFoodItem(foodItem) {}\n  // showAddForm(): void {\n  //   this.selectedFoodItem = {\n  //     foodItemId: 0,\n  //     name: '',\n  //     description: '',\n  //     price: 0,\n  //     imagePath: '',\n  //     availableQuantity: 0,\n  //     enabled: true\n  //   };\n  //   this.showEditFormVar = true;\n  // }\n  // showEditForm(foodItem: FoodItem): void {\n  //   this.selectedFoodItem = foodItem;\n  //   this.showEditFormVar = true;\n  // }\n  // saveFoodItem(): void {\n  //   // Call your service to save the food item (add/edit)\n  //   this.service.saveFoodItem(this.selectedFoodItem).subscribe(() => {\n  //     this.loadFoodItems(this.selectedFoodItem.category.categoryId);\n  //     this.cancelEdit();\n  //   });\n  // }\n  // deleteFoodItem(foodItemId: number): void {\n  //   // Call your service to delete the food item\n  //   this.service.deleteFoodItem(foodItemId).subscribe(() => {\n  //     this.loadFoodItems(this.selectedFoodItem.category.categoryId);\n  //   });\n  // }\n  // cancelEdit(): void {\n  //   this.selectedFoodItem = undefined;\n  //   this.showEditForm = false;\n  // }\n  // onImageChange(event: Event): void {\n  //   const input = event.target as HTMLInputElement;\n  //   if (input.files && input.files.length > 0) {\n  //     const file = input.files[0];\n  //     this.newFoodItem.imageFile = file;\n  //     const reader = new FileReader();\n  //     reader.onload = (e) => {\n  //       this.previewImage = e.target?.result as string;\n  //     };\n  //     reader.readAsDataURL(file);\n  //   }\n  // }\n  addFoodItem(foodItem) {\n    console.log(foodItem);\n    this.service.addFoodItem(this.categoryId, foodItem).subscribe(() => {\n      this.ngOnInit();\n    });\n  }\n}\n_class = FoodItemsManagementComponent;\n_class.ɵfac = function FoodItemsManagementComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CartService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-food-items-management\"]],\n  decls: 6,\n  vars: 4,\n  consts: [[4, \"ngIf\", \"ngIfThen\"], [\"listOfFood\", \"\"], [\"addFood\", \"\"], [1, \"row\"], [1, \"col-md-10\", 2, \"height\", \"100vh\", \"margin\", \"0 auto\"], [2, \"text-align\", \"center\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\"], [1, \"btn\", \"btn-sm\", \"btn-success\", 3, \"click\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"height\", \"250px\", \"width\", \"250px\", 3, \"src\", \"alt\"], [1, \"btn\", \"btn-sm\", \"btn-info\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"foodName\", \"name\", \"foodName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"aria-label\", \"With textarea\", \"id\", \"foodDescription\", \"name\", \"foodDescription\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"id\", \"foodPrice\", \"name\", \"foodPrice\", \"min\", \"0\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"id\", \"foodAvailableQuantity\", \"name\", \"foodAvailableQuantity\", \"min\", \"1\", \"size\", \"1\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-check\"], [\"type\", \"radio\", \"name\", \"foodEnabledTrue\", \"id\", \"foodEnabledTrue\", \"value\", \"true\", \"checked\", \"\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"radio\", \"name\", \"foodEnabledFalse\", \"id\", \"foodEnabledFalse\", \"value\", \"false\", \"checked\", \"\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-dark\", 3, \"click\"], [\"type\", \"text\", \"id\", \"foodimagePath\", \"name\", \"foodimagePath\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function FoodItemsManagementComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FoodItemsManagementComponent_span_0_Template, 1, 0, \"span\", 0);\n      i0.ɵɵtemplate(1, FoodItemsManagementComponent_ng_template_1_Template, 24, 2, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(3, FoodItemsManagementComponent_span_3_Template, 1, 0, \"span\", 0);\n      i0.ɵɵtemplate(4, FoodItemsManagementComponent_ng_template_4_Template, 33, 7, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n      const _r4 = i0.ɵɵreference(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.showList)(\"ngIfThen\", _r1);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAdd)(\"ngIfThen\", _r4);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.RadioControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinValidator, i4.NgModel, i4.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FoodItem","i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","FoodItemsManagementComponent_ng_template_1_tr_23_Template_button_click_13_listener","restoredCtx","ɵɵrestoreView","_r9","foodItem_r7","$implicit","ctx_r8","ɵɵnextContext","ɵɵresetView","editFoodItem","FoodItemsManagementComponent_ng_template_1_tr_23_Template_button_click_16_listener","ctx_r10","deleteFoodItem","ɵɵadvance","ɵɵtextInterpolate","name","description","availableQuantity","enabled","ɵɵpropertyInterpolate","imagePath","ɵɵsanitizeUrl","FoodItemsManagementComponent_ng_template_1_Template_button_click_7_listener","_r12","ctx_r11","enableAdd","ɵɵtemplate","FoodItemsManagementComponent_ng_template_1_tr_23_Template","ɵɵtextInterpolate1","ctx_r2","selectedCategory","ɵɵproperty","foodItems","FoodItemsManagementComponent_ng_template_4_Template_button_click_0_listener","_r14","ctx_r13","ngOnInit","FoodItemsManagementComponent_ng_template_4_Template_input_ngModelChange_11_listener","$event","ctx_r15","newFoodItem","FoodItemsManagementComponent_ng_template_4_Template_textarea_ngModelChange_14_listener","ctx_r16","FoodItemsManagementComponent_ng_template_4_Template_input_ngModelChange_17_listener","ctx_r17","price","FoodItemsManagementComponent_ng_template_4_Template_input_ngModelChange_20_listener","ctx_r18","FoodItemsManagementComponent_ng_template_4_Template_input_ngModelChange_23_listener","ctx_r19","FoodItemsManagementComponent_ng_template_4_Template_input_ngModelChange_26_listener","ctx_r20","FoodItemsManagementComponent_ng_template_4_Template_button_click_28_listener","ctx_r21","addFoodItem","FoodItemsManagementComponent_ng_template_4_Template_input_ngModelChange_31_listener","ctx_r22","ctx_r5","FoodItemsManagementComponent","constructor","service","route","showList","showAdd","categoryId","snapshot","params","loadFoodItems","getCategory","getFoodItemsByCategory","subscribe","getCategoryById","category","foodItem","console","log","ɵɵdirectiveInject","i1","CartService","i2","ActivatedRoute","selectors","decls","vars","consts","template","FoodItemsManagementComponent_Template","rf","ctx","FoodItemsManagementComponent_span_0_Template","FoodItemsManagementComponent_ng_template_1_Template","ɵɵtemplateRefExtractor","FoodItemsManagementComponent_span_3_Template","FoodItemsManagementComponent_ng_template_4_Template","_r1","_r4"],"sources":["F:\\PP\\RLL\\FoodBox\\src\\app\\food-items-management\\food-items-management.component.ts","F:\\PP\\RLL\\FoodBox\\src\\app\\food-items-management\\food-items-management.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { CartService } from '../cart.service';\nimport { Category, FoodItem } from '../food-item.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { noop } from 'rxjs';\n\n@Component({\n  selector: 'app-food-items-management',\n  templateUrl: './food-items-management.component.html',\n  styleUrls: ['./food-items-management.component.css']\n})\nexport class FoodItemsManagementComponent implements OnInit {\n  showList=true;\nshowAdd=false;\n  newFoodItem:FoodItem=new FoodItem();\n  foodItems:FoodItem[]=[];\n  selectedCategory!:Category;\n  categoryId!:number;\n  constructor(\n    private service: CartService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    // Load food items based on the category ID from route\n    this.showAdd=false;\n    this.categoryId = this.route.snapshot.params[`categoryId`];\n    this.loadFoodItems(this.categoryId);\n    this.getCategory();\n\n  }\n  enableAdd():void{\n    this.showList=false;\n    this.showAdd=true;\n  }\n  loadFoodItems(categoryId: number): void {\n    this.service.getFoodItemsByCategory(categoryId).subscribe(foodItems => {\n      this.foodItems = foodItems;\n    });\n  }\n  getCategory():void{\n    this.service.getCategoryById(this.categoryId).subscribe(\n      (category)=>this.selectedCategory=category\n    )\n  }\n  editFoodItem(foodItem:FoodItem){\n\n  }\n  deleteFoodItem(foodItem:FoodItem){\n    \n  }\n\n  // showAddForm(): void {\n  //   this.selectedFoodItem = {\n  //     foodItemId: 0,\n  //     name: '',\n  //     description: '',\n  //     price: 0,\n  //     imagePath: '',\n  //     availableQuantity: 0,\n  //     enabled: true\n  //   };\n  //   this.showEditFormVar = true;\n  // }\n\n  // showEditForm(foodItem: FoodItem): void {\n  //   this.selectedFoodItem = foodItem;\n  //   this.showEditFormVar = true;\n  // }\n\n  // saveFoodItem(): void {\n  //   // Call your service to save the food item (add/edit)\n  //   this.service.saveFoodItem(this.selectedFoodItem).subscribe(() => {\n  //     this.loadFoodItems(this.selectedFoodItem.category.categoryId);\n  //     this.cancelEdit();\n  //   });\n  // }\n\n  // deleteFoodItem(foodItemId: number): void {\n  //   // Call your service to delete the food item\n  //   this.service.deleteFoodItem(foodItemId).subscribe(() => {\n  //     this.loadFoodItems(this.selectedFoodItem.category.categoryId);\n  //   });\n  // }\n\n  // cancelEdit(): void {\n  //   this.selectedFoodItem = undefined;\n  //   this.showEditForm = false;\n  // }\n  // onImageChange(event: Event): void {\n  //   const input = event.target as HTMLInputElement;\n  //   if (input.files && input.files.length > 0) {\n  //     const file = input.files[0];\n  //     this.newFoodItem.imageFile = file;\n\n  //     const reader = new FileReader();\n  //     reader.onload = (e) => {\n  //       this.previewImage = e.target?.result as string;\n  //     };\n  //     reader.readAsDataURL(file);\n  //   }\n  // }\n\n  addFoodItem(foodItem:FoodItem): void {\n    console.log(foodItem);\n    \n    this.service.addFoodItem(this.categoryId,foodItem).subscribe(\n     ()=>{ \n    this.ngOnInit();\n     }\n    )\n  }\n\n//     this.previewImage = undefined;\n//     this.isAdding = false;\n//   }\n// }\n}","<span *ngIf=\"showList; then listOfFood\"></span>\n<ng-template #listOfFood>\n  <div class=\"row\">\n    <div class=\"col-md-10\" style=\"height: 100vh; margin: 0 auto\">\n      <h2 style=\"text-align: center\">\n        List of Food Items - {{ selectedCategory.name }}\n      </h2>\n      <br />\n      <div style=\"display: flex; justify-content: space-between\">\n        <div>\n          <button (click)=\"enableAdd()\" class=\"btn btn-sm btn-success\">\n            Add New Food Item\n          </button>\n        </div>\n      </div>\n      <br />\n      <br />\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Name & Description</th>\n            <th>Available Quantity</th>\n            <th>Enabled</th>\n            <th>Image Preview</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let foodItem of foodItems\">\n            <td>\n              <h3>{{ foodItem.name }}</h3>\n              <p>{{ foodItem.description }}</p>\n            </td>\n            <td>{{ foodItem.availableQuantity }}</td>\n            <td>{{ foodItem.enabled }}</td>\n            <td>\n              <img src=\"{{ foodItem.imagePath }}\" alt=\"{{ foodItem.name }}\" height=\"250px\" width=\"250px\" />\n            </td>\n            <td>\n              <button\n                class=\"btn btn-sm btn-info\"\n                (click)=\"editFoodItem(foodItem)\"\n              >\n                Edit\n              </button>\n            </td>\n            <td>\n              <button\n                class=\"btn btn-sm btn-danger\"\n                (click)=\"deleteFoodItem(foodItem)\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</ng-template>\n<span *ngIf=\"showAdd; then addFood\"></span>\n<ng-template #addFood>\n  <button class=\"btn btn-secondary btn-sm\" (click)=\"ngOnInit()\">Go Back</button>\n  <br />\n  <div class=\"row\">\n    <div class=\"col-md-10\" style=\"height: 100vh; margin: 0 auto\">\n      <h2>Add New Food Details</h2>\n      <br />\n      <form>\n        <div class=\"form-group\">\n          Name\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"foodName\"\n            name=\"foodName\"\n            [(ngModel)]=\"newFoodItem.name\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          Description\n          <textarea\n            class=\"form-control\"\n            aria-label=\"With textarea\"\n            id=\"foodDescription\"\n            name=\"foodDescription\"\n            [(ngModel)]=\"newFoodItem.description\"\n            required\n          ></textarea>\n        </div>\n        <div class=\"form-group\">\n          Price\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"foodPrice\"\n            name=\"foodPrice\"\n            min=\"0\"\n            [(ngModel)]=\"newFoodItem.price\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          Available Quantity\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"foodAvailableQuantity\"\n            name=\"foodAvailableQuantity\"\n            min=\"1\"\n            size=\"1\"\n            \n            [(ngModel)]=\"newFoodItem.availableQuantity\"\n            required\n          />\n        </div>\n        Enabled\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"foodEnabledTrue\"\n            id=\"foodEnabledTrue\"\n            value=\"true\"\n            [(ngModel)]=\"newFoodItem.enabled\"\n            checked\n          />\n          True\n        </div>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"foodEnabledFalse\"\n            id=\"foodEnabledFalse\"\n            value=\"false\"\n            [(ngModel)]=\"newFoodItem.enabled\"\n            checked\n          />\n          False\n        </div>\n        <button\n          type=\"submit\"\n          class=\"btn btn-dark\"\n          (click)=\"addFoodItem(newFoodItem)\"\n        >\n        <div class=\"form-group\">\n          Image URL\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"foodimagePath\"\n            name=\"foodimagePath\"\n            [(ngModel)]=\"newFoodItem.imagePath\"\n            required\n          />\n        </div>\n          Add\n        </button>\n      </form>\n    </div>\n  </div>\n</ng-template>\n<!-- <span *ngIf=\"individualEmployee; then empDetails\"></span>\n  <ng-template #empDetails>\n    <div class=\"row\" style=\"height: 100vh\">\n      <div class=\"col-md-10\" style=\"height: 100vh; margin: 0 auto\">\n        <br />\n        <table class=\"table table-dark\">\n          <tbody>\n            <tr>\n              <td colspan=\"2\">\n                <h2>\n                  Details of\n                  <em\n                    >{{ newEmployee.first_name }}\n                    {{ newEmployee.last_name }}</em\n                  >\n                </h2>\n              </td>\n            </tr>\n            <tr>\n              <th>Employee Id</th>\n              <td>{{ newEmployee.id }}</td>\n            </tr>\n            <tr>\n              <th>Employee First Name</th>\n              <td>{{ newEmployee.first_name }}</td>\n            </tr>\n            <tr>\n              <th>Employee Last Name</th>\n              <td>{{ newEmployee.last_name }}</td>\n            </tr>\n            <tr>\n              <th>Employee Email</th>\n              <td>{{ newEmployee.email }}</td>\n            </tr>\n            <tr>\n              <td colspan=\"2\">\n                <button (click)=\"ngOnInit()\" class=\"btn btn-info btn-sm\">\n                  Employee List\n                </button>\n                &nbsp;\n                <button\n                  (click)=\"deleteEmployee(newEmployee.id)\"\n                  class=\"btn btn-danger btn-sm\"\n                >\n                  Delete\n                </button>\n                &nbsp;\n                <button\n                  (click)=\"getEmployeeForEdit(newEmployee)\"\n                  class=\"btn btn-warning btn-sm\"\n                >\n                  Update\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </ng-template>\n  <span *ngIf=\"editEmployee; then editEmp\"></span>\n  <ng-template #editEmp>\n    <button class=\"btn btn-secondary btn-sm\" (click)=\"ngOnInit()\">\n      Go Back\n    </button>\n    <br />\n    <div class=\"row\">\n      <div class=\"col-md-10\" style=\"height: 100vh; margin: 0 auto\">\n        <h2>Update Employees Details</h2>\n        <br />\n        <form>\n          <div class=\"form-group\">\n            <label for=\"firstName\">First Name</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"firstName\"\n              name=\"firstName\"\n              [(ngModel)]=\"newEmployee.first_name\"\n              required\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"lastName\">Last Name</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"lastName\"\n              name=\"lastName\"\n              [(ngModel)]=\"newEmployee.last_name\"\n              required\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              id=\"email\"\n              name=\"email\"\n              [(ngModel)]=\"newEmployee.email\"\n              required\n            />\n          </div>\n          <button type=\"submit\" class=\"btn btn-dark\" (click)=\"updateEmployee()\">\n            Update\n          </button>\n        </form>\n      </div>\n    </div>\n  </ng-template>\n</div>\n<div *ngIf=\"!admin.loggedIn\">\n  <div style=\"height: 100vh\">\n    <h1 style=\"color: red; text-align: center\">Invalid Access!</h1>\n  </div>\n</div> -->\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}