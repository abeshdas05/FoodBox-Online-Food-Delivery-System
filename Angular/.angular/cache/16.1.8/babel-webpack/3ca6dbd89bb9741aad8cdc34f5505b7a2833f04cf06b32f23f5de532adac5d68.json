{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport { User } from '../model-classes/user.model';\nimport { OrderDetails } from '../model-classes/order-summary.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../food-box.service\";\nimport * as i2 from \"../razorpay.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nfunction PaymentComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33)(1, \"div\", 34)(2, \"span\", 35);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction PaymentComponent_div_50_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 42)(1, \"div\", 43)(2, \"div\", 44)(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 45);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"currency\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cartItem_r3 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(cartItem_r3.foodItem.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" - \", cartItem_r3.quantity, \" pcs \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(8, 3, cartItem_r3.totalFoodItemCost, \"INR\"), \" \");\n  }\n}\nfunction PaymentComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 36);\n    i0.ɵɵtext(2, \" Cart Items: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\", 37);\n    i0.ɵɵtemplate(4, PaymentComponent_div_50_li_4_Template, 9, 6, \"li\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 39)(6, \"h2\", 40)(7, \"i\");\n    i0.ɵɵtext(8, \"Total Amount\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"input\", 41);\n    i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_div_50_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.orderDetails.amount = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.cartItems);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.orderDetails.amount)(\"value\", ctx_r1.cartItemsTotalCost());\n  }\n}\nexport class PaymentComponent {\n  constructor(service, razorpayService, route, builder, router) {\n    this.service = service;\n    this.razorpayService = razorpayService;\n    this.route = route;\n    this.builder = builder;\n    this.router = router;\n    this.user = new User();\n    this.orderDetails = new OrderDetails();\n    this.isLoading = false;\n    // address!: string;\n    // city!: string;\n    // state!: string;\n    // zip!: string;\n    this.cartItems = [];\n    this.emailInvalid = false;\n    this.contactInvalid = false;\n    this.totalCartCost = 0;\n    this.alertMessage = '';\n    this.regForm = this.builder.group({\n      amount: this.builder.control({\n        value: this.orderDetails.amount,\n        disabled: true\n      }, Validators.required),\n      email: this.builder.control({\n        value: this.orderDetails.email,\n        disabled: true\n      }, [Validators.required, Validators.email]),\n      contact: this.builder.control({\n        value: this.orderDetails.contact,\n        disabled: true\n      }, Validators.required),\n      name: this.builder.control({\n        value: this.orderDetails.name,\n        disabled: true\n      }, Validators.required),\n      address: this.builder.control('', Validators.required),\n      city: this.builder.control('', Validators.required),\n      state: this.builder.control('', Validators.required),\n      zip: this.builder.control('', Validators.required)\n    });\n    this.paymentForm = this.builder.group({\n      amount: [{\n        value: '',\n        disabled: true\n      }, Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      contact: ['', [Validators.required, Validators.pattern(/^\\d{10}$/)]],\n      name: ['', Validators.required],\n      address: ['', Validators.required],\n      city: ['', Validators.required],\n      state: ['', Validators.required],\n      zip: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.razorpayService.loadScript().subscribe(() => {\n      // Razorpay SDK loaded\n    });\n    this.email = this.route.snapshot.params[`email`];\n    this.getUser();\n    this.initializeOrderDetails();\n    this.getCartItems();\n    this.orderDetails.amount = this.cartItemsTotalCost();\n  }\n  getCartItems() {\n    this.service.getCartItems(this.user.userId).subscribe(cartItems => this.cartItems = cartItems);\n  }\n  cartItemsTotalCost() {\n    return this.cartItems.reduce((total, cartItem) => total + cartItem.totalFoodItemCost, 0);\n  }\n  getUser() {\n    this.service.getUserByEmail(this.email).subscribe(user => {\n      this.user = user;\n      console.log(this.user);\n    });\n  }\n  initializeOrderDetails() {\n    this.orderDetails.userId = this.user.userId;\n    this.orderDetails.name = this.user.name;\n    this.orderDetails.contact = this.user.mobile;\n    this.orderDetails.email = this.user.email;\n  }\n  makePayment() {\n    const userId = this.user.userId;\n    const paymentType = 'online';\n    const options = {\n      key: 'rzp_test_t51Ev8vhVfMTFO',\n      amount: this.orderDetails.amount * 100,\n      name: 'FoodBox',\n      description: 'Payment for your order',\n      handler: response => {\n        console.log(response);\n        this.orderDetails.paymentMethod = 'online';\n        this.orderDetails.paymentId = response.razorpay_payment_id;\n        this.service.createOrder(this.orderDetails).subscribe(data => {\n          this.orderDetails = data;\n          console.log('Order created:', data);\n        }, error => {\n          console.error('Error creating order:', error);\n        });\n        this.router.navigate(['/order-summary', this.orderDetails.orderId]);\n      },\n      prefill: {\n        email: this.orderDetails.email,\n        contact: this.orderDetails.contact,\n        name: this.orderDetails.name\n      },\n      notes: {\n        address: 'Your Address'\n      },\n      theme: {\n        color: '#6466e3'\n      },\n      modal: {\n        ondismiss: () => {\n          console.log('dismissed');\n        }\n      }\n    };\n    const rzp = new Razorpay(options);\n    rzp.on('payment.failed', response => {\n      console.log('Payment failed:', response.error.code, response.error.description);\n    });\n    rzp.open();\n    // Reset the amount after payment is made\n    rzp.on('payment.success', response => {\n      this.orderDetails.amount = 0; // Reset the amount to null\n    });\n  }\n\n  payWithCash() {\n    // Handle cash payment logic here\n    this.isLoading = true; // Show the spinner\n    setTimeout(() => {\n      this.orderDetails.paymentMethod = 'online';\n      this.service.createOrder(this.orderDetails).subscribe(data => {\n        console.log('Order created:', data);\n      }, error => {\n        console.error('Error creating order:', error);\n      });\n      this.router.navigate(['/order-summary', this.orderDetails.orderId]);\n      // Reset isLoading state after navigation\n      setTimeout(() => {\n        this.isLoading = false;\n      }, 100); // A small delay to ensure smooth transition\n    }, 100); // Wait for 0.1 seconds\n  }\n\n  validateEmail(email) {\n    this.emailInvalid = !/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/.test(email);\n  }\n  validateContact(contact) {\n    this.contactInvalid = !/^\\d{10}$/.test(contact);\n  }\n  get emailField() {\n    return this.regForm.get('email');\n  }\n  get contactField() {\n    return this.regForm.get('contact');\n  }\n  get nameField() {\n    return this.regForm.get('name');\n  }\n  get addressField() {\n    return this.regForm.get('address');\n  }\n  get cityField() {\n    return this.regForm.get('city');\n  }\n  get stateField() {\n    return this.regForm.get('state');\n  }\n  get zipField() {\n    return this.regForm.get('zip');\n  }\n}\n_class = PaymentComponent;\n_class.ɵfac = function PaymentComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FoodBoxService), i0.ɵɵdirectiveInject(i2.RazorpayService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-payment\"]],\n  decls: 51,\n  vars: 11,\n  consts: [[1, \"container-fluid\", \"text-dark\", 2, \"background-image\", \"url('https://images.pexels.com/photos/1037992/pexels-photo-1037992.jpeg?auto=compress&cs=tinysrgb&w=400')\", \"background-repeat\", \"no-repeat\", \"background-attachment\", \"fixed\", \"background-size\", \"cover\", \"width\", \"100%\"], [1, \"container-xxl\", \"py-5\"], [1, \"container\"], [1, \"row\", \"g-5\", \"align-items-center\"], [1, \"col-lg-6\"], [1, \"row\", \"g-6\"], [1, \"mb-5\", 3, \"ngSubmit\"], [1, \"text-center\"], [\"for\", \"amount\", 1, \"form-label\"], [1, \"input-group\", \"mb-3\"], [1, \"input-group-text\"], [\"type\", \"number\", \"id\", \"amount\", \"name\", \"amount\", \"required\", \"\", \"disabled\", \"\", 1, \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [1, \"mb-3\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"contact\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"contact\", \"name\", \"contact\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"address\", 1, \"form-label\"], [\"id\", \"address\", \"name\", \"address\", \"rows\", \"3\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"city\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"city\", \"name\", \"city\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"state\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"state\", \"name\", \"state\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"zip\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"zip\", \"name\", \"zip\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"py-2\", \"ml-2\", \"px-4\", \"mb-5\", 2, \"margin-left\", \"10px\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"py-2\", \"px-4\", \"mb-5\", 2, \"margin-right\", \"10px\", 3, \"click\"], [\"id\", \"spinner\", \"class\", \"show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center\", 4, \"ngIf\"], [1, \"col-lg-6\", \"mt-5\"], [1, \"\"], [4, \"ngIf\"], [\"id\", \"spinner\", 1, \"show\", \"bg-white\", \"position-fixed\", \"translate-middle\", \"w-100\", \"vh-100\", \"top-50\", \"start-50\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\", 2, \"width\", \"3rem\", \"height\", \"3rem\"], [1, \"sr-only\"], [1, \"section-title\", \"ff-secondary\", \"text-start\", \"text-primary\", \"fw-normal\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"mb-3\", \"mt-3\"], [1, \"text-center\", \"mb-3\"], [\"type\", \"number\", \"id\", \"amount\", \"name\", \"amount\", \"required\", \"\", \"disabled\", \"\", 1, \"text-center\", \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [1, \"list-group-item\"], [1, \"row\"], [1, \"col-md-8\"], [1, \"col-md-4\", \"text-right\"]],\n  template: function PaymentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function PaymentComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.makePayment();\n      });\n      i0.ɵɵelementStart(7, \"h2\", 7);\n      i0.ɵɵtext(8, \"Payment Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"label\", 8);\n      i0.ɵɵtext(10, \"Amount:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"span\", 10);\n      i0.ɵɵtext(13, \"\\u20B9\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.orderDetails.amount = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 12)(16, \"label\", 13);\n      i0.ɵɵtext(17, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.orderDetails.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 12)(20, \"label\", 15);\n      i0.ɵɵtext(21, \"Contact:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.orderDetails.contact = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 12)(24, \"label\", 17);\n      i0.ɵɵtext(25, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.orderDetails.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 12)(28, \"label\", 19);\n      i0.ɵɵtext(29, \"Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"textarea\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_textarea_ngModelChange_30_listener($event) {\n        return ctx.orderDetails.address = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 12)(32, \"label\", 21);\n      i0.ɵɵtext(33, \"City:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"input\", 22);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_34_listener($event) {\n        return ctx.orderDetails.city = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"div\", 12)(36, \"label\", 23);\n      i0.ɵɵtext(37, \"State:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"input\", 24);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_38_listener($event) {\n        return ctx.orderDetails.state = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"div\", 12)(40, \"label\", 25);\n      i0.ɵɵtext(41, \"ZIP Code:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"input\", 26);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_42_listener($event) {\n        return ctx.orderDetails.zip = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"button\", 27);\n      i0.ɵɵtext(44, \" Pay \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"button\", 28);\n      i0.ɵɵlistener(\"click\", function PaymentComponent_Template_button_click_45_listener() {\n        return ctx.payWithCash();\n      });\n      i0.ɵɵtext(46, \" Pay with Cash \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(47, PaymentComponent_div_47_Template, 4, 0, \"div\", 29);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(48, \"div\", 30)(49, \"form\", 31);\n      i0.ɵɵtemplate(50, PaymentComponent_div_50_Template, 10, 3, \"div\", 32);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.amount)(\"value\", ctx.cartItemsTotalCost());\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.contact);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.address);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.city);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.state);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.orderDetails.zip);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.cartItems.length > 0);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i5.CurrencyPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","User","OrderDetails","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","cartItem_r3","foodItem","name","ɵɵtextInterpolate1","quantity","ɵɵpipeBind2","totalFoodItemCost","ɵɵtemplate","PaymentComponent_div_50_li_4_Template","ɵɵlistener","PaymentComponent_div_50_Template_input_ngModelChange_9_listener","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","orderDetails","amount","ɵɵproperty","ctx_r1","cartItems","cartItemsTotalCost","PaymentComponent","constructor","service","razorpayService","route","builder","router","user","isLoading","emailInvalid","contactInvalid","totalCartCost","alertMessage","regForm","group","control","value","disabled","required","email","contact","address","city","state","zip","paymentForm","pattern","ngOnInit","loadScript","subscribe","snapshot","params","getUser","initializeOrderDetails","getCartItems","userId","reduce","total","cartItem","getUserByEmail","console","log","mobile","makePayment","paymentType","options","key","description","handler","response","paymentMethod","paymentId","razorpay_payment_id","createOrder","data","error","navigate","orderId","prefill","notes","theme","color","modal","ondismiss","rzp","Razorpay","on","code","open","payWithCash","setTimeout","validateEmail","test","validateContact","emailField","get","contactField","nameField","addressField","cityField","stateField","zipField","ɵɵdirectiveInject","i1","FoodBoxService","i2","RazorpayService","i3","ActivatedRoute","i4","FormBuilder","Router","selectors","decls","vars","consts","template","PaymentComponent_Template","rf","ctx","PaymentComponent_Template_form_ngSubmit_6_listener","PaymentComponent_Template_input_ngModelChange_14_listener","PaymentComponent_Template_input_ngModelChange_18_listener","PaymentComponent_Template_input_ngModelChange_22_listener","PaymentComponent_Template_input_ngModelChange_26_listener","PaymentComponent_Template_textarea_ngModelChange_30_listener","PaymentComponent_Template_input_ngModelChange_34_listener","PaymentComponent_Template_input_ngModelChange_38_listener","PaymentComponent_Template_input_ngModelChange_42_listener","PaymentComponent_Template_button_click_45_listener","PaymentComponent_div_47_Template","PaymentComponent_div_50_Template","length"],"sources":["F:\\PP\\RLL\\FoodBox\\src\\app\\payment\\payment.component.ts","F:\\PP\\RLL\\FoodBox\\src\\app\\payment\\payment.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FoodBoxService } from '../food-box.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CartItem } from '../model-classes/cart-item.model';\nimport { RazorpayService } from '../razorpay.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { User } from '../model-classes/user.model';\nimport { OrderDetails } from '../model-classes/order-summary.model';\ndeclare var Razorpay: any;\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n  user:User=new User();\n  orderDetails:OrderDetails=new OrderDetails();\n  isLoading: boolean = false;\n  // amount!: number;\n   email!: string; //USER EMAIL <=====================\n  // address!: string;\n  // city!: string;\n  // state!: string;\n  // zip!: string;\n\n  cartItems: CartItem[] = [];\n  paymentForm: FormGroup;\n  emailInvalid: boolean = false;\n  contactInvalid: boolean = false;\n  totalCartCost: number = 0;\n  alertMessage='';\n\n  constructor(\n    private service: FoodBoxService,\n    private razorpayService: RazorpayService,\n    private route: ActivatedRoute,\n    private builder: FormBuilder,\n    private router:Router) { \n      this.paymentForm = this.builder.group({\n        amount: [{ value: '', disabled: true }, Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        contact: ['', [Validators.required, Validators.pattern(/^\\d{10}$/)]],\n        name: ['', Validators.required],\n        address: ['', Validators.required],\n        city: ['', Validators.required],\n        state: ['', Validators.required],\n        zip: ['', Validators.required]\n      });\n    }\n  regForm = this.builder.group({\n    amount: this.builder.control({ value: this.orderDetails.amount, disabled: true }, Validators.required),\n    email: this.builder.control({ value: this.orderDetails.email, disabled: true }, [Validators.required, Validators.email]),\n    contact: this.builder.control({ value: this.orderDetails.contact, disabled: true }, Validators.required),\n    name: this.builder.control({ value: this.orderDetails.name, disabled: true }, Validators.required),\n    address: this.builder.control('', Validators.required),\n    city: this.builder.control('', Validators.required),\n    state: this.builder.control('', Validators.required),\n    zip: this.builder.control('', Validators.required)\n  });\n \n  ngOnInit(): void {\n    this.razorpayService.loadScript().subscribe(() => {\n      // Razorpay SDK loaded\n    });\n    this.email = this.route.snapshot.params[`email`];\n    this.getUser();\n    this.initializeOrderDetails();\n    this.getCartItems();\n    this.orderDetails.amount=this.cartItemsTotalCost();\n  }\n  getCartItems(): void {\n    this.service.getCartItems(this.user.userId).subscribe(\n      (cartItems) => this.cartItems = cartItems\n    )\n  }\n  cartItemsTotalCost(): number {\n    return this.cartItems.reduce((total, cartItem) => total + cartItem.totalFoodItemCost, 0);\n  }\n  getUser(): void {\n\n    this.service.getUserByEmail(this.email).subscribe(\n\n      user => {\n        this.user = user;\n        console.log(this.user);\n      }\n    )\n  }\n  initializeOrderDetails(){\n    this.orderDetails.userId=this.user.userId;\n    this.orderDetails.name=this.user.name;\n    this.orderDetails.contact=this.user.mobile;\n    this.orderDetails.email=this.user.email;\n    \n  }\n  makePayment() {\n    const userId = this.user.userId;\n    const paymentType = 'online';\n    const options: any = {\n      key: 'rzp_test_t51Ev8vhVfMTFO',\n      amount: this.orderDetails.amount * 100, // Amount in paisa\n      name: 'FoodBox',\n      description: 'Payment for your order',\n      handler: (response: any) => {\n        console.log(response);\n        this.orderDetails.paymentMethod='online';\n        this.orderDetails.paymentId=response.razorpay_payment_id;\n        this.service.createOrder(this.orderDetails).subscribe(\n          (data: any) => {\n            this.orderDetails=data;\n            console.log('Order created:', data);\n          },\n          (error: any) => {\n            console.error('Error creating order:', error);\n          }\n        );\n        this.router.navigate(['/order-summary',this.orderDetails.orderId]);\n      },\n      prefill: {\n        email: this.orderDetails.email,\n        contact: this.orderDetails.contact,\n        name: this.orderDetails.name\n      },\n      notes: {\n        address: 'Your Address'\n      },\n      theme: {\n        color: '#6466e3'\n      },\n      modal: {\n        ondismiss: () => {\n          console.log('dismissed');\n        }\n      }\n    };\n\n    const rzp = new Razorpay(options);\n    rzp.on('payment.failed', (response: any) => {\n      console.log('Payment failed:', response.error.code, response.error.description);\n    });\n    rzp.open();\n  \n    // Reset the amount after payment is made\n    rzp.on('payment.success', (response: any) => {\n      this.orderDetails.amount = 0; // Reset the amount to null\n    });\n  }\n\n  payWithCash() {\n    // Handle cash payment logic here\n      this.isLoading = true; // Show the spinner\n\n    setTimeout(() => {\n    this.orderDetails.paymentMethod='online';\n    this.service.createOrder(this.orderDetails).subscribe(\n      (data: any) => {\n        console.log('Order created:', data);\n      },\n      (error: any) => {\n        console.error('Error creating order:', error);\n      }\n    );\n\n    this.router.navigate(['/order-summary',this.orderDetails.orderId]);\n  \n\n  // Reset isLoading state after navigation\n  setTimeout(() => {\n    this.isLoading = false;\n  }, 100); // A small delay to ensure smooth transition\n}, 100); // Wait for 0.1 seconds\n}\n\n  validateEmail(email: string): void {\n    this.emailInvalid = !/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/.test(email);\n  }\n\n  validateContact(contact: string): void {\n    this.contactInvalid = !/^\\d{10}$/.test(contact);\n  }\n\n  get emailField() {\n    return this.regForm.get('email');\n  }\n\n  get contactField() {\n    return this.regForm.get('contact');\n  }\n\n  get nameField() {\n    return this.regForm.get('name');\n  }\n\n  get addressField() {\n    return this.regForm.get('address');\n  }\n\n  get cityField() {\n    return this.regForm.get('city');\n  }\n\n  get stateField() {\n    return this.regForm.get('state');\n  }\n\n  get zipField() {\n    return this.regForm.get('zip');\n  }\n\n\n\n\n\n}\n","<div\n  class=\"container-fluid text-dark\"\n  style=\"\n    background-image: url('https://images.pexels.com/photos/1037992/pexels-photo-1037992.jpeg?auto=compress&cs=tinysrgb&w=400');\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    background-size: cover;\n    width: 100%;\n  \"\n>\n  <div class=\"container-xxl py-5\">\n    <div class=\"container\">\n      <div class=\"row g-5 align-items-center\">\n        <div class=\"col-lg-6\">\n          <div class=\"row g-6\">\n            <form (ngSubmit)=\"makePayment()\" class=\"mb-5\">\n              <h2 class=\"text-center\">Payment Form</h2>\n              <label for=\"amount\" class=\"form-label\">Amount:</label>\n              <div class=\"input-group mb-3\">\n                <span class=\"input-group-text\">₹</span>\n                <input\n                  type=\"number\"\n                  id=\"amount\"\n                  class=\"form-control\"\n                  [(ngModel)]=\"orderDetails.amount\"\n                  name=\"amount\"\n                  [value]=\"cartItemsTotalCost()\"\n                  required\n                  disabled\n                />\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"email\" class=\"form-label\">Email:</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  class=\"form-control\"\n                  [(ngModel)]=\"orderDetails.email\"\n                  name=\"email\"\n                  required\n                />\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"contact\" class=\"form-label\">Contact:</label>\n                <input\n                  type=\"text\"\n                  id=\"contact\"\n                  class=\"form-control\"\n                  [(ngModel)]=\"orderDetails.contact\"\n                  name=\"contact\"\n                  required\n                />\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"name\" class=\"form-label\">Name:</label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  class=\"form-control\"\n                  [(ngModel)]=\"orderDetails.name\"\n                  name=\"name\"\n                  required\n                />\n              </div>\n              <!-- Additional address details form -->\n              <div class=\"mb-3\">\n                <label for=\"address\" class=\"form-label\">Address:</label>\n                <textarea\n                  id=\"address\"\n                  class=\"form-control\"\n                  [(ngModel)]=\"orderDetails.address\"\n                  name=\"address\"\n                  rows=\"3\"\n                  required\n                ></textarea>\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"city\" class=\"form-label\">City:</label>\n                <input\n                  type=\"text\"\n                  id=\"city\"\n                  class=\"form-control\"\n                  [(ngModel)]=\"orderDetails.city\"\n                  name=\"city\"\n                  required\n                />\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"state\" class=\"form-label\">State:</label>\n                <input\n                  type=\"text\"\n                  id=\"state\"\n                  class=\"form-control\"\n                  [(ngModel)]=\"orderDetails.state\"\n                  name=\"state\"\n                  required\n                />\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"zip\" class=\"form-label\">ZIP Code:</label>\n                <input\n                  type=\"text\"\n                  id=\"zip\"\n                  class=\"form-control\"\n                  [(ngModel)]=\"orderDetails.zip\"\n                  name=\"zip\"\n                  required\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                class=\"btn btn-primary py-2 ml-2 px-4 mb-5\"\n                style=\"margin-left: 10px\"\n              >\n                Pay\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-secondary py-2 px-4 mb-5\"\n                style=\"margin-right: 10px\"\n                (click)=\"payWithCash()\"\n              >\n                Pay with Cash\n              </button>\n              <!-- Spinner -->\n              <div\n                id=\"spinner\"\n                *ngIf=\"isLoading\"\n                class=\"show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center\"\n              >\n                <div\n                  class=\"spinner-border text-primary\"\n                  style=\"width: 3rem; height: 3rem\"\n                  role=\"status\"\n                >\n                  <span class=\"sr-only\">Loading...</span>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-6 mt-5\">\n          <form class=\"\">\n            <div *ngIf=\"cartItems.length > 0\">\n              <h3\n                class=\"section-title ff-secondary text-start text-primary fw-normal\"\n              >\n                Cart Items:\n              </h3>\n              <ul class=\"list-group\">\n                <li *ngFor=\"let cartItem of cartItems\" class=\"list-group-item\">\n                  <div class=\"row\">\n                    <div class=\"col-md-8\">\n                      <strong>{{ cartItem.foodItem.name }}</strong> -\n                      {{ cartItem.quantity }} pcs\n                    </div>\n                    <div class=\"col-md-4 text-right\">\n                      {{ cartItem.totalFoodItemCost | currency : \"INR\" }}\n                    </div>\n                  </div>\n                </li>\n              </ul>\n              <div class=\"mb-3 mt-3\">\n                <h2 class=\"text-center mb-3\"><i>Total Amount</i></h2>\n                <input\n                  type=\"number\"\n                  id=\"amount\"\n                  class=\"text-center form-control\"\n                  [(ngModel)]=\"orderDetails.amount\"\n                  name=\"amount\"\n                  [value]=\"cartItemsTotalCost()\"\n                  required\n                  disabled\n                />\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"],"mappings":";AAKA,SAAiCA,UAAU,QAAQ,gBAAgB;AACnE,SAASC,IAAI,QAAQ,6BAA6B;AAClD,SAASC,YAAY,QAAQ,sCAAsC;;;;;;;;;ICuHrDC,EAAA,CAAAC,cAAA,cAIC;IAMyBD,EAAA,CAAAE,MAAA,iBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAezCH,EAAA,CAAAC,cAAA,aAA+D;IAGjDD,EAAA,CAAAE,MAAA,GAA4B;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,GAEhD;IAAAF,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,cAAiC;IAC/BD,EAAA,CAAAE,MAAA,GACF;;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IALIH,EAAA,CAAAI,SAAA,GAA4B;IAA5BJ,EAAA,CAAAK,iBAAA,CAAAC,WAAA,CAAAC,QAAA,CAAAC,IAAA,CAA4B;IAAUR,EAAA,CAAAI,SAAA,GAEhD;IAFgDJ,EAAA,CAAAS,kBAAA,QAAAH,WAAA,CAAAI,QAAA,UAEhD;IAEEV,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAS,kBAAA,MAAAT,EAAA,CAAAW,WAAA,OAAAL,WAAA,CAAAM,iBAAA,cACF;;;;;;IAfRZ,EAAA,CAAAC,cAAA,UAAkC;IAI9BD,EAAA,CAAAE,MAAA,oBACF;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAC,cAAA,aAAuB;IACrBD,EAAA,CAAAa,UAAA,IAAAC,qCAAA,iBAUK;IACPd,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAC,cAAA,cAAuB;IACWD,EAAA,CAAAE,MAAA,mBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAChDH,EAAA,CAAAC,cAAA,gBASE;IALAD,EAAA,CAAAe,UAAA,2BAAAC,gEAAAC,MAAA;MAAAjB,EAAA,CAAAkB,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAApB,EAAA,CAAAqB,aAAA;MAAA,OAAarB,EAAA,CAAAsB,WAAA,CAAAF,MAAA,CAAAG,YAAA,CAAAC,MAAA,GAAAP,MAAA,CACzB;IAAA,EAD6C;IAJnCjB,EAAA,CAAAG,YAAA,EASE;;;;IAvBuBH,EAAA,CAAAI,SAAA,GAAY;IAAZJ,EAAA,CAAAyB,UAAA,YAAAC,MAAA,CAAAC,SAAA,CAAY;IAkBnC3B,EAAA,CAAAI,SAAA,GAAiC;IAAjCJ,EAAA,CAAAyB,UAAA,YAAAC,MAAA,CAAAH,YAAA,CAAAC,MAAA,CAAiC,UAAAE,MAAA,CAAAE,kBAAA;;;AD1JnD,OAAM,MAAOC,gBAAgB;EAkB3BC,YACUC,OAAuB,EACvBC,eAAgC,EAChCC,KAAqB,EACrBC,OAAoB,EACpBC,MAAa;IAJb,KAAAJ,OAAO,GAAPA,OAAO;IACP,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,MAAM,GAANA,MAAM;IAtBhB,KAAAC,IAAI,GAAM,IAAItC,IAAI,EAAE;IACpB,KAAAyB,YAAY,GAAc,IAAIxB,YAAY,EAAE;IAC5C,KAAAsC,SAAS,GAAY,KAAK;IAG1B;IACA;IACA;IACA;IAEA,KAAAV,SAAS,GAAe,EAAE;IAE1B,KAAAW,YAAY,GAAY,KAAK;IAC7B,KAAAC,cAAc,GAAY,KAAK;IAC/B,KAAAC,aAAa,GAAW,CAAC;IACzB,KAAAC,YAAY,GAAC,EAAE;IAmBf,KAAAC,OAAO,GAAG,IAAI,CAACR,OAAO,CAACS,KAAK,CAAC;MAC3BnB,MAAM,EAAE,IAAI,CAACU,OAAO,CAACU,OAAO,CAAC;QAAEC,KAAK,EAAE,IAAI,CAACtB,YAAY,CAACC,MAAM;QAAEsB,QAAQ,EAAE;MAAI,CAAE,EAAEjD,UAAU,CAACkD,QAAQ,CAAC;MACtGC,KAAK,EAAE,IAAI,CAACd,OAAO,CAACU,OAAO,CAAC;QAAEC,KAAK,EAAE,IAAI,CAACtB,YAAY,CAACyB,KAAK;QAAEF,QAAQ,EAAE;MAAI,CAAE,EAAE,CAACjD,UAAU,CAACkD,QAAQ,EAAElD,UAAU,CAACmD,KAAK,CAAC,CAAC;MACxHC,OAAO,EAAE,IAAI,CAACf,OAAO,CAACU,OAAO,CAAC;QAAEC,KAAK,EAAE,IAAI,CAACtB,YAAY,CAAC0B,OAAO;QAAEH,QAAQ,EAAE;MAAI,CAAE,EAAEjD,UAAU,CAACkD,QAAQ,CAAC;MACxGvC,IAAI,EAAE,IAAI,CAAC0B,OAAO,CAACU,OAAO,CAAC;QAAEC,KAAK,EAAE,IAAI,CAACtB,YAAY,CAACf,IAAI;QAAEsC,QAAQ,EAAE;MAAI,CAAE,EAAEjD,UAAU,CAACkD,QAAQ,CAAC;MAClGG,OAAO,EAAE,IAAI,CAAChB,OAAO,CAACU,OAAO,CAAC,EAAE,EAAE/C,UAAU,CAACkD,QAAQ,CAAC;MACtDI,IAAI,EAAE,IAAI,CAACjB,OAAO,CAACU,OAAO,CAAC,EAAE,EAAE/C,UAAU,CAACkD,QAAQ,CAAC;MACnDK,KAAK,EAAE,IAAI,CAAClB,OAAO,CAACU,OAAO,CAAC,EAAE,EAAE/C,UAAU,CAACkD,QAAQ,CAAC;MACpDM,GAAG,EAAE,IAAI,CAACnB,OAAO,CAACU,OAAO,CAAC,EAAE,EAAE/C,UAAU,CAACkD,QAAQ;KAClD,CAAC;IApBE,IAAI,CAACO,WAAW,GAAG,IAAI,CAACpB,OAAO,CAACS,KAAK,CAAC;MACpCnB,MAAM,EAAE,CAAC;QAAEqB,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE,EAAEjD,UAAU,CAACkD,QAAQ,CAAC;MAC5DC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACnD,UAAU,CAACkD,QAAQ,EAAElD,UAAU,CAACmD,KAAK,CAAC,CAAC;MACpDC,OAAO,EAAE,CAAC,EAAE,EAAE,CAACpD,UAAU,CAACkD,QAAQ,EAAElD,UAAU,CAAC0D,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;MACpE/C,IAAI,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACkD,QAAQ,CAAC;MAC/BG,OAAO,EAAE,CAAC,EAAE,EAAErD,UAAU,CAACkD,QAAQ,CAAC;MAClCI,IAAI,EAAE,CAAC,EAAE,EAAEtD,UAAU,CAACkD,QAAQ,CAAC;MAC/BK,KAAK,EAAE,CAAC,EAAE,EAAEvD,UAAU,CAACkD,QAAQ,CAAC;MAChCM,GAAG,EAAE,CAAC,EAAE,EAAExD,UAAU,CAACkD,QAAQ;KAC9B,CAAC;EACJ;EAYFS,QAAQA,CAAA;IACN,IAAI,CAACxB,eAAe,CAACyB,UAAU,EAAE,CAACC,SAAS,CAAC,MAAK;MAC/C;IAAA,CACD,CAAC;IACF,IAAI,CAACV,KAAK,GAAG,IAAI,CAACf,KAAK,CAAC0B,QAAQ,CAACC,MAAM,CAAC,OAAO,CAAC;IAChD,IAAI,CAACC,OAAO,EAAE;IACd,IAAI,CAACC,sBAAsB,EAAE;IAC7B,IAAI,CAACC,YAAY,EAAE;IACnB,IAAI,CAACxC,YAAY,CAACC,MAAM,GAAC,IAAI,CAACI,kBAAkB,EAAE;EACpD;EACAmC,YAAYA,CAAA;IACV,IAAI,CAAChC,OAAO,CAACgC,YAAY,CAAC,IAAI,CAAC3B,IAAI,CAAC4B,MAAM,CAAC,CAACN,SAAS,CAClD/B,SAAS,IAAK,IAAI,CAACA,SAAS,GAAGA,SAAS,CAC1C;EACH;EACAC,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACD,SAAS,CAACsC,MAAM,CAAC,CAACC,KAAK,EAAEC,QAAQ,KAAKD,KAAK,GAAGC,QAAQ,CAACvD,iBAAiB,EAAE,CAAC,CAAC;EAC1F;EACAiD,OAAOA,CAAA;IAEL,IAAI,CAAC9B,OAAO,CAACqC,cAAc,CAAC,IAAI,CAACpB,KAAK,CAAC,CAACU,SAAS,CAE/CtB,IAAI,IAAG;MACL,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChBiC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAClC,IAAI,CAAC;IACxB,CAAC,CACF;EACH;EACA0B,sBAAsBA,CAAA;IACpB,IAAI,CAACvC,YAAY,CAACyC,MAAM,GAAC,IAAI,CAAC5B,IAAI,CAAC4B,MAAM;IACzC,IAAI,CAACzC,YAAY,CAACf,IAAI,GAAC,IAAI,CAAC4B,IAAI,CAAC5B,IAAI;IACrC,IAAI,CAACe,YAAY,CAAC0B,OAAO,GAAC,IAAI,CAACb,IAAI,CAACmC,MAAM;IAC1C,IAAI,CAAChD,YAAY,CAACyB,KAAK,GAAC,IAAI,CAACZ,IAAI,CAACY,KAAK;EAEzC;EACAwB,WAAWA,CAAA;IACT,MAAMR,MAAM,GAAG,IAAI,CAAC5B,IAAI,CAAC4B,MAAM;IAC/B,MAAMS,WAAW,GAAG,QAAQ;IAC5B,MAAMC,OAAO,GAAQ;MACnBC,GAAG,EAAE,yBAAyB;MAC9BnD,MAAM,EAAE,IAAI,CAACD,YAAY,CAACC,MAAM,GAAG,GAAG;MACtChB,IAAI,EAAE,SAAS;MACfoE,WAAW,EAAE,wBAAwB;MACrCC,OAAO,EAAGC,QAAa,IAAI;QACzBT,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAAC;QACrB,IAAI,CAACvD,YAAY,CAACwD,aAAa,GAAC,QAAQ;QACxC,IAAI,CAACxD,YAAY,CAACyD,SAAS,GAACF,QAAQ,CAACG,mBAAmB;QACxD,IAAI,CAAClD,OAAO,CAACmD,WAAW,CAAC,IAAI,CAAC3D,YAAY,CAAC,CAACmC,SAAS,CAClDyB,IAAS,IAAI;UACZ,IAAI,CAAC5D,YAAY,GAAC4D,IAAI;UACtBd,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEa,IAAI,CAAC;QACrC,CAAC,EACAC,KAAU,IAAI;UACbf,OAAO,CAACe,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC/C,CAAC,CACF;QACD,IAAI,CAACjD,MAAM,CAACkD,QAAQ,CAAC,CAAC,gBAAgB,EAAC,IAAI,CAAC9D,YAAY,CAAC+D,OAAO,CAAC,CAAC;MACpE,CAAC;MACDC,OAAO,EAAE;QACPvC,KAAK,EAAE,IAAI,CAACzB,YAAY,CAACyB,KAAK;QAC9BC,OAAO,EAAE,IAAI,CAAC1B,YAAY,CAAC0B,OAAO;QAClCzC,IAAI,EAAE,IAAI,CAACe,YAAY,CAACf;OACzB;MACDgF,KAAK,EAAE;QACLtC,OAAO,EAAE;OACV;MACDuC,KAAK,EAAE;QACLC,KAAK,EAAE;OACR;MACDC,KAAK,EAAE;QACLC,SAAS,EAAEA,CAAA,KAAK;UACdvB,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QAC1B;;KAEH;IAED,MAAMuB,GAAG,GAAG,IAAIC,QAAQ,CAACpB,OAAO,CAAC;IACjCmB,GAAG,CAACE,EAAE,CAAC,gBAAgB,EAAGjB,QAAa,IAAI;MACzCT,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEQ,QAAQ,CAACM,KAAK,CAACY,IAAI,EAAElB,QAAQ,CAACM,KAAK,CAACR,WAAW,CAAC;IACjF,CAAC,CAAC;IACFiB,GAAG,CAACI,IAAI,EAAE;IAEV;IACAJ,GAAG,CAACE,EAAE,CAAC,iBAAiB,EAAGjB,QAAa,IAAI;MAC1C,IAAI,CAACvD,YAAY,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC;EACJ;;EAEA0E,WAAWA,CAAA;IACT;IACE,IAAI,CAAC7D,SAAS,GAAG,IAAI,CAAC,CAAC;IAEzB8D,UAAU,CAAC,MAAK;MAChB,IAAI,CAAC5E,YAAY,CAACwD,aAAa,GAAC,QAAQ;MACxC,IAAI,CAAChD,OAAO,CAACmD,WAAW,CAAC,IAAI,CAAC3D,YAAY,CAAC,CAACmC,SAAS,CAClDyB,IAAS,IAAI;QACZd,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEa,IAAI,CAAC;MACrC,CAAC,EACAC,KAAU,IAAI;QACbf,OAAO,CAACe,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CACF;MAED,IAAI,CAACjD,MAAM,CAACkD,QAAQ,CAAC,CAAC,gBAAgB,EAAC,IAAI,CAAC9D,YAAY,CAAC+D,OAAO,CAAC,CAAC;MAGpE;MACAa,UAAU,CAAC,MAAK;QACd,IAAI,CAAC9D,SAAS,GAAG,KAAK;MACxB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACX,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACT;;EAEE+D,aAAaA,CAACpD,KAAa;IACzB,IAAI,CAACV,YAAY,GAAG,CAAC,8CAA8C,CAAC+D,IAAI,CAACrD,KAAK,CAAC;EACjF;EAEAsD,eAAeA,CAACrD,OAAe;IAC7B,IAAI,CAACV,cAAc,GAAG,CAAC,UAAU,CAAC8D,IAAI,CAACpD,OAAO,CAAC;EACjD;EAEA,IAAIsD,UAAUA,CAAA;IACZ,OAAO,IAAI,CAAC7D,OAAO,CAAC8D,GAAG,CAAC,OAAO,CAAC;EAClC;EAEA,IAAIC,YAAYA,CAAA;IACd,OAAO,IAAI,CAAC/D,OAAO,CAAC8D,GAAG,CAAC,SAAS,CAAC;EACpC;EAEA,IAAIE,SAASA,CAAA;IACX,OAAO,IAAI,CAAChE,OAAO,CAAC8D,GAAG,CAAC,MAAM,CAAC;EACjC;EAEA,IAAIG,YAAYA,CAAA;IACd,OAAO,IAAI,CAACjE,OAAO,CAAC8D,GAAG,CAAC,SAAS,CAAC;EACpC;EAEA,IAAII,SAASA,CAAA;IACX,OAAO,IAAI,CAAClE,OAAO,CAAC8D,GAAG,CAAC,MAAM,CAAC;EACjC;EAEA,IAAIK,UAAUA,CAAA;IACZ,OAAO,IAAI,CAACnE,OAAO,CAAC8D,GAAG,CAAC,OAAO,CAAC;EAClC;EAEA,IAAIM,QAAQA,CAAA;IACV,OAAO,IAAI,CAACpE,OAAO,CAAC8D,GAAG,CAAC,KAAK,CAAC;EAChC;;SAjMW3E,gBAAgB;;mBAAhBA,MAAgB,EAAA7B,EAAA,CAAA+G,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAjH,EAAA,CAAA+G,iBAAA,CAAAG,EAAA,CAAAC,eAAA,GAAAnH,EAAA,CAAA+G,iBAAA,CAAAK,EAAA,CAAAC,cAAA,GAAArH,EAAA,CAAA+G,iBAAA,CAAAO,EAAA,CAAAC,WAAA,GAAAvH,EAAA,CAAA+G,iBAAA,CAAAK,EAAA,CAAAI,MAAA;AAAA;;QAAhB3F,MAAgB;EAAA4F,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCf7B/H,EAAA,CAAAC,cAAA,aASC;MAMiBD,EAAA,CAAAe,UAAA,sBAAAkH,mDAAA;QAAA,OAAYD,GAAA,CAAAxD,WAAA,EAAa;MAAA,EAAC;MAC9BxE,EAAA,CAAAC,cAAA,YAAwB;MAAAD,EAAA,CAAAE,MAAA,mBAAY;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACzCH,EAAA,CAAAC,cAAA,eAAuC;MAAAD,EAAA,CAAAE,MAAA,eAAO;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACtDH,EAAA,CAAAC,cAAA,cAA8B;MACGD,EAAA,CAAAE,MAAA,cAAC;MAAAF,EAAA,CAAAG,YAAA,EAAO;MACvCH,EAAA,CAAAC,cAAA,iBASE;MALAD,EAAA,CAAAe,UAAA,2BAAAmH,0DAAAjH,MAAA;QAAA,OAAA+G,GAAA,CAAAzG,YAAA,CAAAC,MAAA,GAAAP,MAAA;MAAA,EAAiC;MAJnCjB,EAAA,CAAAG,YAAA,EASE;MAEJH,EAAA,CAAAC,cAAA,eAAkB;MACsBD,EAAA,CAAAE,MAAA,cAAM;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACpDH,EAAA,CAAAC,cAAA,iBAOE;MAHAD,EAAA,CAAAe,UAAA,2BAAAoH,0DAAAlH,MAAA;QAAA,OAAA+G,GAAA,CAAAzG,YAAA,CAAAyB,KAAA,GAAA/B,MAAA;MAAA,EAAgC;MAJlCjB,EAAA,CAAAG,YAAA,EAOE;MAEJH,EAAA,CAAAC,cAAA,eAAkB;MACwBD,EAAA,CAAAE,MAAA,gBAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACxDH,EAAA,CAAAC,cAAA,iBAOE;MAHAD,EAAA,CAAAe,UAAA,2BAAAqH,0DAAAnH,MAAA;QAAA,OAAA+G,GAAA,CAAAzG,YAAA,CAAA0B,OAAA,GAAAhC,MAAA;MAAA,EAAkC;MAJpCjB,EAAA,CAAAG,YAAA,EAOE;MAEJH,EAAA,CAAAC,cAAA,eAAkB;MACqBD,EAAA,CAAAE,MAAA,aAAK;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAClDH,EAAA,CAAAC,cAAA,iBAOE;MAHAD,EAAA,CAAAe,UAAA,2BAAAsH,0DAAApH,MAAA;QAAA,OAAA+G,GAAA,CAAAzG,YAAA,CAAAf,IAAA,GAAAS,MAAA;MAAA,EAA+B;MAJjCjB,EAAA,CAAAG,YAAA,EAOE;MAGJH,EAAA,CAAAC,cAAA,eAAkB;MACwBD,EAAA,CAAAE,MAAA,gBAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACxDH,EAAA,CAAAC,cAAA,oBAOC;MAJCD,EAAA,CAAAe,UAAA,2BAAAuH,6DAAArH,MAAA;QAAA,OAAA+G,GAAA,CAAAzG,YAAA,CAAA2B,OAAA,GAAAjC,MAAA;MAAA,EAAkC;MAInCjB,EAAA,CAAAG,YAAA,EAAW;MAEdH,EAAA,CAAAC,cAAA,eAAkB;MACqBD,EAAA,CAAAE,MAAA,aAAK;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAClDH,EAAA,CAAAC,cAAA,iBAOE;MAHAD,EAAA,CAAAe,UAAA,2BAAAwH,0DAAAtH,MAAA;QAAA,OAAA+G,GAAA,CAAAzG,YAAA,CAAA4B,IAAA,GAAAlC,MAAA;MAAA,EAA+B;MAJjCjB,EAAA,CAAAG,YAAA,EAOE;MAEJH,EAAA,CAAAC,cAAA,eAAkB;MACsBD,EAAA,CAAAE,MAAA,cAAM;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACpDH,EAAA,CAAAC,cAAA,iBAOE;MAHAD,EAAA,CAAAe,UAAA,2BAAAyH,0DAAAvH,MAAA;QAAA,OAAA+G,GAAA,CAAAzG,YAAA,CAAA6B,KAAA,GAAAnC,MAAA;MAAA,EAAgC;MAJlCjB,EAAA,CAAAG,YAAA,EAOE;MAEJH,EAAA,CAAAC,cAAA,eAAkB;MACoBD,EAAA,CAAAE,MAAA,iBAAS;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACrDH,EAAA,CAAAC,cAAA,iBAOE;MAHAD,EAAA,CAAAe,UAAA,2BAAA0H,0DAAAxH,MAAA;QAAA,OAAA+G,GAAA,CAAAzG,YAAA,CAAA8B,GAAA,GAAApC,MAAA;MAAA,EAA8B;MAJhCjB,EAAA,CAAAG,YAAA,EAOE;MAGJH,EAAA,CAAAC,cAAA,kBAIC;MACCD,EAAA,CAAAE,MAAA,aACF;MAAAF,EAAA,CAAAG,YAAA,EAAS;MACTH,EAAA,CAAAC,cAAA,kBAKC;MADCD,EAAA,CAAAe,UAAA,mBAAA2H,mDAAA;QAAA,OAASV,GAAA,CAAA9B,WAAA,EAAa;MAAA,EAAC;MAEvBlG,EAAA,CAAAE,MAAA,uBACF;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAETH,EAAA,CAAAa,UAAA,KAAA8H,gCAAA,kBAYM;MACR3I,EAAA,CAAAG,YAAA,EAAO;MAGXH,EAAA,CAAAC,cAAA,eAA2B;MAEvBD,EAAA,CAAAa,UAAA,KAAA+H,gCAAA,mBAgCM;MACR5I,EAAA,CAAAG,YAAA,EAAO;;;MAzJCH,EAAA,CAAAI,SAAA,IAAiC;MAAjCJ,EAAA,CAAAyB,UAAA,YAAAuG,GAAA,CAAAzG,YAAA,CAAAC,MAAA,CAAiC,UAAAwG,GAAA,CAAApG,kBAAA;MAajC5B,EAAA,CAAAI,SAAA,GAAgC;MAAhCJ,EAAA,CAAAyB,UAAA,YAAAuG,GAAA,CAAAzG,YAAA,CAAAyB,KAAA,CAAgC;MAWhChD,EAAA,CAAAI,SAAA,GAAkC;MAAlCJ,EAAA,CAAAyB,UAAA,YAAAuG,GAAA,CAAAzG,YAAA,CAAA0B,OAAA,CAAkC;MAWlCjD,EAAA,CAAAI,SAAA,GAA+B;MAA/BJ,EAAA,CAAAyB,UAAA,YAAAuG,GAAA,CAAAzG,YAAA,CAAAf,IAAA,CAA+B;MAW/BR,EAAA,CAAAI,SAAA,GAAkC;MAAlCJ,EAAA,CAAAyB,UAAA,YAAAuG,GAAA,CAAAzG,YAAA,CAAA2B,OAAA,CAAkC;MAYlClD,EAAA,CAAAI,SAAA,GAA+B;MAA/BJ,EAAA,CAAAyB,UAAA,YAAAuG,GAAA,CAAAzG,YAAA,CAAA4B,IAAA,CAA+B;MAW/BnD,EAAA,CAAAI,SAAA,GAAgC;MAAhCJ,EAAA,CAAAyB,UAAA,YAAAuG,GAAA,CAAAzG,YAAA,CAAA6B,KAAA,CAAgC;MAWhCpD,EAAA,CAAAI,SAAA,GAA8B;MAA9BJ,EAAA,CAAAyB,UAAA,YAAAuG,GAAA,CAAAzG,YAAA,CAAA8B,GAAA,CAA8B;MAwB/BrD,EAAA,CAAAI,SAAA,GAAe;MAAfJ,EAAA,CAAAyB,UAAA,SAAAuG,GAAA,CAAA3F,SAAA,CAAe;MAgBdrC,EAAA,CAAAI,SAAA,GAA0B;MAA1BJ,EAAA,CAAAyB,UAAA,SAAAuG,GAAA,CAAArG,SAAA,CAAAkH,MAAA,KAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}