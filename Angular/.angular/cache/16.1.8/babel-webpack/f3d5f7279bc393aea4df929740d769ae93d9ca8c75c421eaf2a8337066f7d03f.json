{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartService {\n  addFoodItem(categoryId, newFoodItem) {\n    throw new Error('Method not implemented.');\n  }\n  deleteFoodItem(foodItemId) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://localhost:8084\";\n    this.userId = 1;\n  }\n  getCartItems() {\n    return this.http.get(`${this.baseUrl}/cart/${this.userId}`);\n  }\n  getFoodItems() {\n    return this.http.get(`${this.baseUrl}/foodItems`);\n  }\n  getFoodItemsByCategory(categoryId) {\n    return this.http.get(`${this.baseUrl}/foodItems/${categoryId}`);\n    ;\n  }\n  getCategories() {\n    return this.http.get(`${this.baseUrl}/category`);\n  }\n  addCategory(categoryName) {\n    return this.http.post(`${this.baseUrl}/category/add/${categoryName}`, null, {\n      responseType: 'text'\n    });\n  }\n  deleteCategory(categoryId) {\n    return this.http.delete(`${this.baseUrl}/category/delete/${categoryId}`, {\n      responseType: 'text'\n    });\n    ;\n  }\n  addToCart(foodItemId, quantity) {\n    return this.http.post(`${this.baseUrl}/cart/add?userId=${this.userId}&foodItemId=${foodItemId}&quantity=${quantity}`, null, {\n      responseType: 'text'\n    });\n  }\n  updateCartItemQuantity(cartItem, newQuantity) {\n    return this.http.put(`${this.baseUrl}/cart/update/${cartItem.cartItemId}/${newQuantity}`, null, {\n      responseType: 'text'\n    });\n  }\n  removeFromCart(cartItem) {\n    return this.http.delete(`${this.baseUrl}/cart/delete/${cartItem.cartItemId}`, {\n      responseType: 'text'\n    });\n  }\n}\n_class = CartService;\n_class.ɵfac = function CartService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CartService","addFoodItem","categoryId","newFoodItem","Error","deleteFoodItem","foodItemId","constructor","http","baseUrl","userId","getCartItems","get","getFoodItems","getFoodItemsByCategory","getCategories","addCategory","categoryName","post","responseType","deleteCategory","delete","addToCart","quantity","updateCartItemQuantity","cartItem","newQuantity","put","cartItemId","removeFromCart","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["F:\\PP\\RLL\\FoodBox\\src\\app\\cart.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CartItem } from './cart-item.model';\nimport { Observable } from 'rxjs';\nimport { Category, FoodItem } from './food-item.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  addFoodItem(categoryId: number | undefined, newFoodItem: FoodItem) {\n    throw new Error('Method not implemented.');\n  }\n  deleteFoodItem(foodItemId: number) {\n    throw new Error('Method not implemented.');\n  }\n  \n\n\n\n  private baseUrl = \"http://localhost:8084\";\n  constructor(private http: HttpClient) { }\n  private userId = 1;\n  getCartItems(): Observable<CartItem[]> {\n    return this.http.get<CartItem[]>(`${this.baseUrl}/cart/${this.userId}`);\n  }\n\n  getFoodItems(): Observable<FoodItem[]> {\n    return this.http.get<FoodItem[]>(`${this.baseUrl}/foodItems`);\n  }\n  getFoodItemsByCategory(categoryId: number ): Observable<FoodItem[]> {\n    return this.http.get<FoodItem[]>(`${this.baseUrl}/foodItems/${categoryId}`);;\n  }\n  getCategories():Observable<Category[]> {\n    return this.http.get<Category[]>(`${this.baseUrl}/category`);\n  }\n  addCategory(categoryName: string): Observable<string> {\n    return this.http.post(`${this.baseUrl}/category/add/${categoryName}`, null, { responseType: 'text' });\n  }\n  deleteCategory(categoryId: number): Observable<string>  {\n    return this.http.delete(`${this.baseUrl}/category/delete/${categoryId}`, { responseType: 'text' });;\n  }\n  \n  addToCart(foodItemId: number, quantity: number): Observable<string> {\n    return this.http.post(`${this.baseUrl}/cart/add?userId=${this.userId}&foodItemId=${foodItemId}&quantity=${quantity}`, null, { responseType: 'text' });\n  }\n  updateCartItemQuantity(cartItem: CartItem, newQuantity: number): Observable<string> {\n    return this.http.put(`${this.baseUrl}/cart/update/${cartItem.cartItemId}/${newQuantity}`, null, { responseType: 'text' });\n  }\n\n  removeFromCart(cartItem: CartItem): Observable<string>  {\n    return this.http.delete(`${this.baseUrl}/cart/delete/${cartItem.cartItemId}`,{ responseType: 'text' })\n  }\n}\n"],"mappings":";;;AASA,OAAM,MAAOA,WAAW;EACtBC,WAAWA,CAACC,UAA8B,EAAEC,WAAqB;IAC/D,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACAC,cAAcA,CAACC,UAAkB;IAC/B,MAAM,IAAIF,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAMAG,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,OAAO,GAAG,uBAAuB;IAEjC,KAAAC,MAAM,GAAG,CAAC;EADsB;EAExCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACH,OAAO,SAAS,IAAI,CAACC,MAAM,EAAE,CAAC;EACzE;EAEAG,YAAYA,CAAA;IACV,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACH,OAAO,YAAY,CAAC;EAC/D;EACAK,sBAAsBA,CAACZ,UAAkB;IACvC,OAAO,IAAI,CAACM,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACH,OAAO,cAAcP,UAAU,EAAE,CAAC;IAAC;EAC9E;EACAa,aAAaA,CAAA;IACX,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACH,OAAO,WAAW,CAAC;EAC9D;EACAO,WAAWA,CAACC,YAAoB;IAC9B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,GAAG,IAAI,CAACT,OAAO,iBAAiBQ,YAAY,EAAE,EAAE,IAAI,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EACvG;EACAC,cAAcA,CAAClB,UAAkB;IAC/B,OAAO,IAAI,CAACM,IAAI,CAACa,MAAM,CAAC,GAAG,IAAI,CAACZ,OAAO,oBAAoBP,UAAU,EAAE,EAAE;MAAEiB,YAAY,EAAE;IAAM,CAAE,CAAC;IAAC;EACrG;EAEAG,SAASA,CAAChB,UAAkB,EAAEiB,QAAgB;IAC5C,OAAO,IAAI,CAACf,IAAI,CAACU,IAAI,CAAC,GAAG,IAAI,CAACT,OAAO,oBAAoB,IAAI,CAACC,MAAM,eAAeJ,UAAU,aAAaiB,QAAQ,EAAE,EAAE,IAAI,EAAE;MAAEJ,YAAY,EAAE;IAAM,CAAE,CAAC;EACvJ;EACAK,sBAAsBA,CAACC,QAAkB,EAAEC,WAAmB;IAC5D,OAAO,IAAI,CAAClB,IAAI,CAACmB,GAAG,CAAC,GAAG,IAAI,CAAClB,OAAO,gBAAgBgB,QAAQ,CAACG,UAAU,IAAIF,WAAW,EAAE,EAAE,IAAI,EAAE;MAAEP,YAAY,EAAE;IAAM,CAAE,CAAC;EAC3H;EAEAU,cAAcA,CAACJ,QAAkB;IAC/B,OAAO,IAAI,CAACjB,IAAI,CAACa,MAAM,CAAC,GAAG,IAAI,CAACZ,OAAO,gBAAgBgB,QAAQ,CAACG,UAAU,EAAE,EAAC;MAAET,YAAY,EAAE;IAAM,CAAE,CAAC;EACxG;;SA3CWnB,WAAW;;mBAAXA,MAAW,EAAA8B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXjC,MAAW;EAAAkC,OAAA,EAAXlC,MAAW,CAAAmC,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}