{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FoodBoxService {\n  changeAdminPassword(oldPassword, newPassword) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://localhost:8084\";\n  }\n  ngOnInit() {\n    this.getUserByEmail(sessionStorage.getItem(\"userSession\")).subscribe(user => {\n      this.user = user;\n    });\n  }\n  getCartItems() {\n    return this.http.get(`${this.baseUrl}/cart/${this.user.userId}`);\n  }\n  getFoodItems() {\n    return this.http.get(`${this.baseUrl}/foodItems`);\n  }\n  getFoodItemsByCategory(categoryId) {\n    return this.http.get(`${this.baseUrl}/foodItems/${categoryId}`);\n    ;\n  }\n  addFoodItem(categoryId, newFoodItem) {\n    return this.http.post(`${this.baseUrl}/foodItems/${categoryId}`, newFoodItem, {\n      responseType: 'text'\n    });\n  }\n  editFoodItem(foodItem) {\n    return this.http.put(`${this.baseUrl}/foodItems`, foodItem, {\n      responseType: 'text'\n    });\n  }\n  deleteFoodItem(foodItemId) {\n    return this.http.delete(`${this.baseUrl}/foodItems/delete/${foodItemId}`, {\n      responseType: 'text'\n    });\n    ;\n  }\n  getCategories() {\n    return this.http.get(`${this.baseUrl}/category`);\n  }\n  getCategoryById(categoryId) {\n    return this.http.get(`${this.baseUrl}/category/${categoryId}`);\n  }\n  addCategory(categoryName) {\n    return this.http.post(`${this.baseUrl}/category/add/${categoryName}`, null, {\n      responseType: 'text'\n    });\n  }\n  deleteCategory(categoryId) {\n    return this.http.delete(`${this.baseUrl}/category/delete/${categoryId}`, {\n      responseType: 'text'\n    });\n  }\n  addToCart(foodItemId, quantity) {\n    return this.http.post(`${this.baseUrl}/cart/add?userId=${this.user.userId}&foodItemId=${foodItemId}&quantity=${quantity}`, null, {\n      responseType: 'text'\n    });\n  }\n  updateCartItemQuantity(cartItem, newQuantity) {\n    return this.http.put(`${this.baseUrl}/cart/update/${cartItem.cartItemId}/${newQuantity}`, null, {\n      responseType: 'text'\n    });\n  }\n  removeFromCart(cartItem) {\n    return this.http.delete(`${this.baseUrl}/cart/delete/${cartItem.cartItemId}`, {\n      responseType: 'text'\n    });\n  }\n  registerAdmin(admin) {\n    return this.http.post(`${this.baseUrl}/admin/register`, admin, {\n      responseType: 'text'\n    });\n  }\n  loginAdmin(adminCreds) {\n    return this.http.post(`${this.baseUrl}/admin/login`, adminCreds, {\n      responseType: 'text'\n    });\n  }\n  getAdminByEmployeeId(adminEmployeeId) {\n    return this.http.get(`${this.baseUrl}/admin/employeeId/${adminEmployeeId}`);\n  }\n  updateAdmin(admin) {\n    return this.http.put(`${this.baseUrl}/admin/update`, admin, {\n      responseType: 'text'\n    });\n  }\n  registerUser(user) {\n    return this.http.post(`${this.baseUrl}/user/register`, user, {\n      responseType: 'text'\n    });\n  }\n  loginUser(userCreds) {\n    return this.http.post(`${this.baseUrl}/user/login`, userCreds, {\n      responseType: 'text'\n    });\n  }\n  getUserByEmail(userEmail) {\n    return this.http.get(`${this.baseUrl}/user/email/${userEmail}`);\n  }\n  updateUser(user) {\n    return this.http.put(`${this.baseUrl}/user/update`, user, {\n      responseType: 'text'\n    });\n  }\n}\n_class = FoodBoxService;\n_class.ɵfac = function FoodBoxService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["FoodBoxService","changeAdminPassword","oldPassword","newPassword","Error","constructor","http","baseUrl","ngOnInit","getUserByEmail","sessionStorage","getItem","subscribe","user","getCartItems","get","userId","getFoodItems","getFoodItemsByCategory","categoryId","addFoodItem","newFoodItem","post","responseType","editFoodItem","foodItem","put","deleteFoodItem","foodItemId","delete","getCategories","getCategoryById","addCategory","categoryName","deleteCategory","addToCart","quantity","updateCartItemQuantity","cartItem","newQuantity","cartItemId","removeFromCart","registerAdmin","admin","loginAdmin","adminCreds","getAdminByEmployeeId","adminEmployeeId","updateAdmin","registerUser","loginUser","userCreds","userEmail","updateUser","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["F:\\PP\\RLL\\FoodBox\\src\\app\\food-box.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { CartItem } from './model-classes/cart-item.model';\nimport { Observable } from 'rxjs';\nimport { FoodItem } from './model-classes/food-item.model';\nimport { Category } from './model-classes/category.model';\nimport { Admin } from './model-classes/admin.model';\nimport { User } from './model-classes/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodBoxService implements OnInit{\n  changeAdminPassword(oldPassword: string, newPassword: string) {\n    throw new Error('Method not implemented.');\n  }\n  private baseUrl = \"http://localhost:8084\";\n  private user:User;\n  constructor(private http: HttpClient) { }\n  ngOnInit(): void {\n    this.getUserByEmail(sessionStorage.getItem(\"userSession\")).subscribe(\n\n      user => {\n        this.user = user;\n      }\n    )\n  }\n  \n    \n  \n  getCartItems(): Observable<CartItem[]> {\n    return this.http.get<CartItem[]>(`${this.baseUrl}/cart/${this.user.userId}`);\n  }\n\n  getFoodItems(): Observable<FoodItem[]> {\n    return this.http.get<FoodItem[]>(`${this.baseUrl}/foodItems`);\n  }\n  getFoodItemsByCategory(categoryId: number): Observable<FoodItem[]> {\n    return this.http.get<FoodItem[]>(`${this.baseUrl}/foodItems/${categoryId}`);;\n  }\n  addFoodItem(categoryId: number, newFoodItem: FoodItem) {\n    return this.http.post(`${this.baseUrl}/foodItems/${categoryId}`, newFoodItem, { responseType: 'text' });\n  }\n  editFoodItem(foodItem: FoodItem): Observable<string> {\n    return this.http.put(`${this.baseUrl}/foodItems`, foodItem, { responseType: 'text' });\n  }\n  deleteFoodItem(foodItemId: number): Observable<string> {\n    return this.http.delete(`${this.baseUrl}/foodItems/delete/${foodItemId}`, { responseType: 'text' });;\n  }\n  getCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(`${this.baseUrl}/category`);\n  }\n  getCategoryById(categoryId: number): Observable<Category> {\n    return this.http.get<Category>(`${this.baseUrl}/category/${categoryId}`);\n  }\n  addCategory(categoryName: string): Observable<string> {\n    return this.http.post(`${this.baseUrl}/category/add/${categoryName}`, null, { responseType: 'text' });\n  }\n  deleteCategory(categoryId: number): Observable<string> {\n    return this.http.delete(`${this.baseUrl}/category/delete/${categoryId}`, { responseType: 'text' });\n  }\n\n  addToCart(foodItemId: number, quantity: number): Observable<string> {\n    return this.http.post(`${this.baseUrl}/cart/add?userId=${this.user.userId}&foodItemId=${foodItemId}&quantity=${quantity}`, null, { responseType: 'text' });\n  }\n  updateCartItemQuantity(cartItem: CartItem, newQuantity: number): Observable<string> {\n    return this.http.put(`${this.baseUrl}/cart/update/${cartItem.cartItemId}/${newQuantity}`, null, { responseType: 'text' });\n  }\n\n  removeFromCart(cartItem: CartItem): Observable<string> {\n    return this.http.delete(`${this.baseUrl}/cart/delete/${cartItem.cartItemId}`, { responseType: 'text' })\n  }\n\n\n  registerAdmin(admin: any): Observable<string> {\n    return this.http.post(`${this.baseUrl}/admin/register`, admin, { responseType: 'text' });\n  }\n\n  loginAdmin(adminCreds: any): Observable<string> {\n    return this.http.post(`${this.baseUrl}/admin/login`, adminCreds, { responseType: 'text' });\n  }\n  getAdminByEmployeeId(adminEmployeeId:string):Observable<Admin>{\n    return this.http.get<Admin>(`${this.baseUrl}/admin/employeeId/${adminEmployeeId}`);\n  }\n  updateAdmin(admin:Admin):Observable<string>{\n    return this.http.put(`${this.baseUrl}/admin/update`, admin, { responseType: 'text' });\n  }\n\n  registerUser(user: any): Observable<string> {\n    return this.http.post(`${this.baseUrl}/user/register`, user, { responseType: 'text' });\n  }\n\n  loginUser(userCreds: any): Observable<string> {\n    return this.http.post(`${this.baseUrl}/user/login`, userCreds, { responseType: 'text' });\n  }\n  getUserByEmail(userEmail:string):Observable<User>{\n    return this.http.get<User>(`${this.baseUrl}/user/email/${userEmail}`);\n  }\n  updateUser(user:User):Observable<string>{\n    return this.http.put(`${this.baseUrl}/user/update`, user, { responseType: 'text' });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}