{"ast":null,"code":"var _class;\nimport { Admin } from '../model-classes/admin.model';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../food-box.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction AdminDashboardComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 17);\n  }\n}\nexport class AdminDashboardComponent {\n  constructor(service, fb) {\n    this.service = service;\n    this.fb = fb;\n    this.admin = new Admin();\n    this.message = '';\n    this.showMainDashboard = true;\n    this.showUpdateArea = false;\n    this.adminEmployeeId = sessionStorage.getItem(\"adminSession\");\n    this.profileForm = this.fb.group({\n      fullName: ['', Validators.required],\n      newPassword: ['', [Validators.minLength(6), this.passwordValidator, Validators.required]],\n      confirmNewPassword: ['', Validators.required]\n    }, {\n      validators: this.matchingPasswords\n    });\n  }\n  ngOnInit() {\n    this.getAdmin();\n    this.showMainDashboard = true;\n    this.showUpdateArea = false;\n    this.profileForm = this.fb.group({\n      fullName: ['', Validators.required],\n      newPassword: ['', [Validators.minLength(6), this.passwordValidator, Validators.required]],\n      confirmNewPassword: ['', Validators.required]\n    }, {\n      validators: this.matchingPasswords\n    });\n  }\n  passwordValidator(control) {\n    const value = control.value;\n    const hasUpper = /[A-Z]/.test(value);\n    const hasLower = /[a-z]/.test(value);\n    const hasNumber = /\\d/.test(value);\n    const hasSpecial = /[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+/.test(value);\n    if (hasUpper && hasLower && hasNumber && hasSpecial) {\n      return null;\n    } else {\n      return {\n        invalidPassword: true\n      };\n    }\n  }\n  matchingPasswords(group) {\n    const newPassword = group.get('newPassword').value;\n    const confirmNewPassword = group.get('confirmNewPassword').value;\n    return newPassword == confirmNewPassword ? null : {\n      passwordsMismatch: true\n    };\n  }\n  enableEdit() {\n    this.showMainDashboard = false;\n    this.showUpdateArea = true;\n  }\n  getAdmin() {\n    console.log(this.adminEmployeeId);\n    this.service.getAdminByEmployeeId(this.adminEmployeeId).subscribe(admin => {\n      this.admin = admin;\n      console.log(this.admin);\n    });\n  }\n  updateAdmin() {\n    this.admin.password = this.profileForm.value.newPassword;\n    console.log(this.admin.password);\n    this.service.updateAdmin(this.admin).subscribe(response => {\n      if (response == '0') alert('Oops, something went wrong!');else {\n        this.message = \"Details Updated Successfully!\";\n        this.getAdmin();\n      }\n    });\n  }\n}\n_class = AdminDashboardComponent;\n_class.ɵfac = function AdminDashboardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FoodBoxService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-admin-dashboard\"]],\n  decls: 31,\n  vars: 1,\n  consts: [[1, \"container\", \"py-5\"], [1, \"row\"], [1, \"col-md-3\"], [1, \"card\", \"text-center\"], [\"src\", \"path-to-your-image1.jpg\", \"alt\", \"Image 1\", 1, \"card-img-top\"], [1, \"card-body\"], [\"routerLink\", \"/admin/manage-categories\", 1, \"btn\", \"btn-primary\"], [\"src\", \"path-to-your-image2.jpg\", \"alt\", \"Image 2\", 1, \"card-img-top\"], [\"routerLink\", \"/admin/view-orders\", 1, \"btn\", \"btn-primary\"], [\"src\", \"path-to-your-image3.jpg\", \"alt\", \"Image 3\", 1, \"card-img-top\"], [\"routerLink\", \"/admin/view-reviews\", 1, \"btn\", \"btn-primary\"], [\"src\", \"path-to-your-image4.jpg\", \"alt\", \"Image 4\", 1, \"card-img-top\"], [\"routerLink\", \"/admin/view-queries\", 1, \"btn\", \"btn-primary\"], [1, \"row\", \"mt-5\"], [1, \"col-md-12\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"mt-3\", 4, \"ngIf\"], [1, \"mt-3\"]],\n  template: function AdminDashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"a\", 6);\n      i0.ɵɵtext(7, \"Manage Categories\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"div\", 3);\n      i0.ɵɵelement(10, \"img\", 7);\n      i0.ɵɵelementStart(11, \"div\", 5)(12, \"a\", 8);\n      i0.ɵɵtext(13, \"View Orders\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"div\", 3);\n      i0.ɵɵelement(16, \"img\", 9);\n      i0.ɵɵelementStart(17, \"div\", 5)(18, \"a\", 10);\n      i0.ɵɵtext(19, \"View Reviews\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(20, \"div\", 2)(21, \"div\", 3);\n      i0.ɵɵelement(22, \"img\", 11);\n      i0.ɵɵelementStart(23, \"div\", 5)(24, \"a\", 12);\n      i0.ɵɵtext(25, \"View Queries\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(26, \"div\", 13)(27, \"div\", 14)(28, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function AdminDashboardComponent_Template_button_click_28_listener() {\n        return ctx.showPasswordForm = !ctx.showPasswordForm;\n      });\n      i0.ɵɵtext(29, \" Edit Password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(30, AdminDashboardComponent_div_30_Template, 1, 0, \"div\", 16);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(30);\n      i0.ɵɵproperty(\"ngIf\", ctx.showPasswordForm);\n    }\n  },\n  dependencies: [i3.NgIf, i4.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Admin","Validators","i0","ɵɵelement","AdminDashboardComponent","constructor","service","fb","admin","message","showMainDashboard","showUpdateArea","adminEmployeeId","sessionStorage","getItem","profileForm","group","fullName","required","newPassword","minLength","passwordValidator","confirmNewPassword","validators","matchingPasswords","ngOnInit","getAdmin","control","value","hasUpper","test","hasLower","hasNumber","hasSpecial","invalidPassword","get","passwordsMismatch","enableEdit","console","log","getAdminByEmployeeId","subscribe","updateAdmin","password","response","alert","ɵɵdirectiveInject","i1","FoodBoxService","i2","FormBuilder","selectors","decls","vars","consts","template","AdminDashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AdminDashboardComponent_Template_button_click_28_listener","showPasswordForm","ɵɵtemplate","AdminDashboardComponent_div_30_Template","ɵɵadvance","ɵɵproperty"],"sources":["F:\\PP\\RLL\\FoodBox\\src\\app\\admin-dashboard\\admin-dashboard.component.ts","F:\\PP\\RLL\\FoodBox\\src\\app\\admin-dashboard\\admin-dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FoodBoxService } from '../food-box.service';\nimport { Admin } from '../model-classes/admin.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n  admin: Admin = new Admin();\n  message = '';\n  showMainDashboard = true;\n  showUpdateArea = false;\n  adminEmployeeId = sessionStorage.getItem(\"adminSession\");\n  profileForm: FormGroup=this.fb.group({\n    fullName: ['', Validators.required],\n    newPassword: ['', [Validators.minLength(6), this.passwordValidator, Validators.required]],\n    confirmNewPassword: ['', Validators.required],\n  }, { validators: this.matchingPasswords });\n  adminDetails:any;\n  constructor(private service: FoodBoxService,private fb: FormBuilder) { }\n  ngOnInit(): void {\n    this.getAdmin();\n    this.showMainDashboard = true;\n    this.showUpdateArea = false;\n    this.profileForm = this.fb.group({\n      fullName: ['', Validators.required],\n      newPassword: ['', [Validators.minLength(6), this.passwordValidator, Validators.required]],\n      confirmNewPassword: ['', Validators.required],\n    }, { validators: this.matchingPasswords });\n  }\n  passwordValidator(control: any) {\n    const value = control.value;\n    const hasUpper = /[A-Z]/.test(value);\n    const hasLower = /[a-z]/.test(value);\n    const hasNumber = /\\d/.test(value);\n    const hasSpecial = /[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+/.test(value);\n\n    if (hasUpper && hasLower && hasNumber && hasSpecial) {\n      return null;\n    } else {\n      return { invalidPassword: true };\n    }\n  }\n  matchingPasswords(group: FormGroup) {\n    const newPassword = group.get('newPassword').value;\n    const confirmNewPassword = group.get('confirmNewPassword').value;\n\n    return newPassword == confirmNewPassword ? null : { passwordsMismatch: true };\n  }\n  enableEdit():void{\n    this.showMainDashboard = false;\n    this.showUpdateArea = true;\n  }\n  getAdmin(): void {\n    console.log(this.adminEmployeeId);\n\n    this.service.getAdminByEmployeeId(this.adminEmployeeId).subscribe(\n\n      admin => {\n        this.admin = admin;\n        console.log(this.admin);\n      }\n    )\n  }\n\n \n\n  updateAdmin() {\n\n    this.admin.password=this.profileForm.value.newPassword;\n    console.log(this.admin.password);\n    \n    this.service.updateAdmin(this.admin).subscribe(\n      (response) => {\n        if (response == '0')\n          alert('Oops, something went wrong!')\n        else {\n          this.message = \"Details Updated Successfully!\";\n          this.getAdmin();\n        }\n      }\n    )\n  }\n}\n","<div class=\"container py-5\">\n  <div class=\"row\">\n    <div class=\"col-md-3\">\n      <div class=\"card text-center\">\n        <img src=\"path-to-your-image1.jpg\" class=\"card-img-top\" alt=\"Image 1\">\n        <div class=\"card-body\">\n          <a routerLink=\"/admin/manage-categories\" class=\"btn btn-primary\">Manage Categories</a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-3\">\n      <div class=\"card text-center\">\n        <img src=\"path-to-your-image2.jpg\" class=\"card-img-top\" alt=\"Image 2\">\n        <div class=\"card-body\">\n          <a routerLink=\"/admin/view-orders\" class=\"btn btn-primary\">View Orders</a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-3\">\n      <div class=\"card text-center\">\n        <img src=\"path-to-your-image3.jpg\" class=\"card-img-top\" alt=\"Image 3\">\n        <div class=\"card-body\">\n          <a routerLink=\"/admin/view-reviews\" class=\"btn btn-primary\">View Reviews</a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-3\">\n      <div class=\"card text-center\">\n        <img src=\"path-to-your-image4.jpg\" class=\"card-img-top\" alt=\"Image 4\">\n        <div class=\"card-body\">\n          <a routerLink=\"/admin/view-queries\" class=\"btn btn-primary\">View Queries</a>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row mt-5\">\n    <div class=\"col-md-12\">\n      <button class=\"btn btn-primary\" (click)=\"showPasswordForm = !showPasswordForm\">\n        Edit Password\n      </button>\n      <div *ngIf=\"showPasswordForm\" class=\"mt-3\">\n        <!-- Password edit form goes here -->\n      </div>\n    </div>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}