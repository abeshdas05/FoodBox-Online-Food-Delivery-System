{"ast":null,"code":"var _class;\nimport { User } from '../model-classes/user.model';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../food-box.service\";\nimport * as i2 from \"@angular/forms\";\nexport class UserDashboardComponent {\n  constructor(service, fb) {\n    this.service = service;\n    this.fb = fb;\n    this.user = new User();\n    this.message = '';\n    this.userEmail = sessionStorage.getItem(\"userSession\");\n    this.showPasswordForm = false;\n  }\n  ngOnInit() {}\n  getUser() {\n    this.service.getUserByEmail(this.userEmail).subscribe(user => {\n      this.user = user;\n      this.passwordForm = this.fb.group({\n        email: [{\n          value: user.email,\n          disabled: true\n        }],\n        password: ['', [Validators.required, Validators.minLength(6), Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/)]],\n        confirmPassword: ['', Validators.required]\n      }, {\n        validators: this.passwordMatchValidator\n      });\n    });\n  }\n  passwordMatchValidator(formGroup) {\n    const password = formGroup.get('password').value;\n    const confirmPassword = formGroup.get('confirmPassword').value;\n    if (password !== confirmPassword) {\n      formGroup.get('confirmPassword').setErrors({\n        passwordMismatch: true\n      });\n    } else {\n      formGroup.get('confirmPassword').setErrors(null);\n    }\n  }\n  onSubmit() {\n    if (this.passwordForm.valid) {\n      const newPassword = this.passwordForm.get('password').value;\n      this.user.password = newPassword;\n      this.service.updateUser(this.user).subscribe(response => {\n        alert(response);\n        this.ngOnInit();\n      });\n    }\n  }\n}\n_class = UserDashboardComponent;\n_class.ɵfac = function UserDashboardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FoodBoxService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-user-dashboard\"]],\n  decls: 28,\n  vars: 0,\n  consts: [[1, \"headbet\"], [1, \"grid-container\"], [1, \"iconprof\"], [1, \"material-icons\"]],\n  template: function UserDashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 0);\n      i0.ɵɵtext(2, \"Admin Dashboard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"i\", 3);\n      i0.ɵɵtext(6, \" account_circle \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \" Profile \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"i\", 3);\n      i0.ɵɵtext(10, \" account_circle \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(11, \" Profile \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"i\", 3);\n      i0.ɵɵtext(14, \" account_circle \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \" Profile \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 2)(17, \"i\", 3);\n      i0.ɵɵtext(18, \" account_circle \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \" Profile \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 2)(21, \"i\", 3);\n      i0.ɵɵtext(22, \" account_circle \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \" Profile \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 2)(25, \"i\", 3);\n      i0.ɵɵtext(26, \" account_circle \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(27, \" Profile \");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  styles: [\".grid-container[_ngcontent-%COMP%]{\\n  display: grid;\\n  grid-template-columns: auto auto auto;\\n  gap: 20px;\\n}\\n\\n.iconprof[_ngcontent-%COMP%]{\\n  display: flex;\\n  flex-direction: column;\\n  border: 1px solid #1a1a1a;\\n  justify-items: center;\\n  align-items: center;\\n  border-radius: 10px;\\n  padding: 50px 20px;\\n}\\n.headbet[_ngcontent-%COMP%]{\\n  text-align: center;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci1kYXNoYm9hcmQvdXNlci1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxhQUFhO0VBQ2IscUNBQXFDO0VBQ3JDLFNBQVM7QUFDWDs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIseUJBQXlCO0VBQ3pCLHFCQUFxQjtFQUNyQixtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0Usa0JBQWtCO0FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5ncmlkLWNvbnRhaW5lcntcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byBhdXRvIGF1dG87XHJcbiAgZ2FwOiAyMHB4O1xyXG59XHJcblxyXG4uaWNvbnByb2Z7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICMxYTFhMWE7XHJcbiAganVzdGlmeS1pdGVtczogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBwYWRkaW5nOiA1MHB4IDIwcHg7XHJcbn1cclxuLmhlYWRiZXR7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["User","Validators","UserDashboardComponent","constructor","service","fb","user","message","userEmail","sessionStorage","getItem","showPasswordForm","ngOnInit","getUser","getUserByEmail","subscribe","passwordForm","group","email","value","disabled","password","required","minLength","pattern","confirmPassword","validators","passwordMatchValidator","formGroup","get","setErrors","passwordMismatch","onSubmit","valid","newPassword","updateUser","response","alert","i0","ɵɵdirectiveInject","i1","FoodBoxService","i2","FormBuilder","selectors","decls","vars","consts","template","UserDashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["F:\\PP\\RLL\\FoodBox\\src\\app\\user-dashboard\\user-dashboard.component.ts","F:\\PP\\RLL\\FoodBox\\src\\app\\user-dashboard\\user-dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { User } from '../model-classes/user.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FoodBoxService } from '../food-box.service';\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css']\n})\nexport class UserDashboardComponent implements OnInit {\n  user: User=new User();\n  message='';\n  userEmail=sessionStorage.getItem(\"userSession\");\n  passwordForm: FormGroup;\n  showPasswordForm = false;\n  constructor(private service: FoodBoxService, private fb: FormBuilder) { }\n  ngOnInit(): void {}\n\n  getUser(): void {\n     this.service.getUserByEmail(this.userEmail).subscribe(\n\n      user => {\n        this.user = user;\n  \n        this.passwordForm = this.fb.group({\n          email: [{ value: user.email, disabled: true }],\n          password: ['', [Validators.required, Validators.minLength(6), Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/)]],\n          confirmPassword: ['', Validators.required]\n        }, { validators: this.passwordMatchValidator });\n      }\n    )\n  }\n  passwordMatchValidator(formGroup: FormGroup) {\n    const password = formGroup.get('password').value;\n    const confirmPassword = formGroup.get('confirmPassword').value;\n  \n    if (password !== confirmPassword) {\n      formGroup.get('confirmPassword').setErrors({ passwordMismatch: true });\n    } else {\n      formGroup.get('confirmPassword').setErrors(null);\n    }\n  }\n  onSubmit(): void {\n    if (this.passwordForm.valid) {\n      const newPassword = this.passwordForm.get('password').value;\n      this.user.password = newPassword;\n      this.service.updateUser(this.user).subscribe(\n        (response)=>{\n          alert(response);\n          this.ngOnInit();\n        }\n      )\n    }\n  }\n}\n","<div>\n    <h3 class=\"headbet\">Admin Dashboard</h3>\n    <div class=\"grid-container\">\n      <div class=\"iconprof\">\n        <i class=\"material-icons\">\n          account_circle\n        </i>\n          Profile\n    \n      </div>\n      <div class=\"iconprof\">\n        <i class=\"material-icons\">\n          account_circle\n        </i>\n          Profile\n    \n      </div>\n      <div class=\"iconprof\">\n        <i class=\"material-icons\">\n          account_circle\n        </i>\n          Profile\n    \n      </div>\n      <div class=\"iconprof\">\n        <i class=\"material-icons\">\n          account_circle\n        </i>\n          Profile\n    \n      </div>\n      <div class=\"iconprof\">\n        <i class=\"material-icons\">\n          account_circle\n        </i>\n          Profile\n    \n      </div>\n      <div class=\"iconprof\">\n        <i class=\"material-icons\">\n          account_circle\n        </i>\n          Profile\n    \n      </div>\n    </div>\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}