{"ast":null,"code":"var _class;\nimport { Admin } from '../model-classes/admin.model';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../food-box.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = function () {\n  return [\"/admin-dashboard\"];\n};\nconst _c1 = function () {\n  return [\"/admin-dashboard/orders\"];\n};\nconst _c2 = function () {\n  return [\"/contact-us\"];\n};\nconst _c3 = function () {\n  return [\"/manage-categories\"];\n};\nconst _c4 = function () {\n  return [\"/admin-dashboard/change-password\"];\n};\nexport class AdminDashboardComponent {\n  constructor(service, fb) {\n    this.service = service;\n    this.fb = fb;\n    this.admin = new Admin();\n    this.message = '';\n    this.showMainDashboard = true;\n    this.showUpdateArea = false;\n    this.adminEmployeeId = sessionStorage.getItem(\"adminSession\");\n    this.profileForm = this.fb.group({\n      fullName: ['', Validators.required],\n      newPassword: ['', [Validators.minLength(6), this.passwordValidator, Validators.required]],\n      confirmNewPassword: ['', Validators.required]\n    }, {\n      validators: this.matchingPasswords\n    });\n  }\n  ngOnInit() {\n    this.getAdmin();\n    this.showMainDashboard = true;\n    this.showUpdateArea = false;\n    this.profileForm = this.fb.group({\n      fullName: ['', Validators.required],\n      newPassword: ['', [Validators.minLength(6), this.passwordValidator, Validators.required]],\n      confirmNewPassword: ['', Validators.required]\n    }, {\n      validators: this.matchingPasswords\n    });\n  }\n  passwordValidator(control) {\n    const value = control.value;\n    const hasUpper = /[A-Z]/.test(value);\n    const hasLower = /[a-z]/.test(value);\n    const hasNumber = /\\d/.test(value);\n    const hasSpecial = /[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+/.test(value);\n    if (hasUpper && hasLower && hasNumber && hasSpecial) {\n      return null;\n    } else {\n      return {\n        invalidPassword: true\n      };\n    }\n  }\n  matchingPasswords(group) {\n    const newPassword = group.get('newPassword').value;\n    const confirmNewPassword = group.get('confirmNewPassword').value;\n    return newPassword == confirmNewPassword ? null : {\n      passwordsMismatch: true\n    };\n  }\n  enableEdit() {\n    this.showMainDashboard = false;\n    this.showUpdateArea = true;\n  }\n  getAdmin() {\n    console.log(this.adminEmployeeId);\n    this.service.getAdminByEmployeeId(this.adminEmployeeId).subscribe(admin => {\n      this.admin = admin;\n      console.log(this.admin);\n    });\n  }\n  updateAdmin() {\n    this.admin.password = this.profileForm.value.newPassword;\n    console.log(this.admin.password);\n    this.service.updateAdmin(this.admin).subscribe(response => {\n      if (response == '0') alert('Oops, something went wrong!');else {\n        this.message = \"Details Updated Successfully!\";\n        this.getAdmin();\n      }\n    });\n  }\n}\n_class = AdminDashboardComponent;\n_class.ɵfac = function AdminDashboardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FoodBoxService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-admin-dashboard\"]],\n  decls: 22,\n  vars: 10,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\", \"d-none\", \"d-md-block\", \"bg-light\", \"sidebar\"], [1, \"position-sticky\"], [1, \"nav\", \"flex-column\"], [1, \"nav-item\"], [1, \"nav-link\", \"active\", 3, \"routerLink\"], [1, \"nav-link\", 3, \"routerLink\"], [1, \"col-md-9\", \"ms-sm-auto\", \"col-lg-10\", \"px-md-4\"]],\n  template: function AdminDashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"nav\", 2)(3, \"div\", 3)(4, \"ul\", 4)(5, \"li\", 5)(6, \"a\", 6);\n      i0.ɵɵtext(7, \" Dashboard \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"li\", 5)(9, \"a\", 7);\n      i0.ɵɵtext(10, \" Orders \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"li\", 5)(12, \"a\", 7);\n      i0.ɵɵtext(13, \" Contact Us Forms \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"li\", 5)(15, \"a\", 7);\n      i0.ɵɵtext(16, \" Manage Categories \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"li\", 5)(18, \"a\", 7);\n      i0.ɵɵtext(19, \" Change Password \");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(20, \"main\", 8);\n      i0.ɵɵelement(21, \"router-outlet\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c0));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c1));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(7, _c2));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(8, _c3));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(9, _c4));\n    }\n  },\n  dependencies: [i3.RouterOutlet, i3.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Admin","Validators","AdminDashboardComponent","constructor","service","fb","admin","message","showMainDashboard","showUpdateArea","adminEmployeeId","sessionStorage","getItem","profileForm","group","fullName","required","newPassword","minLength","passwordValidator","confirmNewPassword","validators","matchingPasswords","ngOnInit","getAdmin","control","value","hasUpper","test","hasLower","hasNumber","hasSpecial","invalidPassword","get","passwordsMismatch","enableEdit","console","log","getAdminByEmployeeId","subscribe","updateAdmin","password","response","alert","i0","ɵɵdirectiveInject","i1","FoodBoxService","i2","FormBuilder","selectors","decls","vars","consts","template","AdminDashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","_c1","_c2","_c3","_c4"],"sources":["F:\\PP\\RLL\\FoodBox\\src\\app\\admin-dashboard\\admin-dashboard.component.ts","F:\\PP\\RLL\\FoodBox\\src\\app\\admin-dashboard\\admin-dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FoodBoxService } from '../food-box.service';\nimport { Admin } from '../model-classes/admin.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n  admin: Admin = new Admin();\n  message = '';\n  showMainDashboard = true;\n  showUpdateArea = false;\n  adminEmployeeId = sessionStorage.getItem(\"adminSession\");\n  profileForm: FormGroup=this.fb.group({\n    fullName: ['', Validators.required],\n    newPassword: ['', [Validators.minLength(6), this.passwordValidator, Validators.required]],\n    confirmNewPassword: ['', Validators.required],\n  }, { validators: this.matchingPasswords });\n  adminDetails:any;\n  constructor(private service: FoodBoxService,private fb: FormBuilder) { }\n  ngOnInit(): void {\n    this.getAdmin();\n    this.showMainDashboard = true;\n    this.showUpdateArea = false;\n    this.profileForm = this.fb.group({\n      fullName: ['', Validators.required],\n      newPassword: ['', [Validators.minLength(6), this.passwordValidator, Validators.required]],\n      confirmNewPassword: ['', Validators.required],\n    }, { validators: this.matchingPasswords });\n  }\n  passwordValidator(control: any) {\n    const value = control.value;\n    const hasUpper = /[A-Z]/.test(value);\n    const hasLower = /[a-z]/.test(value);\n    const hasNumber = /\\d/.test(value);\n    const hasSpecial = /[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+/.test(value);\n\n    if (hasUpper && hasLower && hasNumber && hasSpecial) {\n      return null;\n    } else {\n      return { invalidPassword: true };\n    }\n  }\n  matchingPasswords(group: FormGroup) {\n    const newPassword = group.get('newPassword').value;\n    const confirmNewPassword = group.get('confirmNewPassword').value;\n\n    return newPassword == confirmNewPassword ? null : { passwordsMismatch: true };\n  }\n  enableEdit():void{\n    this.showMainDashboard = false;\n    this.showUpdateArea = true;\n  }\n  getAdmin(): void {\n    console.log(this.adminEmployeeId);\n\n    this.service.getAdminByEmployeeId(this.adminEmployeeId).subscribe(\n\n      admin => {\n        this.admin = admin;\n        console.log(this.admin);\n      }\n    )\n  }\n\n \n\n  updateAdmin() {\n\n    this.admin.password=this.profileForm.value.newPassword;\n    console.log(this.admin.password);\n    \n    this.service.updateAdmin(this.admin).subscribe(\n      (response) => {\n        if (response == '0')\n          alert('Oops, something went wrong!')\n        else {\n          this.message = \"Details Updated Successfully!\";\n          this.getAdmin();\n        }\n      }\n    )\n  }\n}\n","<!-- admin-dashboard.component.html -->\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <nav class=\"col-md-2 d-none d-md-block bg-light sidebar\">\n      <div class=\"position-sticky\">\n        <ul class=\"nav flex-column\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" [routerLink]=\"['/admin-dashboard']\">\n              Dashboard\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" [routerLink]=\"['/admin-dashboard/orders']\">\n              Orders\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" [routerLink]=\"['/contact-us']\">\n              Contact Us Forms\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" [routerLink]=\"['/manage-categories']\">\n              Manage Categories\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" [routerLink]=\"['/admin-dashboard/change-password']\">\n              Change Password\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n\n    <main class=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n      <router-outlet></router-outlet>\n    </main>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}