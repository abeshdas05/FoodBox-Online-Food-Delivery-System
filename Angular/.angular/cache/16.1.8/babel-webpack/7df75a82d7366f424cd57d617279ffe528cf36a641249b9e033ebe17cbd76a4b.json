{"ast":null,"code":"var _class;\nimport { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../razorpay.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../food-box.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nfunction PaymentComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33)(1, \"div\", 34)(2, \"span\", 35);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction PaymentComponent_div_50_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 42)(1, \"div\", 43)(2, \"div\", 44)(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 45);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"currency\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cartItem_r3 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(cartItem_r3.foodItem.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" - \", cartItem_r3.quantity, \" pcs \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(8, 3, cartItem_r3.totalFoodItemCost, \"INR\"), \" \");\n  }\n}\nfunction PaymentComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 36);\n    i0.ɵɵtext(2, \"Cart Items:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\", 37);\n    i0.ɵɵtemplate(4, PaymentComponent_div_50_li_4_Template, 9, 6, \"li\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 39)(6, \"h2\", 40)(7, \"i\");\n    i0.ɵɵtext(8, \"Total Amount\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"input\", 41);\n    i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_div_50_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.amount = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.cartItems);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.amount)(\"value\", ctx_r1.cartItemsTotalCost());\n  }\n}\nexport class PaymentComponent {\n  constructor(razorpayService, http, service, router, builder, route) {\n    this.razorpayService = razorpayService;\n    this.http = http;\n    this.service = service;\n    this.router = router;\n    this.builder = builder;\n    this.route = route;\n    this.isLoading = false;\n    this.cartItems = [];\n    this.emailInvalid = false;\n    this.contactInvalid = false;\n    this.totalCartCost = 0;\n    this.alertMessage = '';\n    this.message = '';\n  }\n  ngOnInit() {\n    this.razorpayService.loadScript().subscribe(() => {\n      // Razorpay SDK loaded\n    });\n    this.email = this.route.snapshot.params[`email`];\n    this.getUser();\n    this.amount = this.cartItemsTotalCost();\n    this.regForm = this.builder.group({\n      amount: new FormControl({\n        value: this.amount,\n        disabled: true\n      }, Validators.required),\n      email: new FormControl({\n        value: this.user.email,\n        disabled: true\n      }, [Validators.required, Validators.email]),\n      contact: new FormControl({\n        value: this.user.mobileNumber,\n        disabled: true\n      }, [Validators.required, Validators.pattern(/^\\d{10}$/)]),\n      name: new FormControl({\n        value: this.user.name,\n        disabled: true\n      }, Validators.required),\n      address: new FormControl('', Validators.required),\n      city: new FormControl('', Validators.required),\n      state: new FormControl('', Validators.required),\n      zip: new FormControl('', Validators.required)\n    });\n  }\n  getUser() {\n    this.service.getUserByEmail(\"'\" + this.email + \"'\").subscribe(user => {\n      this.user = user;\n      console.log(user);\n      this.getCartItems();\n    });\n  }\n  getCartItems() {\n    this.service.getCartItems(this.user.userId).subscribe(cartItems => {\n      this.cartItems = cartItems;\n      this.amount = this.cartItemsTotalCost();\n    });\n  }\n  cartItemsTotalCost() {\n    return this.cartItems.reduce((total, cartItem) => total + cartItem.totalFoodItemCost, 0);\n  }\n  makePayment() {\n    console.log(\"inside make payment\");\n    const userId = this.user.userId;\n    const paymentType = 'online';\n    const createdAt = new Date();\n    if (this.regForm.invalid) {\n      console.log('Form is invalid. Cannot make payment.');\n      this.message = 'Form is invalid. Cannot make payment.';\n      return;\n    }\n    const options = {\n      key: 'rzp_test_t51Ev8vhVfMTFO',\n      amount: this.amount * 100,\n      name: 'FoodBox',\n      description: 'Payment for your order',\n      handler: response => {\n        console.log(response);\n        const formValues = this.regForm.value;\n        const createdAt = new Date();\n        const orderDetails = {\n          userId: userId,\n          name: formValues.name,\n          email: formValues.email,\n          contact: formValues.contact,\n          amount: this.amount,\n          address: formValues.address,\n          city: formValues.city,\n          state: formValues.state,\n          zip: formValues.zip,\n          paymentMethod: paymentType,\n          paymentid: response.razorpay_payment_id,\n          orderDate: createdAt\n        };\n        this.service.createOrder(orderDetails).subscribe(data => {\n          console.log('Order created:', data);\n          this.service.deleteCart(this.user.userId);\n        }, error => {\n          console.error('Error creating order:', error);\n        });\n        this.service.getOrderDetailsByUserId(this.user.userId).subscribe(orderDetails => this.orderDetails = orderDetails);\n        this.router.navigate(['/order-summary', this.orderDetails.orderId]);\n      },\n      prefill: {\n        email: this.user.email,\n        contact: this.user.mobileNumber,\n        name: this.user.name\n      },\n      notes: {\n        address: 'Your Address'\n      },\n      theme: {\n        color: '#6466e3'\n      },\n      modal: {\n        ondismiss: () => {\n          console.log('dismissed');\n        }\n      }\n    };\n    const rzp = new Razorpay(options);\n    rzp.on('payment.failed', response => {\n      console.log('Payment failed:', response.error.code, response.error.description);\n    });\n    rzp.open();\n    // Reset the amount after payment is made\n    rzp.on('payment.success', response => {\n      this.amount = 0; // Reset the amount to null\n    });\n  }\n\n  payWithCash() {\n    // Handle cash payment logic here\n    this.isLoading = true; // Show the spinner\n    if (this.regForm.invalid) {\n      console.log('Form is invalid. Cannot make payment.');\n      this.message = 'Form is invalid. Cannot make payment.';\n      return;\n    }\n    setTimeout(() => {\n      const userId = this.user.userId;\n      const formValues = this.regForm.value;\n      const createdAt = new Date();\n      const paymentType = 'cash';\n      const orderDetails = {\n        userId: userId,\n        name: formValues.name,\n        email: formValues.email,\n        contact: formValues.contact,\n        amount: this.amount,\n        address: formValues.address,\n        city: formValues.city,\n        state: formValues.state,\n        zip: formValues.zip,\n        paymentMethod: paymentType,\n        orderDate: createdAt\n      };\n      this.service.createOrder(orderDetails).subscribe(data => {\n        console.log('Order created:', data);\n        this.service.deleteCart(this.user.userId);\n      }, error => {\n        console.error('Error creating order:', error);\n      });\n      this.service.getOrderDetailsByUserId(this.user.userId).subscribe(orderDetails => this.orderDetails = orderDetails);\n      this.router.navigate(['/order-summary', this.orderDetails.orderId]);\n    }, 100); // Wait for 0.1 seconds\n  }\n}\n_class = PaymentComponent;\n_class.ɵfac = function PaymentComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.RazorpayService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.FoodBoxService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-payment\"]],\n  decls: 51,\n  vars: 14,\n  consts: [[1, \"container-fluid\", \"text-dark\", 2, \"background-image\", \"url('https://images.pexels.com/photos/1037992/pexels-photo-1037992.jpeg?auto=compress&cs=tinysrgb&w=400')\", \"background-repeat\", \"no-repeat\", \"background-attachment\", \"fixed\", \"background-size\", \"cover\", \"width\", \"100%\"], [1, \"container-xxl\", \"py-5\"], [1, \"container\"], [1, \"row\", \"g-5\", \"align-items-center\"], [1, \"col-lg-6\"], [1, \"row\", \"g-6\"], [1, \"mb-5\", 3, \"ngSubmit\"], [1, \"text-center\"], [\"for\", \"amount\", 1, \"form-label\"], [1, \"input-group\", \"mb-3\"], [1, \"input-group-text\"], [\"type\", \"number\", \"id\", \"amount\", \"name\", \"amount\", \"required\", \"\", \"disabled\", \"\", 1, \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [1, \"mb-3\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"for\", \"contact\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"contact\", \"name\", \"contact\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"for\", \"address\", 1, \"form-label\"], [\"id\", \"address\", \"name\", \"address\", \"rows\", \"3\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"city\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"city\", \"name\", \"city\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"state\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"state\", \"name\", \"state\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"zip\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"zip\", \"name\", \"zip\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"py-2\", \"ml-2\", \"px-4\", \"mb-5\", 2, \"margin-left\", \"10px\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"py-2\", \"px-4\", \"mb-5\", 2, \"margin-right\", \"10px\", 3, \"click\"], [\"id\", \"spinner\", \"class\", \"show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center\", 4, \"ngIf\"], [1, \"col-lg-6\", \"mt-5\"], [1, \"\"], [4, \"ngIf\"], [\"id\", \"spinner\", 1, \"show\", \"bg-white\", \"position-fixed\", \"translate-middle\", \"w-100\", \"vh-100\", \"top-50\", \"start-50\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\", 2, \"width\", \"3rem\", \"height\", \"3rem\"], [1, \"sr-only\"], [1, \"section-title\", \"ff-secondary\", \"text-start\", \"text-primary\", \"fw-normal\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"mb-3\", \"mt-3\"], [1, \"text-center\", \"mb-3\"], [\"type\", \"number\", \"id\", \"amount\", \"name\", \"amount\", \"required\", \"\", \"disabled\", \"\", 1, \"text-center\", \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [1, \"list-group-item\"], [1, \"row\"], [1, \"col-md-8\"], [1, \"col-md-4\", \"text-right\"]],\n  template: function PaymentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function PaymentComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.makePayment();\n      });\n      i0.ɵɵelementStart(7, \"h2\", 7);\n      i0.ɵɵtext(8, \"Payment Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"label\", 8);\n      i0.ɵɵtext(10, \"Amount:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"span\", 10);\n      i0.ɵɵtext(13, \"\\u20B9\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.amount = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 12)(16, \"label\", 13);\n      i0.ɵɵtext(17, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 12)(20, \"label\", 15);\n      i0.ɵɵtext(21, \"Contact:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.contact = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 12)(24, \"label\", 17);\n      i0.ɵɵtext(25, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 12)(28, \"label\", 19);\n      i0.ɵɵtext(29, \"Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"textarea\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_textarea_ngModelChange_30_listener($event) {\n        return ctx.address = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 12)(32, \"label\", 21);\n      i0.ɵɵtext(33, \"City:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"input\", 22);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_34_listener($event) {\n        return ctx.city = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"div\", 12)(36, \"label\", 23);\n      i0.ɵɵtext(37, \"State:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"input\", 24);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_38_listener($event) {\n        return ctx.state = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"div\", 12)(40, \"label\", 25);\n      i0.ɵɵtext(41, \"ZIP Code:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"input\", 26);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_42_listener($event) {\n        return ctx.zip = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"button\", 27);\n      i0.ɵɵtext(44, \"Pay\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"button\", 28);\n      i0.ɵɵlistener(\"click\", function PaymentComponent_Template_button_click_45_listener() {\n        return ctx.payWithCash();\n      });\n      i0.ɵɵtext(46, \"Pay with Cash\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(47, PaymentComponent_div_47_Template, 4, 0, \"div\", 29);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(48, \"div\", 30)(49, \"form\", 31);\n      i0.ɵɵtemplate(50, PaymentComponent_div_50_Template, 10, 3, \"div\", 32);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.amount)(\"value\", ctx.cartItemsTotalCost());\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.email)(\"value\", ctx.user.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact)(\"value\", ctx.user.mobileNumber);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.name)(\"value\", ctx.user.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.address);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.city);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.state);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.zip);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.cartItems.length > 0);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm, i6.CurrencyPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","cartItem_r3","foodItem","name","ɵɵtextInterpolate1","quantity","ɵɵpipeBind2","totalFoodItemCost","ɵɵtemplate","PaymentComponent_div_50_li_4_Template","ɵɵlistener","PaymentComponent_div_50_Template_input_ngModelChange_9_listener","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","amount","ɵɵproperty","ctx_r1","cartItems","cartItemsTotalCost","PaymentComponent","constructor","razorpayService","http","service","router","builder","route","isLoading","emailInvalid","contactInvalid","totalCartCost","alertMessage","message","ngOnInit","loadScript","subscribe","email","snapshot","params","getUser","regForm","group","value","disabled","required","user","contact","mobileNumber","pattern","address","city","state","zip","getUserByEmail","console","log","getCartItems","userId","reduce","total","cartItem","makePayment","paymentType","createdAt","Date","invalid","options","key","description","handler","response","formValues","orderDetails","paymentMethod","paymentid","razorpay_payment_id","orderDate","createOrder","data","deleteCart","error","getOrderDetailsByUserId","navigate","orderId","prefill","notes","theme","color","modal","ondismiss","rzp","Razorpay","on","code","open","payWithCash","setTimeout","ɵɵdirectiveInject","i1","RazorpayService","i2","HttpClient","i3","FoodBoxService","i4","Router","i5","FormBuilder","ActivatedRoute","selectors","decls","vars","consts","template","PaymentComponent_Template","rf","ctx","PaymentComponent_Template_form_ngSubmit_6_listener","PaymentComponent_Template_input_ngModelChange_14_listener","PaymentComponent_Template_input_ngModelChange_18_listener","PaymentComponent_Template_input_ngModelChange_22_listener","PaymentComponent_Template_input_ngModelChange_26_listener","PaymentComponent_Template_textarea_ngModelChange_30_listener","PaymentComponent_Template_input_ngModelChange_34_listener","PaymentComponent_Template_input_ngModelChange_38_listener","PaymentComponent_Template_input_ngModelChange_42_listener","PaymentComponent_Template_button_click_45_listener","PaymentComponent_div_47_Template","PaymentComponent_div_50_Template","length"],"sources":["F:\\PP\\RLL\\FoodBox\\src\\app\\payment\\payment.component.ts","F:\\PP\\RLL\\FoodBox\\src\\app\\payment\\payment.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RazorpayService } from '../razorpay.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FoodBoxService } from '../food-box.service';\nimport { CartItem } from '../model-classes/cart-item.model';\nimport { User } from '../model-classes/user.model';\nimport { OrderDetails } from '../model-classes/order-details.model';\n\n\ndeclare var Razorpay: any;\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n  isLoading: boolean = false;\n  user:User;\n  amount!: number;\n  email!: string;\n  contact!: string;\n  name!: string;\n  address!: string;\n  city!: string;\n  state!: string;\n  zip!: string;\n  cartItems: CartItem[] = [];\n  regForm: FormGroup;\n  emailInvalid: boolean = false;\n  contactInvalid: boolean = false;\n  totalCartCost: number = 0;\n  alertMessage = '';\n  message = '';\n  orderDetails:OrderDetails;\n\n  \n  constructor(\n    private razorpayService: RazorpayService,\n    private http: HttpClient,\n    private service: FoodBoxService,\n    private router: Router,\n    private builder: FormBuilder,\n    private route:ActivatedRoute\n  ) {  }\n\n\n\n  ngOnInit(): void {\n    this.razorpayService.loadScript().subscribe(() => {\n      // Razorpay SDK loaded\n    });\n    this.email= this.route.snapshot.params[`email`];\n    this.getUser();\n    this.amount = this.cartItemsTotalCost();\n    this.regForm = this.builder.group({\n      amount: new FormControl({ value: this.amount, disabled: true }, Validators.required),\n      email: new FormControl({ value: this.user.email, disabled: true }, [Validators.required, Validators.email]),\n      contact: new FormControl({ value: this.user.mobileNumber, disabled: true }, [Validators.required, Validators.pattern(/^\\d{10}$/)]),\n      name: new FormControl({ value: this.user.name, disabled: true }, Validators.required),\n      address: new FormControl('', Validators.required),\n      city: new FormControl('', Validators.required),\n      state:new FormControl('', Validators.required),\n      zip: new FormControl('', Validators.required)\n    });\n  }\n\n  getUser():void{\n    this.service.getUserByEmail(\"'\"+this.email+\"'\").subscribe(\n      (user)=>{\n        this.user=user;\n        console.log(user);\n        \n        this.getCartItems();\n      }\n    )\n  }\n  getCartItems(): void {\n    this.service.getCartItems(this.user.userId).subscribe(cartItems => {\n      this.cartItems = cartItems;\n      this.amount = this.cartItemsTotalCost();\n    });\n  }\n\n  cartItemsTotalCost(): number {\n    return this.cartItems.reduce((total, cartItem) => total + cartItem.totalFoodItemCost, 0);\n  }\n\n  makePayment() {\n\n    console.log(\"inside make payment\");\n    \n    const userId = this.user.userId;\n    const paymentType = 'online';\n    const createdAt = new Date();\n    if (this.regForm.invalid) {\n      console.log('Form is invalid. Cannot make payment.');\n      this.message = 'Form is invalid. Cannot make payment.'\n      return;\n    }\n    const options: any = {\n      key: 'rzp_test_t51Ev8vhVfMTFO',\n      amount: this.amount * 100, // Amount in paisa\n      name: 'FoodBox',\n\n      description: 'Payment for your order',\n\n\n      handler: (response: any) => {\n        console.log(response);\n        const formValues = this.regForm.value;\n        const createdAt = new Date();\n        const orderDetails = {\n          userId: userId,\n          name: formValues.name,\n          email: formValues.email,\n          contact: formValues.contact,\n          amount: this.amount,\n          address: formValues.address,\n          city: formValues.city,\n          state: formValues.state,\n          zip: formValues.zip,\n          paymentMethod: paymentType,\n          paymentid: response.razorpay_payment_id,\n          orderDate: createdAt\n\n        };\n\n        this.service.createOrder(orderDetails).subscribe(\n          (data: any) => {\n            console.log('Order created:', data);\n            this.service.deleteCart(this.user.userId);\n          },\n          (error: any) => {\n            console.error('Error creating order:', error);\n          }\n        );\n\n        this.service.getOrderDetailsByUserId(this.user.userId).subscribe(\n          orderDetails=>this.orderDetails=orderDetails\n        )\n\n        this.router.navigate(['/order-summary', this.orderDetails.orderId]);\n      },\n      prefill: {\n        email: this.user.email,\n        contact: this.user.mobileNumber,\n        name: this.user.name\n      },\n      notes: {\n        address: 'Your Address'\n      },\n      theme: {\n        color: '#6466e3'\n      },\n      modal: {\n        ondismiss: () => {\n          console.log('dismissed');\n        }\n      }\n    };\n\n    const rzp = new Razorpay(options);\n    rzp.on('payment.failed', (response: any) => {\n      console.log('Payment failed:', response.error.code, response.error.description);\n    });\n    rzp.open();\n\n    // Reset the amount after payment is made\n    rzp.on('payment.success', (response: any) => {\n      this.amount = 0; // Reset the amount to null\n    });\n  }\n\n  payWithCash() {\n    // Handle cash payment logic here\n    this.isLoading = true; // Show the spinner\n    if (this.regForm.invalid) {\n      console.log('Form is invalid. Cannot make payment.');\n      this.message = 'Form is invalid. Cannot make payment.'\n      return;\n    }\n    setTimeout(() => {\n      const userId = this.user.userId;\n      const formValues = this.regForm.value;\n      const createdAt = new Date();\n      const paymentType = 'cash';\n      const orderDetails = {\n        userId: userId,\n        name: formValues.name,\n        email: formValues.email,\n        contact: formValues.contact,\n        amount: this.amount,\n        address: formValues.address,\n        city: formValues.city,\n        state: formValues.state,\n        zip: formValues.zip,\n        paymentMethod: paymentType,\n        orderDate: createdAt\n      };\n\n      this.service.createOrder(orderDetails).subscribe(\n        (data: any) => {\n          console.log('Order created:', data);\n          this.service.deleteCart(this.user.userId);\n        },\n        (error: any) => {\n          console.error('Error creating order:', error);\n        }\n      );\n\n      this.service.getOrderDetailsByUserId(this.user.userId).subscribe(\n        orderDetails=>this.orderDetails=orderDetails\n      )\n\n      this.router.navigate(['/order-summary', this.orderDetails.orderId]);\n\n\n\n    }, 100); // Wait for 0.1 seconds\n  }\n\n\n}","<div class=\"container-fluid text-dark\" style=\"background-image: url('https://images.pexels.com/photos/1037992/pexels-photo-1037992.jpeg?auto=compress&cs=tinysrgb&w=400'); background-repeat: no-repeat; background-attachment: fixed; background-size: cover; width:100%;\">\n  \n  <div class=\"container-xxl py-5\">\n    <div class=\"container\">\n        <div class=\"row g-5 align-items-center\">\n            <div class=\"col-lg-6\">\n                <div class=\"row g-6\">\n    \n    <form (ngSubmit)=\"makePayment()\" class=\"  mb-5\">\n      <h2 class=\"text-center\">Payment Form</h2>\n      <label for=\"amount\" class=\"form-label\">Amount:</label>\n      <div class=\" input-group mb-3\">\n        \n        <span class=\"input-group-text\">₹</span>\n        <input type=\"number\" id=\"amount\" class=\"form-control\" [(ngModel)]=\"amount\" name=\"amount\"  [value]=\"cartItemsTotalCost()\" required disabled>\n        \n      </div>\n      <div class=\"mb-3\">\n        <label for=\"email\" class=\"form-label\">Email:</label>\n        <input type=\"email\" id=\"email\" class=\"form-control\" [(ngModel)]=\"email\" name=\"email\" [value]=\"user.email\"required>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"contact\" class=\"form-label\">Contact:</label>\n        <input type=\"text\" id=\"contact\" class=\"form-control\" [(ngModel)]=\"contact\" name=\"contact\" [value]=\"user.mobileNumber\"required>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"name\" class=\"form-label\">Name:</label>\n        <input type=\"text\" id=\"name\" class=\"form-control\" [(ngModel)]=\"name\" name=\"name\" [value]=\"user.name\" required>\n      </div>\n      <!-- Additional address details form -->\n      <div class=\"mb-3\">\n        <label for=\"address\" class=\"form-label\">Address:</label>\n        <textarea id=\"address\" class=\"form-control\" [(ngModel)]=\"address\" name=\"address\" rows=\"3\" required></textarea>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"city\" class=\"form-label\">City:</label>\n        <input type=\"text\" id=\"city\" class=\"form-control\" [(ngModel)]=\"city\" name=\"city\" required>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"state\" class=\"form-label\">State:</label>\n        <input type=\"text\" id=\"state\" class=\"form-control\" [(ngModel)]=\"state\" name=\"state\" required>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"zip\" class=\"form-label\">ZIP Code:</label>\n        <input type=\"text\" id=\"zip\" class=\"form-control\" [(ngModel)]=\"zip\" name=\"zip\" required>\n      </div>\n      \n      \n      <button type=\"submit\" class=\"btn btn-primary py-2 ml-2 px-4 mb-5\" style=\"margin-left: 10px;\">Pay</button>\n      <button type=\"button\" class=\"btn btn-secondary py-2 px-4 mb-5\" style=\"margin-right: 10px;\"(click)=\"payWithCash()\">Pay with Cash</button>\n      <!-- Spinner -->\n  <div id=\"spinner\" *ngIf=\"isLoading\" class=\"show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center\">\n    <div class=\"spinner-border text-primary\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n    </div>\n  </div>\n    </form>\n    </div>\n    </div>\n    <div class=\"col-lg-6 mt-5\">\n    <form class=\"\">\n      <div *ngIf=\"cartItems.length > 0\">\n        <h3 class=\"section-title ff-secondary text-start text-primary fw-normal\">Cart Items:</h3>\n        <ul class=\"list-group\">\n          <li *ngFor=\"let cartItem of cartItems\" class=\"list-group-item\">\n            <div class=\"row\">\n              <div class=\"col-md-8\">\n                <strong>{{ cartItem.foodItem.name }}</strong> - {{ cartItem.quantity }} pcs\n              </div>\n              <div class=\"col-md-4 text-right\">\n                {{ cartItem.totalFoodItemCost | currency : \"INR\" }}\n              </div>\n            </div>\n            \n          </li>\n        </ul>\n        <div class=\"mb-3 mt-3\">\n          <h2 class=\"text-center mb-3\"><i>Total Amount</i></h2>\n       <input type=\"number\" id=\"amount\" class=\" text-center form-control\" [(ngModel)]=\"amount\" name=\"amount\"  [value]=\"cartItemsTotalCost()\" required disabled>\n        </div>\n      </div>\n  \n    </form>\n  </div>\n  </div>\n  </div>\n  </div>\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}