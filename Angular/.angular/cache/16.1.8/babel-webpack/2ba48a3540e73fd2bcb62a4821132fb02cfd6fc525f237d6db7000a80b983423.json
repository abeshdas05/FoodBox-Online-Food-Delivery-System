{"ast":null,"code":"var _class;\nimport { FoodItem } from '../food-item.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../cart.service\";\nimport * as i2 from \"@angular/router\";\nexport class FoodItemsManagementComponent {\n  constructor(service, route) {\n    this.service = service;\n    this.route = route;\n    this.showList = true;\n    this.showAdd = false;\n    this.newFoodItem = new FoodItem();\n    this.foodItems = [];\n  }\n  ngOnInit() {\n    // Load food items based on the category ID from route\n    this.showAdd = false;\n    this.categoryId = this.route.snapshot.params[`categoryId`];\n    this.loadFoodItems(this.categoryId);\n    this.getCategory();\n  }\n  enableAdd() {\n    this.showList = false;\n    this.showAdd = true;\n  }\n  loadFoodItems(categoryId) {\n    this.service.getFoodItemsByCategory(categoryId).subscribe(foodItems => {\n      this.foodItems = foodItems;\n    });\n  }\n  getCategory() {\n    this.service.getCategoryById(this.categoryId).subscribe(category => this.selectedCategory = category);\n  }\n  editFoodItem(foodItem) {}\n  deleteFoodItem(foodItem) {}\n  // showAddForm(): void {\n  //   this.selectedFoodItem = {\n  //     foodItemId: 0,\n  //     name: '',\n  //     description: '',\n  //     price: 0,\n  //     imagePath: '',\n  //     availableQuantity: 0,\n  //     enabled: true\n  //   };\n  //   this.showEditFormVar = true;\n  // }\n  // showEditForm(foodItem: FoodItem): void {\n  //   this.selectedFoodItem = foodItem;\n  //   this.showEditFormVar = true;\n  // }\n  // saveFoodItem(): void {\n  //   // Call your service to save the food item (add/edit)\n  //   this.service.saveFoodItem(this.selectedFoodItem).subscribe(() => {\n  //     this.loadFoodItems(this.selectedFoodItem.category.categoryId);\n  //     this.cancelEdit();\n  //   });\n  // }\n  // deleteFoodItem(foodItemId: number): void {\n  //   // Call your service to delete the food item\n  //   this.service.deleteFoodItem(foodItemId).subscribe(() => {\n  //     this.loadFoodItems(this.selectedFoodItem.category.categoryId);\n  //   });\n  // }\n  // cancelEdit(): void {\n  //   this.selectedFoodItem = undefined;\n  //   this.showEditForm = false;\n  // }\n  // onImageChange(event: Event): void {\n  //   const input = event.target as HTMLInputElement;\n  //   if (input.files && input.files.length > 0) {\n  //     const file = input.files[0];\n  //     this.newFoodItem.imageFile = file;\n  //     const reader = new FileReader();\n  //     reader.onload = (e) => {\n  //       this.previewImage = e.target?.result as string;\n  //     };\n  //     reader.readAsDataURL(file);\n  //   }\n  // }\n  addFoodItem(foodItem) {\n    console.log(foodItem);\n    this.service.addFoodItem(this.categoryId, foodItem).subscribe(() => {\n      this.ngOnInit();\n    });\n  }\n}\n_class = FoodItemsManagementComponent;\n_class.ɵfac = function FoodItemsManagementComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CartService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-food-items-management\"]],\n  decls: 1,\n  vars: 0,\n  template: function FoodItemsManagementComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \" -->\\n\");\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FoodItem","FoodItemsManagementComponent","constructor","service","route","showList","showAdd","newFoodItem","foodItems","ngOnInit","categoryId","snapshot","params","loadFoodItems","getCategory","enableAdd","getFoodItemsByCategory","subscribe","getCategoryById","category","selectedCategory","editFoodItem","foodItem","deleteFoodItem","addFoodItem","console","log","i0","ɵɵdirectiveInject","i1","CartService","i2","ActivatedRoute","selectors","decls","vars","template","FoodItemsManagementComponent_Template","rf","ctx","ɵɵtext"],"sources":["F:\\PP\\RLL\\FoodBox\\src\\app\\food-items-management\\food-items-management.component.ts","F:\\PP\\RLL\\FoodBox\\src\\app\\food-items-management\\food-items-management.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { CartService } from '../cart.service';\nimport { Category, FoodItem } from '../food-item.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { noop } from 'rxjs';\n\n@Component({\n  selector: 'app-food-items-management',\n  templateUrl: './food-items-management.component.html',\n  styleUrls: ['./food-items-management.component.css']\n})\nexport class FoodItemsManagementComponent implements OnInit {\n  showList=true;\nshowAdd=false;\n  newFoodItem:FoodItem=new FoodItem();\n  foodItems:FoodItem[]=[];\n  selectedCategory!:Category;\n  categoryId!:number;\n  constructor(\n    private service: CartService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    // Load food items based on the category ID from route\n    this.showAdd=false;\n    this.categoryId = this.route.snapshot.params[`categoryId`];\n    this.loadFoodItems(this.categoryId);\n    this.getCategory();\n\n  }\n  enableAdd():void{\n    this.showList=false;\n    this.showAdd=true;\n  }\n  loadFoodItems(categoryId: number): void {\n    this.service.getFoodItemsByCategory(categoryId).subscribe(foodItems => {\n      this.foodItems = foodItems;\n    });\n  }\n  getCategory():void{\n    this.service.getCategoryById(this.categoryId).subscribe(\n      (category)=>this.selectedCategory=category\n    )\n  }\n  editFoodItem(foodItem:FoodItem){\n\n  }\n  deleteFoodItem(foodItem:FoodItem){\n    \n  }\n\n  // showAddForm(): void {\n  //   this.selectedFoodItem = {\n  //     foodItemId: 0,\n  //     name: '',\n  //     description: '',\n  //     price: 0,\n  //     imagePath: '',\n  //     availableQuantity: 0,\n  //     enabled: true\n  //   };\n  //   this.showEditFormVar = true;\n  // }\n\n  // showEditForm(foodItem: FoodItem): void {\n  //   this.selectedFoodItem = foodItem;\n  //   this.showEditFormVar = true;\n  // }\n\n  // saveFoodItem(): void {\n  //   // Call your service to save the food item (add/edit)\n  //   this.service.saveFoodItem(this.selectedFoodItem).subscribe(() => {\n  //     this.loadFoodItems(this.selectedFoodItem.category.categoryId);\n  //     this.cancelEdit();\n  //   });\n  // }\n\n  // deleteFoodItem(foodItemId: number): void {\n  //   // Call your service to delete the food item\n  //   this.service.deleteFoodItem(foodItemId).subscribe(() => {\n  //     this.loadFoodItems(this.selectedFoodItem.category.categoryId);\n  //   });\n  // }\n\n  // cancelEdit(): void {\n  //   this.selectedFoodItem = undefined;\n  //   this.showEditForm = false;\n  // }\n  // onImageChange(event: Event): void {\n  //   const input = event.target as HTMLInputElement;\n  //   if (input.files && input.files.length > 0) {\n  //     const file = input.files[0];\n  //     this.newFoodItem.imageFile = file;\n\n  //     const reader = new FileReader();\n  //     reader.onload = (e) => {\n  //       this.previewImage = e.target?.result as string;\n  //     };\n  //     reader.readAsDataURL(file);\n  //   }\n  // }\n\n  addFoodItem(foodItem:FoodItem): void {\n    console.log(foodItem);\n    \n    this.service.addFoodItem(this.categoryId,foodItem).subscribe(\n     ()=>{ \n    this.ngOnInit();\n     }\n    )\n  }\n\n//     this.previewImage = undefined;\n//     this.isAdding = false;\n//   }\n// }\n}","<!-- <span *ngIf=\"showList; then listOfFood\"></span>\n<ng-template #listOfFood>\n  <div class=\"row\">\n    <div class=\"col-md-10\" style=\"height: 100vh; margin: 0 auto\">\n      <h2 style=\"text-align: center\">\n        List of Food Items - {{ selectedCategory.name }}\n      </h2>\n      <br />\n      <div style=\"display: flex; justify-content: space-between\">\n        <div>\n          <button (click)=\"enableAdd()\" class=\"btn btn-sm btn-success\">\n            Add New Food Item\n          </button>\n        </div>\n      </div>\n      <br />\n      <br />\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Name & Description</th>\n            <th>Available Quantity</th>\n            <th>Enabled</th>\n            <th>Image Preview</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let foodItem of foodItems\">\n            <td>\n              <h3>{{ foodItem.name }}</h3>\n              <p>{{ foodItem.description }}</p>\n            </td>\n            <td>{{ foodItem.availableQuantity }}</td>\n            <td>{{ foodItem.enabled }}</td>\n            <td>\n              <img src=\"{{ foodItem.imagePath }}\" alt=\"{{ foodItem.name }}\" height=\"250px\" width=\"250px\" />\n            </td>\n            <td>\n              <button\n                class=\"btn btn-sm btn-info\"\n                (click)=\"editFoodItem(foodItem)\"\n              >\n                Edit\n              </button>\n            </td>\n            <td>\n              <button\n                class=\"btn btn-sm btn-danger\"\n                (click)=\"deleteFoodItem(foodItem)\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</ng-template>\n<span *ngIf=\"showAdd; then addFood\"></span>\n<ng-template #addFood>\n  <button class=\"btn btn-secondary btn-sm\" (click)=\"ngOnInit()\">Go Back</button>\n  <br />\n  <div class=\"row\">\n    <div class=\"col-md-10\" style=\"height: 100vh; margin: 0 auto\">\n      <h2>Add New Food Details</h2>\n      <br />\n      <form>\n        <div class=\"form-group\">\n          Name\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"foodName\"\n            name=\"foodName\"\n            [(ngModel)]=\"newFoodItem.name\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          Description\n          <textarea\n            class=\"form-control\"\n            aria-label=\"With textarea\"\n            id=\"foodDescription\"\n            name=\"foodDescription\"\n            [(ngModel)]=\"newFoodItem.description\"\n            required\n          ></textarea>\n        </div>\n        <div class=\"form-group\">\n          Price\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"foodPrice\"\n            name=\"foodPrice\"\n            min=\"0\"\n            [(ngModel)]=\"newFoodItem.price\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          Available Quantity\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"foodAvailableQuantity\"\n            name=\"foodAvailableQuantity\"\n            min=\"1\"\n            size=\"1\"\n\n            [(ngModel)]=\"newFoodItem.availableQuantity\"\n            required\n          />\n        </div>\n        <div class=\"form-check\">\n          Enabled\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"foodEnabledTrue\"\n            id=\"foodEnabledTrue\"\n            value=\"true\"\n            [(ngModel)]=\"newFoodItem.enabled\"\n            checked\n          />\n          True\n        </div>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"foodEnabledFalse\"\n            id=\"foodEnabledFalse\"\n            value=\"false\"\n            [(ngModel)]=\"newFoodItem.enabled\"\n            checked\n          />\n          False\n        </div>\n        <button\n          type=\"submit\"\n          class=\"btn btn-dark\"\n          (click)=\"addFoodItem(newFoodItem)\"\n        >\n          Add\n        </button>\n      </form>\n    </div>\n  </div>\n</ng-template>\n<!-- <span *ngIf=\"individualEmployee; then empDetails\"></span>\n  <ng-template #empDetails>\n    <div class=\"row\" style=\"height: 100vh\">\n      <div class=\"col-md-10\" style=\"height: 100vh; margin: 0 auto\">\n        <br />\n        <table class=\"table table-dark\">\n          <tbody>\n            <tr>\n              <td colspan=\"2\">\n                <h2>\n                  Details of\n                  <em\n                    >{{ newEmployee.first_name }}\n                    {{ newEmployee.last_name }}</em\n                  >\n                </h2>\n              </td>\n            </tr>\n            <tr>\n              <th>Employee Id</th>\n              <td>{{ newEmployee.id }}</td>\n            </tr>\n            <tr>\n              <th>Employee First Name</th>\n              <td>{{ newEmployee.first_name }}</td>\n            </tr>\n            <tr>\n              <th>Employee Last Name</th>\n              <td>{{ newEmployee.last_name }}</td>\n            </tr>\n            <tr>\n              <th>Employee Email</th>\n              <td>{{ newEmployee.email }}</td>\n            </tr>\n            <tr>\n              <td colspan=\"2\">\n                <button (click)=\"ngOnInit()\" class=\"btn btn-info btn-sm\">\n                  Employee List\n                </button>\n                &nbsp;\n                <button\n                  (click)=\"deleteEmployee(newEmployee.id)\"\n                  class=\"btn btn-danger btn-sm\"\n                >\n                  Delete\n                </button>\n                &nbsp;\n                <button\n                  (click)=\"getEmployeeForEdit(newEmployee)\"\n                  class=\"btn btn-warning btn-sm\"\n                >\n                  Update\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </ng-template>\n  <span *ngIf=\"editEmployee; then editEmp\"></span>\n  <ng-template #editEmp>\n    <button class=\"btn btn-secondary btn-sm\" (click)=\"ngOnInit()\">\n      Go Back\n    </button>\n    <br />\n    <div class=\"row\">\n      <div class=\"col-md-10\" style=\"height: 100vh; margin: 0 auto\">\n        <h2>Update Employees Details</h2>\n        <br />\n        <form>\n          <div class=\"form-group\">\n            <label for=\"firstName\">First Name</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"firstName\"\n              name=\"firstName\"\n              [(ngModel)]=\"newEmployee.first_name\"\n              required\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"lastName\">Last Name</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"lastName\"\n              name=\"lastName\"\n              [(ngModel)]=\"newEmployee.last_name\"\n              required\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              id=\"email\"\n              name=\"email\"\n              [(ngModel)]=\"newEmployee.email\"\n              required\n            />\n          </div>\n          <button type=\"submit\" class=\"btn btn-dark\" (click)=\"updateEmployee()\">\n            Update\n          </button>\n        </form>\n      </div>\n    </div>\n  </ng-template>\n</div>\n<div *ngIf=\"!admin.loggedIn\">\n  <div style=\"height: 100vh\">\n    <h1 style=\"color: red; text-align: center\">Invalid Access!</h1>\n  </div>\n</div> --> -->\n"],"mappings":";AAEA,SAAmBA,QAAQ,QAAQ,oBAAoB;;;;AASvD,OAAM,MAAOC,4BAA4B;EAOvCC,YACUC,OAAoB,EACpBC,KAAqB;IADrB,KAAAD,OAAO,GAAPA,OAAO;IACP,KAAAC,KAAK,GAALA,KAAK;IARf,KAAAC,QAAQ,GAAC,IAAI;IACf,KAAAC,OAAO,GAAC,KAAK;IACX,KAAAC,WAAW,GAAU,IAAIP,QAAQ,EAAE;IACnC,KAAAQ,SAAS,GAAY,EAAE;EAMpB;EAEHC,QAAQA,CAAA;IACN;IACA,IAAI,CAACH,OAAO,GAAC,KAAK;IAClB,IAAI,CAACI,UAAU,GAAG,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,MAAM,CAAC,YAAY,CAAC;IAC1D,IAAI,CAACC,aAAa,CAAC,IAAI,CAACH,UAAU,CAAC;IACnC,IAAI,CAACI,WAAW,EAAE;EAEpB;EACAC,SAASA,CAAA;IACP,IAAI,CAACV,QAAQ,GAAC,KAAK;IACnB,IAAI,CAACC,OAAO,GAAC,IAAI;EACnB;EACAO,aAAaA,CAACH,UAAkB;IAC9B,IAAI,CAACP,OAAO,CAACa,sBAAsB,CAACN,UAAU,CAAC,CAACO,SAAS,CAACT,SAAS,IAAG;MACpE,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B,CAAC,CAAC;EACJ;EACAM,WAAWA,CAAA;IACT,IAAI,CAACX,OAAO,CAACe,eAAe,CAAC,IAAI,CAACR,UAAU,CAAC,CAACO,SAAS,CACpDE,QAAQ,IAAG,IAAI,CAACC,gBAAgB,GAACD,QAAQ,CAC3C;EACH;EACAE,YAAYA,CAACC,QAAiB,GAE9B;EACAC,cAAcA,CAACD,QAAiB,GAEhC;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAE,WAAWA,CAACF,QAAiB;IAC3BG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IAErB,IAAI,CAACnB,OAAO,CAACqB,WAAW,CAAC,IAAI,CAACd,UAAU,EAACY,QAAQ,CAAC,CAACL,SAAS,CAC3D,MAAI;MACL,IAAI,CAACR,QAAQ,EAAE;IACd,CAAC,CACD;EACH;;SApGWR,4BAA4B;;mBAA5BA,MAA4B,EAAA0B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;AAAA;;QAA5B/B,MAA4B;EAAAgC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,sCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCiQ9BX,EAAA,CAAAa,MAAA,aACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}