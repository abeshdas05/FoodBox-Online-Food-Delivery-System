{"ast":null,"code":"var _class;\nimport { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../razorpay.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../food-box.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nfunction PaymentComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \"Email should not be blank or invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \"Contact should not be blank or invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \"Name should not be blank or invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \"Address should not be blank or invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \"City should not be blank or invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \"State should not be blank or invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1, \"Zip should not be blank or invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_div_58_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 41)(1, \"div\", 42)(2, \"div\", 43)(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 44);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"currency\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cartItem_r9 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(cartItem_r9.foodItem.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" - \", cartItem_r9.quantity, \" pcs \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(8, 3, cartItem_r9.totalFoodItemCost, \"INR\"), \" \");\n  }\n}\nfunction PaymentComponent_div_58_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 35);\n    i0.ɵɵtext(2, \"Cart Items:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\", 36);\n    i0.ɵɵtemplate(4, PaymentComponent_div_58_li_4_Template, 9, 6, \"li\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 38)(6, \"h2\", 39)(7, \"i\");\n    i0.ɵɵtext(8, \"Total Amount\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"input\", 40);\n    i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_div_58_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.amount = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.cartItems);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r7.amount)(\"value\", ctx_r7.cartItemsTotalCost());\n  }\n}\nexport class PaymentComponent {\n  constructor(razorpayService, http, service, router, builder, route) {\n    this.razorpayService = razorpayService;\n    this.http = http;\n    this.service = service;\n    this.router = router;\n    this.builder = builder;\n    this.route = route;\n    this.isLoading = false;\n    this.cartItems = [];\n    this.emailInvalid = false;\n    this.contactInvalid = false;\n    this.totalCartCost = 0;\n    this.alertMessage = '';\n    this.message = '';\n  }\n  ngOnInit() {\n    this.razorpayService.loadScript().subscribe(() => {\n      // Razorpay SDK loaded\n    });\n    this.email = this.route.snapshot.params[`email`];\n    this.getUser();\n    this.amount = this.cartItemsTotalCost();\n    this.regForm = this.builder.group({\n      amount: new FormControl({\n        value: this.amount,\n        disabled: true\n      }, Validators.required),\n      email: new FormControl({\n        value: this.user.email,\n        disabled: true\n      }, [Validators.required, Validators.email]),\n      contact: new FormControl({\n        value: this.user.mobile,\n        disabled: true\n      }, [Validators.required, Validators.pattern(/^\\d{10}$/)]),\n      name: new FormControl({\n        value: this.user.name,\n        disabled: true\n      }, Validators.required),\n      address: new FormControl('', Validators.required),\n      city: new FormControl('', Validators.required),\n      state: new FormControl('', Validators.required),\n      zip: new FormControl('', Validators.required)\n    });\n  }\n  getUser() {\n    this.service.getUserByEmail(\"'\" + this.email + \"'\").subscribe(user => {\n      this.user = user;\n      this.getCartItems();\n    });\n  }\n  getCartItems() {\n    this.service.getCartItems(this.user.userId).subscribe(cartItems => {\n      this.cartItems = cartItems;\n      this.amount = this.cartItemsTotalCost();\n    });\n  }\n  cartItemsTotalCost() {\n    return this.cartItems.reduce((total, cartItem) => total + cartItem.totalFoodItemCost, 0);\n  }\n  makePayment() {\n    const userId = this.user.userId;\n    const paymentType = 'online';\n    const createdAt = new Date();\n    if (this.regForm.invalid) {\n      console.log('Form is invalid. Cannot make payment.');\n      this.message = 'Form is invalid. Cannot make payment.';\n      return;\n    }\n    const options = {\n      key: 'rzp_test_t51Ev8vhVfMTFO',\n      amount: this.amount * 100,\n      name: 'FoodBox',\n      description: 'Payment for your order',\n      handler: response => {\n        console.log(response);\n        const formValues = this.regForm.value;\n        const createdAt = new Date();\n        const orderDetails = {\n          userId: userId,\n          name: formValues.name,\n          email: formValues.email,\n          contact: formValues.contact,\n          amount: this.amount,\n          address: formValues.address,\n          city: formValues.city,\n          state: formValues.state,\n          zip: formValues.zip,\n          paymentMethod: paymentType,\n          paymentid: response.razorpay_payment_id,\n          orderDate: createdAt\n        };\n        this.service.createOrder(orderDetails).subscribe(data => {\n          console.log('Order created:', data);\n          this.service.deleteCart(this.user.userId);\n        }, error => {\n          console.error('Error creating order:', error);\n        });\n        this.service.getOrderDetailsByUserId(this.user.userId).subscribe(orderDetails => this.orderDetails = orderDetails);\n        this.router.navigate(['/order-summary', this.orderDetails.orderId]);\n      },\n      prefill: {\n        email: this.email,\n        contact: this.contact,\n        name: this.name\n      },\n      notes: {\n        address: 'Your Address'\n      },\n      theme: {\n        color: '#6466e3'\n      },\n      modal: {\n        ondismiss: () => {\n          console.log('dismissed');\n        }\n      }\n    };\n    const rzp = new Razorpay(options);\n    rzp.on('payment.failed', response => {\n      console.log('Payment failed:', response.error.code, response.error.description);\n    });\n    rzp.open();\n    // Reset the amount after payment is made\n    rzp.on('payment.success', response => {\n      this.amount = 0; // Reset the amount to null\n    });\n  }\n\n  payWithCash() {\n    // Handle cash payment logic here\n    this.isLoading = true; // Show the spinner\n    if (this.regForm.invalid) {\n      console.log('Form is invalid. Cannot make payment.');\n      this.message = 'Form is invalid. Cannot make payment.';\n      return;\n    }\n    setTimeout(() => {\n      const userId = this.user.userId;\n      const formValues = this.regForm.value;\n      const createdAt = new Date();\n      const paymentType = 'cash';\n      const userDetails = {/* user data */};\n      const orderDetails = {\n        userId: userId,\n        name: formValues.name,\n        email: formValues.email,\n        contact: formValues.contact,\n        amount: this.amount,\n        address: formValues.address,\n        city: formValues.city,\n        state: formValues.state,\n        zip: formValues.zip,\n        paymentMethod: paymentType,\n        orderDate: createdAt\n      };\n      this.service.createOrder(orderDetails).subscribe(data => {\n        console.log('Order created:', data);\n        this.service.deleteCart(this.user.userId);\n      }, error => {\n        console.error('Error creating order:', error);\n      });\n      this.service.getOrderDetailsByUserId(this.user.userId).subscribe(orderDetails => this.orderDetails = orderDetails);\n      this.router.navigate(['/order-summary', this.orderDetails.orderId]);\n    }, 100); // Wait for 0.1 seconds\n  }\n}\n_class = PaymentComponent;\n_class.ɵfac = function PaymentComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.RazorpayService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.FoodBoxService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-payment\"]],\n  decls: 59,\n  vars: 11,\n  consts: [[1, \"container-fluid\", \"text-dark\", 2, \"background-image\", \"url('https://images.pexels.com/photos/1037992/pexels-photo-1037992.jpeg?auto=compress&cs=tinysrgb&w=400')\", \"background-repeat\", \"no-repeat\", \"background-attachment\", \"fixed\", \"background-size\", \"cover\", \"width\", \"100%\"], [1, \"container-xxl\", \"py-5\"], [1, \"container\"], [1, \"row\", \"g-5\", \"align-items-center\"], [1, \"col-lg-6\"], [1, \"row\", \"g-6\"], [1, \"mb-5\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\"], [\"for\", \"amount\", 1, \"form-label\"], [1, \"input-group\", \"mb-3\"], [1, \"input-group-text\"], [\"type\", \"number\", \"id\", \"amount\", \"name\", \"amount\", \"required\", \"\", \"disabled\", \"\", 1, \"form-control\", 3, \"value\"], [1, \"mb-3\", \"form-floating\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"mb-3\"], [\"for\", \"contact\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"contact\", \"formControlName\", \"contact\", \"name\", \"contact\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"address\", 1, \"form-label\", \"is-invalid\"], [\"id\", \"address\", \"formControlName\", \"address\", \"name\", \"address\", \"rows\", \"3\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"city\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"city\", \"formControlName\", \"city\", \"name\", \"city\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"state\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"state\", \"formControlName\", \"state\", \"name\", \"state\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"zip\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"zip\", \"formControlName\", \"zip\", \"name\", \"zip\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"py-2\", \"ml-2\", \"px-4\", \"mb-5\", 2, \"margin-left\", \"10px\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"py-2\", \"px-4\", \"mb-5\", 2, \"margin-right\", \"10px\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [1, \"col-lg-6\", \"mt-5\"], [1, \"\"], [4, \"ngIf\"], [1, \"section-title\", \"ff-secondary\", \"text-start\", \"text-primary\", \"fw-normal\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"mb-3\", \"mt-3\"], [1, \"text-center\", \"mb-3\"], [\"type\", \"number\", \"id\", \"amount\", \"name\", \"amount\", \"required\", \"\", \"disabled\", \"\", 1, \"text-center\", \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [1, \"list-group-item\"], [1, \"row\"], [1, \"col-md-8\"], [1, \"col-md-4\", \"text-right\"]],\n  template: function PaymentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function PaymentComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.makePayment();\n      });\n      i0.ɵɵelementStart(7, \"h2\", 7);\n      i0.ɵɵtext(8, \"Payment Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"label\", 8);\n      i0.ɵɵtext(10, \"Amount:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"span\", 10);\n      i0.ɵɵtext(13, \"\\u20B9 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 12);\n      i0.ɵɵelement(16, \"input\", 13);\n      i0.ɵɵelementStart(17, \"label\", 14);\n      i0.ɵɵtext(18, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, PaymentComponent_div_19_Template, 2, 0, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 16)(21, \"label\", 17);\n      i0.ɵɵtext(22, \"Contact:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 18);\n      i0.ɵɵtemplate(24, PaymentComponent_div_24_Template, 2, 0, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 16)(26, \"label\", 19);\n      i0.ɵɵtext(27, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"input\", 20);\n      i0.ɵɵtemplate(29, PaymentComponent_div_29_Template, 2, 0, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 16)(31, \"label\", 21);\n      i0.ɵɵtext(32, \"Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"textarea\", 22);\n      i0.ɵɵtemplate(34, PaymentComponent_div_34_Template, 2, 0, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 16)(36, \"label\", 23);\n      i0.ɵɵtext(37, \"City:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"input\", 24);\n      i0.ɵɵtemplate(39, PaymentComponent_div_39_Template, 2, 0, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\", 16)(41, \"label\", 25);\n      i0.ɵɵtext(42, \"State:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(43, \"input\", 26);\n      i0.ɵɵtemplate(44, PaymentComponent_div_44_Template, 2, 0, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"div\", 16)(46, \"label\", 27);\n      i0.ɵɵtext(47, \"ZIP Code:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(48, \"input\", 28);\n      i0.ɵɵtemplate(49, PaymentComponent_div_49_Template, 2, 0, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"button\", 29);\n      i0.ɵɵtext(51, \"Pay\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"button\", 30);\n      i0.ɵɵlistener(\"click\", function PaymentComponent_Template_button_click_52_listener() {\n        return ctx.payWithCash();\n      });\n      i0.ɵɵtext(53, \"Pay with Cash\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"div\", 31);\n      i0.ɵɵtext(55);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(56, \"div\", 32)(57, \"form\", 33);\n      i0.ɵɵtemplate(58, PaymentComponent_div_58_Template, 10, 3, \"div\", 34);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.regForm);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"value\", ctx.regForm.controls[\"email\"]);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.regForm.controls[\"email\"].touched && ctx.regForm.controls[\"email\"].invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.regForm.controls[\"contact\"].touched && ctx.regForm.controls[\"contact\"].invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.regForm.controls[\"name\"].touched && ctx.regForm.controls[\"name\"].invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.regForm.controls[\"address\"].touched && ctx.regForm.controls[\"address\"].invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.regForm.controls[\"city\"].touched && ctx.regForm.controls[\"city\"].invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.regForm.controls[\"state\"].touched && ctx.regForm.controls[\"state\"].invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.regForm.controls[\"zip\"].touched && ctx.regForm.controls[\"zip\"].invalid);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.message);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.cartItems.length > 0);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm, i5.FormGroupDirective, i5.FormControlName, i6.CurrencyPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","cartItem_r9","foodItem","name","ɵɵtextInterpolate1","quantity","ɵɵpipeBind2","totalFoodItemCost","ɵɵtemplate","PaymentComponent_div_58_li_4_Template","ɵɵlistener","PaymentComponent_div_58_Template_input_ngModelChange_9_listener","$event","ɵɵrestoreView","_r11","ctx_r10","ɵɵnextContext","ɵɵresetView","amount","ɵɵproperty","ctx_r7","cartItems","cartItemsTotalCost","PaymentComponent","constructor","razorpayService","http","service","router","builder","route","isLoading","emailInvalid","contactInvalid","totalCartCost","alertMessage","message","ngOnInit","loadScript","subscribe","email","snapshot","params","getUser","regForm","group","value","disabled","required","user","contact","mobile","pattern","address","city","state","zip","getUserByEmail","getCartItems","userId","reduce","total","cartItem","makePayment","paymentType","createdAt","Date","invalid","console","log","options","key","description","handler","response","formValues","orderDetails","paymentMethod","paymentid","razorpay_payment_id","orderDate","createOrder","data","deleteCart","error","getOrderDetailsByUserId","navigate","orderId","prefill","notes","theme","color","modal","ondismiss","rzp","Razorpay","on","code","open","payWithCash","setTimeout","userDetails","ɵɵdirectiveInject","i1","RazorpayService","i2","HttpClient","i3","FoodBoxService","i4","Router","i5","FormBuilder","ActivatedRoute","selectors","decls","vars","consts","template","PaymentComponent_Template","rf","ctx","PaymentComponent_Template_form_ngSubmit_6_listener","ɵɵelement","PaymentComponent_div_19_Template","PaymentComponent_div_24_Template","PaymentComponent_div_29_Template","PaymentComponent_div_34_Template","PaymentComponent_div_39_Template","PaymentComponent_div_44_Template","PaymentComponent_div_49_Template","PaymentComponent_Template_button_click_52_listener","PaymentComponent_div_58_Template","controls","touched","length"],"sources":["F:\\PP\\RLL\\FoodBox\\src\\app\\payment\\payment.component.ts","F:\\PP\\RLL\\FoodBox\\src\\app\\payment\\payment.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RazorpayService } from '../razorpay.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FoodBoxService } from '../food-box.service';\nimport { CartItem } from '../model-classes/cart-item.model';\nimport { User } from '../model-classes/user.model';\nimport { OrderDetails } from '../model-classes/order-details.model';\n\n\ndeclare var Razorpay: any;\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n  isLoading: boolean = false;\n  user:User;\n  amount!: number;\n  email!: string;\n  contact!: string;\n  name!: string;\n  address!: string;\n  city!: string;\n  state!: string;\n  zip!: string;\n  cartItems: CartItem[] = [];\n  regForm: FormGroup;\n  emailInvalid: boolean = false;\n  contactInvalid: boolean = false;\n  totalCartCost: number = 0;\n  alertMessage = '';\n  message = '';\n  orderDetails:OrderDetails;\n\n  \n  constructor(\n    private razorpayService: RazorpayService,\n    private http: HttpClient,\n    private service: FoodBoxService,\n    private router: Router,\n    private builder: FormBuilder,\n    private route:ActivatedRoute\n  ) {  }\n\n\n\n  ngOnInit(): void {\n    this.razorpayService.loadScript().subscribe(() => {\n      // Razorpay SDK loaded\n    });\n    this.email= this.route.snapshot.params[`email`];\n    this.getUser();\n    this.amount = this.cartItemsTotalCost();\n    this.regForm = this.builder.group({\n      amount: new FormControl({ value: this.amount, disabled: true }, Validators.required),\n      email: new FormControl({ value: this.user.email, disabled: true }, [Validators.required, Validators.email]),\n      contact: new FormControl({ value: this.user.mobile, disabled: true }, [Validators.required, Validators.pattern(/^\\d{10}$/)]),\n      name: new FormControl({ value: this.user.name, disabled: true }, Validators.required),\n      address: new FormControl('', Validators.required),\n      city: new FormControl('', Validators.required),\n      state: new FormControl('', Validators.required),\n      zip: new FormControl('', Validators.required)\n    });\n  }\n\n  getUser():void{\n    this.service.getUserByEmail(\"'\"+this.email+\"'\").subscribe(\n      (user)=>{\n        this.user=user;\n        this.getCartItems();\n      }\n    )\n  }\n  getCartItems(): void {\n    this.service.getCartItems(this.user.userId).subscribe(cartItems => {\n      this.cartItems = cartItems;\n      this.amount = this.cartItemsTotalCost();\n    });\n  }\n\n  cartItemsTotalCost(): number {\n    return this.cartItems.reduce((total, cartItem) => total + cartItem.totalFoodItemCost, 0);\n  }\n\n  makePayment() {\n\n\n    const userId = this.user.userId;\n    const paymentType = 'online';\n    const createdAt = new Date();\n    if (this.regForm.invalid) {\n      console.log('Form is invalid. Cannot make payment.');\n      this.message = 'Form is invalid. Cannot make payment.'\n      return;\n    }\n    const options: any = {\n      key: 'rzp_test_t51Ev8vhVfMTFO',\n      amount: this.amount * 100, // Amount in paisa\n      name: 'FoodBox',\n\n      description: 'Payment for your order',\n\n\n      handler: (response: any) => {\n        console.log(response);\n        const formValues = this.regForm.value;\n        const createdAt = new Date();\n        const orderDetails = {\n          userId: userId,\n          name: formValues.name,\n          email: formValues.email,\n          contact: formValues.contact,\n          amount: this.amount,\n          address: formValues.address,\n          city: formValues.city,\n          state: formValues.state,\n          zip: formValues.zip,\n          paymentMethod: paymentType,\n          paymentid: response.razorpay_payment_id,\n          orderDate: createdAt\n\n        };\n\n        this.service.createOrder(orderDetails).subscribe(\n          (data: any) => {\n            console.log('Order created:', data);\n            this.service.deleteCart(this.user.userId);\n          },\n          (error: any) => {\n            console.error('Error creating order:', error);\n          }\n        );\n\n        this.service.getOrderDetailsByUserId(this.user.userId).subscribe(\n          orderDetails=>this.orderDetails=orderDetails\n        )\n\n        this.router.navigate(['/order-summary', this.orderDetails.orderId]);\n      },\n      prefill: {\n        email: this.email,\n        contact: this.contact,\n        name: this.name\n      },\n      notes: {\n        address: 'Your Address'\n      },\n      theme: {\n        color: '#6466e3'\n      },\n      modal: {\n        ondismiss: () => {\n          console.log('dismissed');\n        }\n      }\n    };\n\n    const rzp = new Razorpay(options);\n    rzp.on('payment.failed', (response: any) => {\n      console.log('Payment failed:', response.error.code, response.error.description);\n    });\n    rzp.open();\n\n    // Reset the amount after payment is made\n    rzp.on('payment.success', (response: any) => {\n      this.amount = 0; // Reset the amount to null\n    });\n  }\n\n  payWithCash() {\n    // Handle cash payment logic here\n    this.isLoading = true; // Show the spinner\n    if (this.regForm.invalid) {\n      console.log('Form is invalid. Cannot make payment.');\n      this.message = 'Form is invalid. Cannot make payment.'\n      return;\n    }\n    setTimeout(() => {\n      const userId = this.user.userId;\n      const formValues = this.regForm.value;\n      const createdAt = new Date();\n      const paymentType = 'cash';\n      const userDetails = { /* user data */ };\n      const orderDetails = {\n        userId: userId,\n        name: formValues.name,\n        email: formValues.email,\n        contact: formValues.contact,\n        amount: this.amount,\n        address: formValues.address,\n        city: formValues.city,\n        state: formValues.state,\n        zip: formValues.zip,\n        paymentMethod: paymentType,\n        orderDate: createdAt\n      };\n\n      this.service.createOrder(orderDetails).subscribe(\n        (data: any) => {\n          console.log('Order created:', data);\n          this.service.deleteCart(this.user.userId);\n        },\n        (error: any) => {\n          console.error('Error creating order:', error);\n        }\n      );\n\n      this.service.getOrderDetailsByUserId(this.user.userId).subscribe(\n        orderDetails=>this.orderDetails=orderDetails\n      )\n\n      this.router.navigate(['/order-summary', this.orderDetails.orderId]);\n\n\n\n    }, 100); // Wait for 0.1 seconds\n  }\n\n\n}","\n<div class=\"container-fluid text-dark\" style=\"background-image: url('https://images.pexels.com/photos/1037992/pexels-photo-1037992.jpeg?auto=compress&cs=tinysrgb&w=400'); background-repeat: no-repeat; background-attachment: fixed; background-size: cover; width:100%;\">\n  \n<div class=\"container-xxl py-5\">\n  <div class=\"container\">\n      <div class=\"row g-5 align-items-center\">\n          <div class=\"col-lg-6\">\n              <div class=\"row g-6\">\n  \n  <form [formGroup]=\"regForm\" (ngSubmit)=\"makePayment()\" class=\"  mb-5\">\n    <h2 class=\"text-center\">Payment Form</h2>\n    <label for=\"amount\" class=\"form-label\">Amount:</label>\n    <div class=\" input-group mb-3\">\n      \n      <span class=\"input-group-text\">₹ </span>\n      <input type=\"number\" id=\"amount\" class=\"form-control\"  name=\"amount\"  [value]=\"regForm.controls['email']\" required disabled><!-- [(ngModel)]=\"amount\"-->\n      \n    </div>\n    <div class=\"mb-3 form-floating\">\n   \n      <input type=\"email\" id=\"email\" class=\"form-control\" formControlName=\"email\" name=\"email\" required>\n      <label for=\"email\" class=\"form-label\">Email:</label>\n      <div class=\"alert alert-danger\" *ngIf=\"regForm.controls['email'].touched && regForm.controls['email'].invalid\">Email should not be blank or invalid</div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"contact\" class=\"form-label\">Contact:</label>\n       <input type=\"text\" id=\"contact\" class=\"form-control\" formControlName=\"contact\" name=\"contact\" required>  <!-- [(ngModel)]=\"contact\" -->\n      <div class=\"alert alert-danger\" *ngIf=\"regForm.controls['contact'].touched && regForm.controls['contact'].invalid\">Contact should not be blank or invalid</div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"name\" class=\"form-label\">Name:</label>\n      <input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"name\"  name=\"name\" required><!-- [(ngModel)]=\"name\" -->\n      <div class=\"alert alert-danger\" *ngIf=\"regForm.controls['name'].touched && regForm.controls['name'].invalid\">Name should not be blank or invalid</div>\n    </div>\n    <!-- Additional address details form -->\n    <div class=\"mb-3\">\n      <label for=\"address\" class=\"form-label is-invalid\">Address:</label>\n      <textarea id=\"address\" class=\"form-control\"  formControlName=\"address\"  name=\"address\" rows=\"3\" required></textarea><!-- [(ngModel)]=\"address\" -->\n      <div class=\"alert alert-danger\" *ngIf=\"regForm.controls['address'].touched && regForm.controls['address'].invalid\">Address should not be blank or invalid </div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"city\" class=\"form-label\" >City:</label>\n      <input type=\"text\" id=\"city\" formControlName=\"city\" class=\"form-control\" name=\"city\" required><!--  [(ngModel)]=\"city\" -->\n      <div class=\"alert alert-danger\" *ngIf=\"regForm.controls['city'].touched && regForm.controls['city'].invalid\">City should not be blank or invalid</div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"state\" class=\"form-label\" >State:</label>\n      <input type=\"text\" id=\"state\" formControlName=\"state\" class=\"form-control\" name=\"state\" required><!-- [(ngModel)]=\"state\"   -->\n      <div class=\"alert alert-danger\" *ngIf=\"regForm.controls['state'].touched && regForm.controls['state'].invalid\">State should not be blank or invalid</div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"zip\" class=\"form-label\" >ZIP Code:</label>\n      <input type=\"text\" id=\"zip\"  formControlName=\"zip\" class=\"form-control\"  name=\"zip\" required><!-- [(ngModel)]=\"zip\" -->\n      <div class=\"alert alert-danger\" *ngIf=\"regForm.controls['zip'].touched && regForm.controls['zip'].invalid\">Zip should not be blank or invalid</div>\n    </div>\n    \n    \n    <button type=\"submit\" class=\"btn btn-primary py-2 ml-2 px-4 mb-5\" style=\"margin-left: 10px;\">Pay</button>\n    <button type=\"button\" class=\"btn btn-secondary py-2 px-4 mb-5\" style=\"margin-right: 10px;\"(click)=\"payWithCash()\">Pay with Cash</button>\n    <div class=\"alert alert-danger\">{{message}}</div>\n\n  </form>\n  </div>\n  </div>\n  <div class=\"col-lg-6 mt-5\">\n  <form class=\"\">\n    <div *ngIf=\"cartItems.length > 0\">\n      <h3 class=\"section-title ff-secondary text-start text-primary fw-normal\">Cart Items:</h3>\n      <ul class=\"list-group\">\n        <li *ngFor=\"let cartItem of cartItems\" class=\"list-group-item\">\n          <div class=\"row\">\n            <div class=\"col-md-8\">\n              <strong>{{ cartItem.foodItem.name }}</strong> - {{ cartItem.quantity }} pcs\n            </div>\n            <div class=\"col-md-4 text-right\">\n              {{ cartItem.totalFoodItemCost | currency : \"INR\" }}\n            </div>\n          </div>\n          \n        </li>\n      </ul>\n      <div class=\"mb-3 mt-3\">\n        <h2 class=\"text-center mb-3\"><i>Total Amount</i></h2>\n     <input type=\"number\" id=\"amount\" class=\" text-center form-control\" [(ngModel)]=\"amount\" name=\"amount\"  [value]=\"cartItemsTotalCost()\" required disabled>\n      </div>\n    </div>\n\n  </form>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}