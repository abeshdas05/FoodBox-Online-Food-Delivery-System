{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ContactComponent = class ContactComponent {\n  constructor(service) {\n    this.service = service;\n    this.formData = {\n      name: '',\n      email: '',\n      subject: '',\n      message: ''\n    };\n  }\n  ngOnInit() {}\n  submitForm() {\n    if (this.validateForm()) {\n      // Call your service method to send the form data to the backend\n      this.service.sendContactForm(this.formData).subscribe(response => {\n        console.log('Form submission successful:', response);\n        // Clear form data after successful submission\n        this.clearForm();\n      }, error => {\n        console.error('Form submission error:', error);\n      });\n    }\n  }\n  validateForm() {\n    // Implement your validation logic here\n    // For example, check if all required fields are filled\n    // You can also show validation messages to the user\n    return true; // Return true if form is valid, false otherwise\n  }\n\n  clearForm() {\n    // Clear form data after successful submission\n    this.formData = {\n      name: '',\n      email: '',\n      subject: '',\n      message: ''\n    };\n  }\n};\nContactComponent = __decorate([Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})], ContactComponent);","map":{"version":3,"names":["Component","ContactComponent","constructor","service","formData","name","email","subject","message","ngOnInit","submitForm","validateForm","sendContactForm","subscribe","response","console","log","clearForm","error","__decorate","selector","templateUrl","styleUrls"],"sources":["F:\\PP\\RLL\\FoodBox\\src\\app\\contactus\\contactus.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FoodBoxService } from '../food-box.service';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n  formData = {\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  };\n\n  constructor(private service: FoodBoxService) {}\n\n  ngOnInit(): void {}\n\n  submitForm(): void {\n    if (this.validateForm()) {\n      // Call your service method to send the form data to the backend\n      this.service.sendContactForm(this.formData).subscribe(\n        response => {\n          console.log('Form submission successful:', response);\n          // Clear form data after successful submission\n          this.clearForm();\n        },\n        error => {\n          console.error('Form submission error:', error);\n        }\n      );\n    }\n  }\n\n  validateForm(): boolean {\n    // Implement your validation logic here\n    // For example, check if all required fields are filled\n    // You can also show validation messages to the user\n    return true; // Return true if form is valid, false otherwise\n  }\n\n  clearForm(): void {\n    // Clear form data after successful submission\n    this.formData = {\n      name: '',\n      email: '',\n      subject: '',\n      message: ''\n    };\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAQ3BC,YAAoBC,OAAuB;IAAvB,KAAAA,OAAO,GAAPA,OAAO;IAP3B,KAAAC,QAAQ,GAAG;MACTC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;KACV;EAE6C;EAE9CC,QAAQA,CAAA,GAAU;EAElBC,UAAUA,CAAA;IACR,IAAI,IAAI,CAACC,YAAY,EAAE,EAAE;MACvB;MACA,IAAI,CAACR,OAAO,CAACS,eAAe,CAAC,IAAI,CAACR,QAAQ,CAAC,CAACS,SAAS,CACnDC,QAAQ,IAAG;QACTC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,QAAQ,CAAC;QACpD;QACA,IAAI,CAACG,SAAS,EAAE;MAClB,CAAC,EACDC,KAAK,IAAG;QACNH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CACF;;EAEL;EAEAP,YAAYA,CAAA;IACV;IACA;IACA;IACA,OAAO,IAAI,CAAC,CAAC;EACf;;EAEAM,SAASA,CAAA;IACP;IACA,IAAI,CAACb,QAAQ,GAAG;MACdC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;KACV;EACH;CACD;AA5CYP,gBAAgB,GAAAkB,UAAA,EAL5BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWrB,gBAAgB,CA4C5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}