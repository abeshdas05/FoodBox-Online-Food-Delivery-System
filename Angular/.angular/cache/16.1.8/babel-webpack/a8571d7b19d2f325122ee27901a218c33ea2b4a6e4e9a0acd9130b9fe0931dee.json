{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../cart.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction FoodListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\nfunction FoodListComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4);\n    i0.ɵɵelement(2, \"img\", 5);\n    i0.ɵɵelementStart(3, \"div\", 6)(4, \"h5\", 7);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"h5\", 7);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 8);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 8);\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\", 8);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 9)(16, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function FoodListComponent_div_2_Template_input_ngModelChange_16_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.quantities[i_r3] = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 11)(18, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function FoodListComponent_div_2_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const foodItem_r2 = restoredCtx.$implicit;\n      const i_r3 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.addToCart(foodItem_r2, ctx_r6.quantities[i_r3]));\n    });\n    i0.ɵɵtext(19, \"Add to Cart\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const foodItem_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", foodItem_r2.imagePath, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(foodItem_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(foodItem_r2.category.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(foodItem_r2.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Price: \", i0.ɵɵpipeBind2(12, 8, foodItem_r2.price, \"INR\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Available Quantity: \", foodItem_r2.availableQuantity, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.quantities[i_r3])(\"min\", 1);\n  }\n}\nexport class FoodListComponent {\n  constructor(service) {\n    this.service = service;\n    this.foodItems = [];\n    this.quantities = [];\n    this.message = '';\n  }\n  ngOnInit() {\n    this.getFoodItems();\n  }\n  getFoodItems() {\n    this.service.getFoodItems().subscribe(foodItems => {\n      this.foodItems = foodItems;\n      this.initializeQuantities();\n    });\n  }\n  initializeQuantities() {\n    this.quantities = new Array(this.foodItems.length).fill(1);\n  }\n  addToCart(foodItem, quantity) {\n    if (quantity <= 0) {\n      alert('Please select a valid quantity');\n    } else if (quantity <= foodItem.availableQuantity) {\n      this.service.addToCart(foodItem.foodItemId, quantity).subscribe(response => this.message = response);\n      console.log(this.message);\n    } else {\n      alert('Quantity exceeds available quantity');\n    }\n  }\n  // food-list.component.ts\n  increaseQuantity(i) {\n    this.quantities[i]++;\n  }\n  decreaseQuantity(i) {\n    this.quantities[i]--;\n  }\n}\n_class = FoodListComponent;\n_class.ɵfac = function FoodListComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CartService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-food-list\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [1, \"row\"], [\"class\", \"col-md-4 mb-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\", \"mb-4\"], [1, \"card\"], [\"alt\", \"Food Image\", 1, \"card-img-top\", \"card-img\", 3, \"src\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [1, \"input-group\", \"mb-3\"], [\"type\", \"number\", 1, \"form-control\", 3, \"ngModel\", \"min\", \"ngModelChange\"], [1, \"input-group-append\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function FoodListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FoodListComponent_div_0_Template, 2, 1, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵtemplate(2, FoodListComponent_div_2_Template, 20, 11, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.message != \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.foodItems);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.MinValidator, i3.NgModel, i2.CurrencyPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","message","ɵɵelement","ɵɵlistener","FoodListComponent_div_2_Template_input_ngModelChange_16_listener","$event","restoredCtx","ɵɵrestoreView","_r5","i_r3","index","ctx_r4","ɵɵnextContext","ɵɵresetView","quantities","FoodListComponent_div_2_Template_button_click_18_listener","foodItem_r2","$implicit","ctx_r6","addToCart","ɵɵpropertyInterpolate","imagePath","ɵɵsanitizeUrl","name","category","description","ɵɵtextInterpolate1","ɵɵpipeBind2","price","availableQuantity","ɵɵproperty","ctx_r1","FoodListComponent","constructor","service","foodItems","ngOnInit","getFoodItems","subscribe","initializeQuantities","Array","length","fill","foodItem","quantity","alert","foodItemId","response","console","log","increaseQuantity","i","decreaseQuantity","ɵɵdirectiveInject","i1","CartService","selectors","decls","vars","consts","template","FoodListComponent_Template","rf","ctx","ɵɵtemplate","FoodListComponent_div_0_Template","FoodListComponent_div_2_Template"],"sources":["F:\\PP\\RLL\\FoodBox\\src\\app\\food-list\\food-list.component.ts","F:\\PP\\RLL\\FoodBox\\src\\app\\food-list\\food-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../cart.service';\nimport { FoodItem } from '../food-item.model';\n\n@Component({\n  selector: 'app-food-list',\n  templateUrl: './food-list.component.html',\n  styleUrls: ['./food-list.component.css']\n})\nexport class FoodListComponent implements OnInit {\n  constructor(private service: CartService) { }\n  foodItems: FoodItem[] = [];\n  quantities: number[] = [];\n  message='';\n  ngOnInit(): void {\n    this.getFoodItems();\n  }\n\n  getFoodItems(): void {\n    this.service.getFoodItems().subscribe(foodItems => {\n      this.foodItems = foodItems;\n      this.initializeQuantities();\n    });\n  }\n  initializeQuantities(): void {\n    this.quantities = new Array(this.foodItems.length).fill(1);\n  }\n  addToCart(foodItem: FoodItem, quantity: number): void {\n    if (quantity <= 0) {\n      alert('Please select a valid quantity');\n    }\n    else if (quantity <= foodItem.availableQuantity) {\n      this.service.addToCart(foodItem.foodItemId, quantity).subscribe(\n        response=>this.message=response\n      );\n        console.log(this.message);\n        \n    } else {\n      alert('Quantity exceeds available quantity');\n    }\n  }\n\n  // food-list.component.ts\nincreaseQuantity(i:number): void {\n  this.quantities[i]++;\n}\n\ndecreaseQuantity(i:number): void {\n  this.quantities[i]--;\n}\n\n}\n","<div *ngIf=\"message!=''\">{{message}}</div>\n<!-- food-list.component.html -->\n<div class=\"row\">\n  <div class=\"col-md-4 mb-4\" *ngFor=\"let foodItem of foodItems; let i = index\">\n    <div class=\"card\">\n      <img src=\"{{foodItem.imagePath}}\" class=\"card-img-top card-img\" alt=\"Food Image\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">{{ foodItem.name }}</h5>\n        <h5 class=\"card-title\">{{ foodItem.category.name }}</h5>\n        <p class=\"card-text\">{{ foodItem.description }}</p>\n        <p class=\"card-text\">Price: {{ foodItem.price | currency : \"INR\" }}</p>\n        <p class=\"card-text\">Available Quantity: {{ foodItem.availableQuantity }}</p>\n        <div class=\"input-group mb-3\">\n          <input type=\"number\" class=\"form-control\" [(ngModel)]=\"quantities[i]\" [min]=\"1\"/>\n          <div class=\"input-group-append\">\n            <button class=\"btn btn-primary\" (click)=\"addToCart(foodItem, quantities[i])\">Add to Cart</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- <table class=\"table table-striped\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Description</th>\n      <th>Price</th>\n      <th>Category</th>\n      <th>Quantity</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let foodItem of foodItems; let i = index\">\n      <td>{{ foodItem.name }}</td>\n      <td>{{ foodItem.description }}</td>\n      <td>{{ foodItem.price | currency : \"INR\" }}</td>\n      <td>{{ foodItem.category.name }}</td>\n      <td>\n        <input type=\"number\"class=\"form-control\" [(ngModel)]=\"quantities[i]\" [min]=\"1\" />\n        <button class=\"btn btn-primary\"(click)=\"addToCart(foodItem, quantities[i])\">\n          Add to Cart\n        </button>\n      </td>\n    </tr>\n  </tbody>\n</table> -->\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}