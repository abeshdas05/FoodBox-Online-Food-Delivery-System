{"ast":null,"code":"var _class;\nimport { Admin } from '../model-classes/admin.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../food-box.service\";\nexport class AdminDashboardComponent {\n  ngOnInit() {\n    this.getAdmin();\n  }\n  getAdmin() {\n    console.log(this.adminEmployeeId);\n    this.service.getAdminByEmployeeId(this.adminEmployeeId).subscribe(admin => {\n      this.admin = admin;\n      console.log(this.admin);\n    });\n  }\n  constructor(service) {\n    this.service = service;\n    this.oldPassword = '';\n    this.newPassword = '';\n    this.confirmNewPassword = '';\n    this.admin = new Admin();\n    this.message = '';\n    this.adminEmployeeId = sessionStorage.getItem(\"adminSession\");\n  }\n  changePassword() {\n    console.log(this.newPassword, this.confirmNewPassword);\n    if (this.newPassword !== this.confirmNewPassword) {\n      alert('New passwords do not match.');\n      return;\n    }\n    this.admin.password = this.newPassword;\n    this.service.updateAdmin(this.admin).subscribe(response => {\n      if (response == '0') alert('Oops, something went wrong!');else {\n        this.message = \"Password Updated Successfully!\";\n        this.getAdmin();\n      }\n    });\n  }\n}\n_class = AdminDashboardComponent;\n_class.ɵfac = function AdminDashboardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FoodBoxService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-admin-dashboard\"]],\n  decls: 0,\n  vars: 0,\n  template: function AdminDashboardComponent_Template(rf, ctx) {},\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Admin","AdminDashboardComponent","ngOnInit","getAdmin","console","log","adminEmployeeId","service","getAdminByEmployeeId","subscribe","admin","constructor","oldPassword","newPassword","confirmNewPassword","message","sessionStorage","getItem","changePassword","alert","password","updateAdmin","response","i0","ɵɵdirectiveInject","i1","FoodBoxService","selectors","decls","vars","template","AdminDashboardComponent_Template","rf","ctx","styles"],"sources":["F:\\PP\\RLL\\FoodBox\\src\\app\\admin-dashboard\\admin-dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FoodBoxService } from '../food-box.service';\nimport { Admin } from '../model-classes/admin.model';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n  oldPassword: string = '';\n  newPassword: string = '';\n  confirmNewPassword: string = '';\n  admin: Admin = new Admin();\n  message='';\n  adminEmployeeId = sessionStorage.getItem(\"adminSession\");\n  ngOnInit(): void {\n    this.getAdmin();\n  }\n\n  getAdmin(): void {\n    console.log(this.adminEmployeeId);\n      \n    this.service.getAdminByEmployeeId(this.adminEmployeeId).subscribe(\n     \n      admin => \n      {this.admin = admin;\n      console.log(this.admin);\n      }\n    )\n  }\n\n  constructor(private service: FoodBoxService) { }\n\n  changePassword() {\n    console.log(this.newPassword, this.confirmNewPassword);\n    \n    if (this.newPassword !== this.confirmNewPassword) {\n      alert('New passwords do not match.');\n      return;\n    }\n    this.admin.password = this.newPassword\n    this.service.updateAdmin(this.admin).subscribe(\n      (response)=>{\n        if(response=='0')\n        alert('Oops, something went wrong!')\n        else{\n            this.message=\"Password Updated Successfully!\";\n            this.getAdmin();\n        }\n      }\n    )\n  }\n}\n"],"mappings":";AAEA,SAASA,KAAK,QAAQ,8BAA8B;;;AAOpD,OAAM,MAAOC,uBAAuB;EAOlCC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,eAAe,CAAC;IAEjC,IAAI,CAACC,OAAO,CAACC,oBAAoB,CAAC,IAAI,CAACF,eAAe,CAAC,CAACG,SAAS,CAE/DC,KAAK,IAAG;MACP,IAAI,CAACA,KAAK,GAAGA,KAAK;MACnBN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,KAAK,CAAC;IACvB,CAAC,CACF;EACH;EAEAC,YAAoBJ,OAAuB;IAAvB,KAAAA,OAAO,GAAPA,OAAO;IAtB3B,KAAAK,WAAW,GAAW,EAAE;IACxB,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,kBAAkB,GAAW,EAAE;IAC/B,KAAAJ,KAAK,GAAU,IAAIV,KAAK,EAAE;IAC1B,KAAAe,OAAO,GAAC,EAAE;IACV,KAAAT,eAAe,GAAGU,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC;EAiBT;EAE/CC,cAAcA,CAAA;IACZd,OAAO,CAACC,GAAG,CAAC,IAAI,CAACQ,WAAW,EAAE,IAAI,CAACC,kBAAkB,CAAC;IAEtD,IAAI,IAAI,CAACD,WAAW,KAAK,IAAI,CAACC,kBAAkB,EAAE;MAChDK,KAAK,CAAC,6BAA6B,CAAC;MACpC;;IAEF,IAAI,CAACT,KAAK,CAACU,QAAQ,GAAG,IAAI,CAACP,WAAW;IACtC,IAAI,CAACN,OAAO,CAACc,WAAW,CAAC,IAAI,CAACX,KAAK,CAAC,CAACD,SAAS,CAC3Ca,QAAQ,IAAG;MACV,IAAGA,QAAQ,IAAE,GAAG,EAChBH,KAAK,CAAC,6BAA6B,CAAC,MAChC;QACA,IAAI,CAACJ,OAAO,GAAC,gCAAgC;QAC7C,IAAI,CAACZ,QAAQ,EAAE;;IAErB,CAAC,CACF;EACH;;SA3CWF,uBAAuB;;mBAAvBA,MAAuB,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;;QAAvBzB,MAAuB;EAAA0B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;EAAAC,MAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}