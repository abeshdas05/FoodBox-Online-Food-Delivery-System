{"ast":null,"code":"var _class;\nimport { Admin } from '../model-classes/admin.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../food-box.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class AdminDashboardComponent {\n  ngOnInit() {\n    this.getAdmin();\n  }\n  getAdmin() {\n    this.service.getAdminByEmployeeId(this.adminEmployeeId).subscribe(admin => this.admin = admin);\n  }\n  constructor(service) {\n    this.service = service;\n    this.oldPassword = '';\n    this.newPassword = '';\n    this.confirmNewPassword = '';\n    this.admin = new Admin();\n    this.message = '';\n    this.adminEmployeeId = sessionStorage.getItem(\"adminSession\");\n  }\n  changePassword() {\n    if (this.newPassword !== this.confirmNewPassword) {\n      alert('New passwords do not match.');\n      return;\n    }\n    this.admin.password = this.newPassword;\n    this.service.updateAdmin(this.admin).subscribe(response => {\n      if (response == '0') alert('Oops, something went wrong!');else {\n        this.message = \"Password Updated Successfully!\";\n        this.getAdmin();\n      }\n    });\n  }\n}\n_class = AdminDashboardComponent;\n_class.ɵfac = function AdminDashboardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FoodBoxService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-admin-dashboard\"]],\n  decls: 43,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-3\"], [1, \"list-group\"], [1, \"list-group-item\"], [\"routerLink\", \"/admin-dashboard/user-list\"], [\"routerLink\", \"/admin-dashboard/orders\"], [\"routerLink\", \"/admin-dashboard/category-management\"], [1, \"col-md-9\"], [\"routerLink\", \"/admin-dashboard/change-password\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"oldPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"oldPassword\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"newPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"newPassword\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"confirmNewPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"confirmNewPassword\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function AdminDashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"ul\", 3)(6, \"li\", 4)(7, \"a\", 5);\n      i0.ɵɵtext(8, \"User List\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"li\", 4)(10, \"a\", 6);\n      i0.ɵɵtext(11, \"Orders\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"li\", 4)(13, \"a\", 7);\n      i0.ɵɵtext(14, \"Category Management\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(15, \"div\", 8);\n      i0.ɵɵelement(16, \"router-outlet\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"div\", 0)(18, \"div\", 1)(19, \"div\", 2)(20, \"li\", 4)(21, \"a\", 9);\n      i0.ɵɵtext(22, \"Change Password\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"div\", 8);\n      i0.ɵɵelement(24, \"router-outlet\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"div\")(26, \"h2\");\n      i0.ɵɵtext(27, \"Change Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"form\", 10);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminDashboardComponent_Template_form_ngSubmit_28_listener() {\n        return ctx.changePassword();\n      });\n      i0.ɵɵelementStart(29, \"div\", 11)(30, \"label\", 12);\n      i0.ɵɵtext(31, \"Old Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function AdminDashboardComponent_Template_input_ngModelChange_32_listener($event) {\n        return ctx.oldPassword = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\", 11)(34, \"label\", 14);\n      i0.ɵɵtext(35, \"New Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function AdminDashboardComponent_Template_input_ngModelChange_36_listener($event) {\n        return ctx.newPassword = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\", 11)(38, \"label\", 16);\n      i0.ɵɵtext(39, \"Confirm New Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"input\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function AdminDashboardComponent_Template_input_ngModelChange_40_listener($event) {\n        return ctx.confirmNewPassword = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(41, \"button\", 18);\n      i0.ɵɵtext(42, \"Change Password\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Welcome, \", ctx.admin.name, \"\");\n      i0.ɵɵadvance(30);\n      i0.ɵɵproperty(\"ngModel\", ctx.oldPassword);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newPassword);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.confirmNewPassword);\n    }\n  },\n  dependencies: [i2.RouterOutlet, i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Admin","AdminDashboardComponent","ngOnInit","getAdmin","service","getAdminByEmployeeId","adminEmployeeId","subscribe","admin","constructor","oldPassword","newPassword","confirmNewPassword","message","sessionStorage","getItem","changePassword","alert","password","updateAdmin","response","i0","ɵɵdirectiveInject","i1","FoodBoxService","selectors","decls","vars","consts","template","AdminDashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","AdminDashboardComponent_Template_form_ngSubmit_28_listener","AdminDashboardComponent_Template_input_ngModelChange_32_listener","$event","AdminDashboardComponent_Template_input_ngModelChange_36_listener","AdminDashboardComponent_Template_input_ngModelChange_40_listener","ɵɵadvance","ɵɵtextInterpolate1","name","ɵɵproperty"],"sources":["F:\\PP\\RLL\\FoodBox\\src\\app\\admin-dashboard\\admin-dashboard.component.ts","F:\\PP\\RLL\\FoodBox\\src\\app\\admin-dashboard\\admin-dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FoodBoxService } from '../food-box.service';\nimport { Admin } from '../model-classes/admin.model';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n  oldPassword: string = '';\n  newPassword: string = '';\n  confirmNewPassword: string = '';\n  admin: Admin = new Admin();\n  message='';\n  adminEmployeeId: string = sessionStorage.getItem(\"adminSession\");\n  ngOnInit(): void {\n    this.getAdmin();\n  }\n\n  getAdmin(): void {\n    this.service.getAdminByEmployeeId(this.adminEmployeeId).subscribe(\n      admin => this.admin = admin\n    )\n  }\n\n  constructor(private service: FoodBoxService) { }\n\n  changePassword() {\n    if (this.newPassword !== this.confirmNewPassword) {\n      alert('New passwords do not match.');\n      return;\n    }\n    this.admin.password = this.newPassword\n    this.service.updateAdmin(this.admin).subscribe(\n      (response)=>{\n        if(response=='0')\n        alert('Oops, something went wrong!')\n        else{\n            this.message=\"Password Updated Successfully!\";\n            this.getAdmin();\n        }\n      }\n    )\n  }\n}\n","<!-- admin-dashboard.component.html -->\n<div class=\"container\">\n    <h1>Welcome, {{admin.name}}</h1>\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n        <!-- Sidebar navigation links -->\n        <ul class=\"list-group\">\n          <li class=\"list-group-item\">\n            <a routerLink=\"/admin-dashboard/user-list\">User List</a>\n          </li>\n          <li class=\"list-group-item\">\n            <a routerLink=\"/admin-dashboard/orders\">Orders</a>\n          </li>\n          <li class=\"list-group-item\">\n            <a routerLink=\"/admin-dashboard/category-management\">Category Management</a>\n          </li>\n        </ul>\n      </div>\n      <div class=\"col-md-9\">\n        <!-- Content area -->\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n  \n<!-- admin-dashboard.component.html -->\n<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n        <!-- Sidebar navigation links -->\n        <!-- ... (other links) ... -->\n        <li class=\"list-group-item\">\n          <a routerLink=\"/admin-dashboard/change-password\">Change Password</a>\n        </li>\n      </div>\n      <div class=\"col-md-9\">\n        <!-- Content area -->\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n  \n<!-- change-password.component.html -->\n<div>\n    <h2>Change Password</h2>\n    <form (ngSubmit)=\"changePassword()\">\n      <div class=\"mb-3\">\n        <label for=\"oldPassword\" class=\"form-label\">Old Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"oldPassword\" [(ngModel)]=\"oldPassword\" required>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"newPassword\" class=\"form-label\">New Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"newPassword\" [(ngModel)]=\"newPassword\" required>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"confirmNewPassword\" class=\"form-label\">Confirm New Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"confirmNewPassword\" [(ngModel)]=\"confirmNewPassword\" required>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Change Password</button>\n    </form>\n  </div>\n  \n\n<!-- <div class=\"container\">\n    <h2>Cuisine Management</h2>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <h4>Add New Cuisine</h4>\n        <div class=\"input-group mb-3\">\n          <input type=\"text\" class=\"form-control\" [(ngModel)]=\"newCategoryName\" placeholder=\"Enter cuisine name\">\n          <button class=\"btn btn-primary\" type=\"button\" (click)=\"addCategory(newCategoryName)\">Add</button>\n        </div>\n      </div>\n    </div>\n    <hr>\n    <h4>Cuisine List</h4>\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\" *ngFor=\"let category of categories\">\n        {{ category.name }}\n        <button class=\"btn btn-danger btn-sm float-end\" (click)=\"deleteCategory(category.categoryId)\">Delete</button>\n        <button class=\"btn btn-primary btn-sm float-end\" (click)=\"manageFoodItems(category.categoryId)\">Manage Food Items</button>\n       \n      </li>\n    </ul>\n  </div>\n   -->"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}