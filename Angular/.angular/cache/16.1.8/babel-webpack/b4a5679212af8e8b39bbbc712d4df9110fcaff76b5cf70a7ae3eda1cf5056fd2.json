{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../razorpay.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../food-box.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nfunction PaymentComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtext(1, \" Address should not be blank or invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtext(1, \" City should not be blank or invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtext(1, \" State should not be blank or invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtext(1, \" Zip should not be blank or invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PaymentComponent_div_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.message);\n  }\n}\nfunction PaymentComponent_div_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nfunction PaymentComponent_li_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const cartItem_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", cartItem_r7.foodItem.name, \"- \", cartItem_r7.quantity, \" pcs \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(4, 3, cartItem_r7.totalFoodItemCost, \"INR\"));\n  }\n}\nexport class PaymentComponent {\n  constructor(razorpayService, http, service, router, route, builder) {\n    this.razorpayService = razorpayService;\n    this.http = http;\n    this.service = service;\n    this.router = router;\n    this.route = route;\n    this.builder = builder;\n    this.isLoading = false;\n    this.cartItems = [];\n    this.emailInvalid = false;\n    this.contactInvalid = false;\n    this.totalCartCost = 0;\n    this.alertMessage = '';\n    this.message = '';\n    this.alertmsg = false;\n    this.regForm = this.builder.group({\n      amount: this.builder.control({\n        value: this.amount,\n        disabled: true\n      }, Validators.required),\n      email: this.builder.control({\n        value: this.email,\n        disabled: true\n      }, [Validators.required, Validators.email]),\n      contact: this.builder.control({\n        value: this.contact,\n        disabled: true\n      }, Validators.required),\n      name: this.builder.control({\n        value: this.name,\n        disabled: true\n      }, Validators.required),\n      address: this.builder.control('', Validators.required),\n      city: this.builder.control('', Validators.required),\n      state: this.builder.control('', Validators.required),\n      zip: this.builder.control('', Validators.required)\n    });\n    this.paymentForm = this.builder.group({\n      amount: [{\n        value: '',\n        disabled: true\n      }, Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      contact: ['', [Validators.required, Validators.pattern(/^\\d{10}$/)]],\n      name: ['', Validators.required],\n      address: ['', Validators.required],\n      city: ['', Validators.required],\n      state: ['', Validators.required],\n      zip: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.razorpayService.loadScript().subscribe(() => {\n      // Razorpay SDK loaded\n    });\n    this.email = this.route.snapshot.params[`email`];\n    this.getUser();\n    this.getCartItems();\n    this.amount = this.cartItemsTotalCost();\n  }\n  getUser() {\n    this.service.getUserByEmail(\"'\" + this.email + \"'\").subscribe(user => {\n      this.user = user;\n      this.email = user.email;\n      this.userId = user.userId;\n      this.contact = user.mobileNumber;\n      this.name = user.name;\n      this.getCartItems();\n    });\n  }\n  getCartItems() {\n    this.service.getCartItems(this.userId).subscribe(cartItems => {\n      this.cartItems = cartItems;\n      this.amount = this.cartItemsTotalCost();\n    });\n  }\n  cartItemsTotalCost() {\n    return this.cartItems.reduce((total, cartItem) => total + cartItem.totalFoodItemCost, 0);\n  }\n  makePayment() {\n    this.alertmsg = true;\n    const userId = this.userId;\n    let paymentId = '';\n    const paymentType = 'online';\n    if (this.regForm.invalid) {\n      console.log('Form is invalid. Cannot make payment.');\n      this.message = 'Form is invalid. Cannot make payment.';\n      return;\n    }\n    const options = {\n      key: 'rzp_test_t51Ev8vhVfMTFO',\n      amount: this.amount * 100,\n      name: 'FoodBox',\n      description: 'Payment for your order',\n      handler: response => {\n        console.log(response);\n        paymentId = response.razorpay_payment_id;\n        const orderDetails = {\n          userId: userId,\n          name: this.name,\n          email: this.email,\n          contact: this.contact,\n          amount: this.amount,\n          address: this.address,\n          city: this.city,\n          state: this.state,\n          zip: this.zip,\n          paymentMethod: paymentType,\n          paymentId: response.razorpay_payment_id,\n          orderDate: new Date()\n        };\n        this.service.createOrder(orderDetails).subscribe(data => {\n          console.log('Order created:', data);\n          this.service.deleteCart(userId).subscribe();\n          this.router.navigate(['/order-summary', data.orderId]);\n        }, error => {\n          console.error('Error creating order:', error);\n        });\n        this.service.getOrderDetailsByPaymentId(paymentId).subscribe(orderDetails => this.order = orderDetails);\n      },\n      prefill: {\n        email: this.email,\n        contact: this.contact,\n        name: this.name\n      },\n      notes: {\n        address: 'Your Address'\n      },\n      theme: {\n        color: '#6466e3'\n      },\n      modal: {\n        ondismiss: () => {\n          console.log('dismissed');\n        }\n      }\n    };\n    const rzp = new Razorpay(options);\n    rzp.on('payment.failed', response => {\n      console.log('Payment failed:', response.error.code, response.error.description);\n    });\n    rzp.open();\n    // Reset the amount after payment is made\n    rzp.on('payment.success', response => {\n      this.amount = 0; // Reset the amount to null\n    });\n  }\n\n  payWithCash() {\n    // Handle cash payment logic here\n    this.alertmsg = true;\n    this.isLoading = true; // Show the spinner\n    this.service.getPaymentIdForCod().subscribe(id => {\n      this.paymentIdForCod = id;\n      console.log(id);\n    });\n    if (this.regForm.invalid) {\n      console.log('Form is invalid. Cannot make payment.');\n      this.message = 'Form is invalid. Cannot make payment.';\n      return;\n    }\n    setTimeout(() => {\n      const userId = this.userId;\n      const paymentType = 'cash';\n      const orderDetails = {\n        userId: userId,\n        name: this.name,\n        email: this.email,\n        contact: this.contact,\n        amount: this.amount,\n        address: this.address,\n        city: this.city,\n        state: this.state,\n        zip: this.zip,\n        paymentId: this.paymentIdForCod,\n        paymentMethod: paymentType,\n        orderDate: new Date()\n      };\n      this.service.createOrder(orderDetails).subscribe(data => {\n        console.log('Order created:', data);\n        this.service.deleteCart(userId).subscribe();\n        this.router.navigate(['/order-summary', data.orderId]);\n      }, error => {\n        console.error('Error creating order:', error);\n      });\n      // Reset isLoading state after navigation\n      setTimeout(() => {\n        this.isLoading = false;\n      }, 100); // A small delay to ensure smooth transition\n    }, 100); // Wait for 0.1 seconds\n  }\n\n  validateEmail(email) {\n    this.emailInvalid = !/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/.test(email);\n  }\n  validateContact(contact) {\n    this.contactInvalid = !/^\\d{10}$/.test(contact);\n  }\n  get emailField() {\n    return this.regForm.get('email');\n  }\n  get contactField() {\n    return this.regForm.get('contact');\n  }\n  get nameField() {\n    return this.regForm.get('name');\n  }\n  get addressField() {\n    return this.regForm.get('address');\n  }\n  get cityField() {\n    return this.regForm.get('city');\n  }\n  get stateField() {\n    return this.regForm.get('state');\n  }\n  get zipField() {\n    return this.regForm.get('zip');\n  }\n}\n_class = PaymentComponent;\n_class.ɵfac = function PaymentComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.RazorpayService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.FoodBoxService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i5.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-payment\"]],\n  decls: 78,\n  vars: 19,\n  consts: [[1, \"container-fluid\", \"text-dark\", 2, \"background-image\", \"url('assets/images/payment_page_bg.jpg')\", \"background-repeat\", \"no-repeat\", \"background-attachment\", \"fixed\", \"background-size\", \"cover\", \"width\", \"100%\", \"margin-top\", \"-15px\", \"margin-bottom\", \"-8rem\"], [1, \"row\", \"mt-3\", \"mx-3\", 2, \"margin-top\", \"25px\"], [1, \"col-md-9\", \"mt-5\", \"mb-5\", \"justify-content-center\", \"bg-warning\"], [1, \"card\", \"card-custom\", \"pb-4\", \"bg-dark\", \"text-light\"], [1, \"card-body\", \"mt-0\", \"mx-5\"], [1, \"text-center\", \"mb-3\", \"pb-2\", \"mt-3\"], [1, \"text-container\"], [1, \"mb-3\", \"pb-2\", \"mt-3\"], [1, \"text\", \"text-warning\"], [1, \"mb-5\", 3, \"formGroup\"], [1, \"row\", \"mb-4\"], [\"for\", \"email\", 1, \"form-label\"], [1, \"col\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"disabled\", \"\", \"required\", \"\", 1, \"form-control\", \"text-secondary\", \"alert\", 3, \"value\"], [\"for\", \"contact\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"contact\", \"name\", \"contact\", \"required\", \"\", \"disabled\", \"\", 1, \"form-control\", \"text-secondary\", \"alert\", 3, \"value\"], [1, \"form-outline\"], [\"for\", \"address\", 1, \"form-label\", \"is-invalid\"], [\"id\", \"address\", \"formControlName\", \"address\", \"name\", \"address\", \"rows\", \"3\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"city\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"city\", \"formControlName\", \"city\", \"name\", \"city\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"state\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"state\", \"formControlName\", \"state\", \"name\", \"state\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"zip\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"zip\", \"formControlName\", \"zip\", \"name\", \"zip\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"float-end\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-rounded\", \"py-2\", \"ml-2\", \"px-4\", \"mb-5\", 2, \"margin-left\", \"10px\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-rounded\", \"py-2\", \"px-4\", \"mb-5\", 2, \"margin-right\", \"10px\", 3, \"click\"], [1, \"col-md-3\", \"mt-5\", \"mb-5\"], [1, \"card\", \"mb-4\"], [1, \"card-header\", \"bg-dark\", \"text-light\", \"py-3\"], [1, \"mb-0\"], [4, \"ngIf\"], [1, \"card-body\"], [1, \"list-group\", \"list-group-flush\"], [\"class\", \"list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\", \"border-0\", \"px-0\", \"mb-3\"], [1, \"alert\", \"alert-danger\"], [1, \"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\", \"border-0\", \"px-0\", \"pb-0\"]],\n  template: function PaymentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"h1\");\n      i0.ɵɵtext(8, \"Delivery Details\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"h5\")(11, \"strong\");\n      i0.ɵɵtext(12, \"Customer Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"span\", 8);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"form\", 9)(16, \"div\", 10)(17, \"label\", 11);\n      i0.ɵɵtext(18, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 12);\n      i0.ɵɵelement(20, \"input\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 12)(22, \"label\", 14);\n      i0.ɵɵtext(23, \"Contact:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 10)(26, \"div\", 12)(27, \"div\", 16)(28, \"label\", 17);\n      i0.ɵɵtext(29, \"Address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"textarea\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_textarea_ngModelChange_30_listener($event) {\n        return ctx.address = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(31, PaymentComponent_div_31_Template, 2, 0, \"div\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 12)(33, \"div\", 16)(34, \"label\", 20);\n      i0.ɵɵtext(35, \"City:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"input\", 21);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_36_listener($event) {\n        return ctx.city = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(37, PaymentComponent_div_37_Template, 2, 0, \"div\", 19);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(38, \"div\", 10)(39, \"div\", 12)(40, \"div\", 16)(41, \"label\", 22);\n      i0.ɵɵtext(42, \"State:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"input\", 23);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_43_listener($event) {\n        return ctx.state = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(44, PaymentComponent_div_44_Template, 2, 0, \"div\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(45, \"div\", 12)(46, \"div\", 16)(47, \"label\", 24);\n      i0.ɵɵtext(48, \"ZIP Code:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"input\", 25);\n      i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_49_listener($event) {\n        return ctx.zip = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(50, PaymentComponent_div_50_Template, 2, 0, \"div\", 19);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(51, \"div\", 26)(52, \"button\", 27);\n      i0.ɵɵlistener(\"click\", function PaymentComponent_Template_button_click_52_listener() {\n        return ctx.makePayment();\n      });\n      i0.ɵɵtext(53, \" Pay \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"button\", 28);\n      i0.ɵɵlistener(\"click\", function PaymentComponent_Template_button_click_54_listener() {\n        return ctx.payWithCash();\n      });\n      i0.ɵɵtext(55, \" Pay with Cash \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(56, PaymentComponent_div_56_Template, 2, 1, \"div\", 19);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(57, \"div\", 29)(58, \"div\", 30)(59, \"div\", 31)(60, \"h5\", 32);\n      i0.ɵɵtext(61, \"Summary\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(62, PaymentComponent_div_62_Template, 1, 0, \"div\", 33);\n      i0.ɵɵelementStart(63, \"div\", 34)(64, \"ul\", 35);\n      i0.ɵɵtemplate(65, PaymentComponent_li_65_Template, 5, 6, \"li\", 36);\n      i0.ɵɵelement(66, \"hr\");\n      i0.ɵɵelementStart(67, \"li\", 37)(68, \"div\")(69, \"strong\");\n      i0.ɵɵtext(70, \"Total amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(71, \"strong\")(72, \"p\", 32);\n      i0.ɵɵtext(73, \"(including VAT)\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(74, \"span\")(75, \"strong\");\n      i0.ɵɵtext(76);\n      i0.ɵɵpipe(77, \"currency\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵtextInterpolate(ctx.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.regForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", ctx.contact);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.address);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.regForm.controls.address.touched && ctx.regForm.controls.address.invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.city);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.regForm.controls.city.touched && ctx.regForm.controls.city.invalid);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.state);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.regForm.controls.state.touched && ctx.regForm.controls.state.invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.zip);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.regForm.controls.zip.touched && ctx.regForm.controls.zip.invalid);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.alertmsg);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.cartItems.length > 0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cartItems);\n      i0.ɵɵadvance(11);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(77, 16, ctx.amount, \"INR\"));\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName, i6.CurrencyPipe],\n  styles: [\".payment-form[_ngcontent-%COMP%] {\\n    background-color: #f8f9fa;\\n    border-radius: 10px;\\n    padding: 20px;\\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\\n}\\n\\n.payment-form[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    color: #007bff;\\n}\\n\\n.payment-form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n    color: #212529;\\n}\\n\\n.payment-form[_ngcontent-%COMP%]   .btn-primary[_ngcontent-%COMP%] {\\n    background-color: #0d6efd;\\n    color: #fff;\\n}\\n\\n.payment-form[_ngcontent-%COMP%]   .btn-primary[_ngcontent-%COMP%]:hover {\\n    background-color: #0056b3;\\n}\\n\\n.payment-form[_ngcontent-%COMP%]   .btn-secondary[_ngcontent-%COMP%] {\\n    background-color: #6c757d;\\n    color: #fff;\\n}\\n\\n.payment-form[_ngcontent-%COMP%]   .btn-secondary[_ngcontent-%COMP%]:hover {\\n    background-color: #495057;\\n}\\n\\n.payment-form[_ngcontent-%COMP%]   .alert-danger[_ngcontent-%COMP%] {\\n    color: #dc3545;\\n}\\n\\n.payment-form[_ngcontent-%COMP%]   input.form-control[disabled][_ngcontent-%COMP%] {\\n    background-color: #f8f9fa;\\n    cursor: not-allowed;\\n}\\n.card-custom[_ngcontent-%COMP%] {\\n    border-bottom-left-radius: 40% 80%;\\n    border-top-left-radius: 40% 80%;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGF5bWVudC9wYXltZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYiwyQ0FBMkM7QUFDL0M7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsV0FBVztBQUNmOztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLGtDQUFrQztJQUNsQywrQkFBK0I7QUFDbkMiLCJzb3VyY2VzQ29udGVudCI6WyIucGF5bWVudC1mb3JtIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbn1cclxuXHJcbi5wYXltZW50LWZvcm0gaDIge1xyXG4gICAgY29sb3I6ICMwMDdiZmY7XHJcbn1cclxuXHJcbi5wYXltZW50LWZvcm0gbGFiZWwge1xyXG4gICAgY29sb3I6ICMyMTI1Mjk7XHJcbn1cclxuXHJcbi5wYXltZW50LWZvcm0gLmJ0bi1wcmltYXJ5IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwZDZlZmQ7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxufVxyXG5cclxuLnBheW1lbnQtZm9ybSAuYnRuLXByaW1hcnk6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcclxufVxyXG5cclxuLnBheW1lbnQtZm9ybSAuYnRuLXNlY29uZGFyeSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNmM3NTdkO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbi5wYXltZW50LWZvcm0gLmJ0bi1zZWNvbmRhcnk6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQ5NTA1NztcclxufVxyXG5cclxuLnBheW1lbnQtZm9ybSAuYWxlcnQtZGFuZ2VyIHtcclxuICAgIGNvbG9yOiAjZGMzNTQ1O1xyXG59XHJcblxyXG4ucGF5bWVudC1mb3JtIGlucHV0LmZvcm0tY29udHJvbFtkaXNhYmxlZF0ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTtcclxuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XHJcbn1cclxuLmNhcmQtY3VzdG9tIHtcclxuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDQwJSA4MCU7XHJcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0MCUgODAlO1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r4","message","ɵɵelement","ɵɵtextInterpolate2","cartItem_r7","foodItem","name","quantity","ɵɵpipeBind2","totalFoodItemCost","PaymentComponent","constructor","razorpayService","http","service","router","route","builder","isLoading","cartItems","emailInvalid","contactInvalid","totalCartCost","alertMessage","alertmsg","regForm","group","amount","control","value","disabled","required","email","contact","address","city","state","zip","paymentForm","pattern","ngOnInit","loadScript","subscribe","snapshot","params","getUser","getCartItems","cartItemsTotalCost","getUserByEmail","user","userId","mobileNumber","reduce","total","cartItem","makePayment","paymentId","paymentType","invalid","console","log","options","key","description","handler","response","razorpay_payment_id","orderDetails","paymentMethod","orderDate","Date","createOrder","data","deleteCart","navigate","orderId","error","getOrderDetailsByPaymentId","order","prefill","notes","theme","color","modal","ondismiss","rzp","Razorpay","on","code","open","payWithCash","getPaymentIdForCod","id","paymentIdForCod","setTimeout","validateEmail","test","validateContact","emailField","get","contactField","nameField","addressField","cityField","stateField","zipField","ɵɵdirectiveInject","i1","RazorpayService","i2","HttpClient","i3","FoodBoxService","i4","Router","ActivatedRoute","i5","FormBuilder","selectors","decls","vars","consts","template","PaymentComponent_Template","rf","ctx","ɵɵlistener","PaymentComponent_Template_textarea_ngModelChange_30_listener","$event","ɵɵtemplate","PaymentComponent_div_31_Template","PaymentComponent_Template_input_ngModelChange_36_listener","PaymentComponent_div_37_Template","PaymentComponent_Template_input_ngModelChange_43_listener","PaymentComponent_div_44_Template","PaymentComponent_Template_input_ngModelChange_49_listener","PaymentComponent_div_50_Template","PaymentComponent_Template_button_click_52_listener","PaymentComponent_Template_button_click_54_listener","PaymentComponent_div_56_Template","PaymentComponent_div_62_Template","PaymentComponent_li_65_Template","ɵɵproperty","controls","touched","length"],"sources":["F:\\PP\\RLL\\FoodBox\\src\\app\\payment\\payment.component.ts","F:\\PP\\RLL\\FoodBox\\src\\app\\payment\\payment.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RazorpayService } from '../razorpay.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FoodBoxService } from '../food-box.service';\nimport { CartItem } from '../model-classes/cart-item.model';\nimport { User } from '../model-classes/user.model';\nimport { OrderDetails } from '../model-classes/order-details.model';\n\ndeclare var Razorpay: any;\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n  isLoading: boolean = false;\n  userId!:number;\n  amount!: number;\n  email!: string;\n  contact!: string;\n  name!: string;\n  address!: string;\n  city!: string;\n  state!: string;\n  zip!: string;\n  cartItems: CartItem[] = [];\n  paymentForm: FormGroup;\n  emailInvalid: boolean = false;\n  contactInvalid: boolean = false;\n  totalCartCost: number = 0;\n  alertMessage='';\n  user:User;\n  order:OrderDetails;\n  paymentIdForCod:string;\n  message='';\n  alertmsg = false;\n  regForm = this.builder.group({\n    amount: this.builder.control({ value: this.amount, disabled: true }, Validators.required),\n    email: this.builder.control({ value: this.email, disabled: true }, [Validators.required, Validators.email]),\n    contact: this.builder.control({ value: this.contact, disabled: true }, Validators.required),\n    name: this.builder.control({ value: this.name, disabled: true }, Validators.required),\n    address: this.builder.control('', Validators.required),\n    city: this.builder.control('', Validators.required),\n    state: this.builder.control('', Validators.required),\n    zip: this.builder.control('', Validators.required)\n  });\n  constructor(\n    private razorpayService: RazorpayService,\n    private http: HttpClient,\n    private service: FoodBoxService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private builder: FormBuilder\n  ) {\n    this.paymentForm = this.builder.group({\n      amount: [{ value: '', disabled: true }, Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      contact: ['', [Validators.required, Validators.pattern(/^\\d{10}$/)]],\n      name: ['', Validators.required],\n      address: ['', Validators.required],\n      city: ['', Validators.required],\n      state: ['', Validators.required],\n      zip: ['', Validators.required]\n    });\n  }\n\n\n  ngOnInit(): void {\n    this.razorpayService.loadScript().subscribe(() => {\n      // Razorpay SDK loaded\n    });\n    this.email = this.route.snapshot.params[`email`];\n    this.getUser();\n    this.getCartItems();\n    this.amount = this.cartItemsTotalCost();\n  }\n  getUser():void{\n    this.service.getUserByEmail(\"'\"+this.email+\"'\").subscribe(\n      user=>{\n        this.user=user;\n        this.email=user.email;\n        this.userId=user.userId;\n        this.contact=user.mobileNumber;\n        this.name=user.name;\n        this.getCartItems();\n      }\n    )\n  }\n\n  getCartItems(): void {\n    this.service.getCartItems(this.userId).subscribe(cartItems => {\n      this.cartItems = cartItems;\n      this.amount = this.cartItemsTotalCost();\n    });\n  }\n\n  cartItemsTotalCost(): number {\n    return this.cartItems.reduce((total, cartItem) => total + cartItem.totalFoodItemCost, 0);\n  }\n\n  makePayment() {\n    this.alertmsg =true;\n    const userId = this.userId;\n    let paymentId='';\n    const paymentType = 'online';\n    if (this.regForm.invalid) {\n      console.log('Form is invalid. Cannot make payment.');\n      this.message='Form is invalid. Cannot make payment.'\n      return ;\n    }\n    const options: any = {\n      key: 'rzp_test_t51Ev8vhVfMTFO',\n      amount: this.amount * 100, // Amount in paisa\n      name: 'FoodBox',\n      description: 'Payment for your order',\n      handler: (response: any) => {\n        console.log(response);\n        paymentId=response.razorpay_payment_id;\n        const orderDetails = {\n          userId: userId,\n          name: this.name,\n          email: this.email,\n          contact: this.contact,\n          amount: this.amount,\n          address: this.address,\n          city: this.city,\n          state: this.state,\n          zip: this.zip,\n          paymentMethod: paymentType,\n          paymentId: response.razorpay_payment_id,\n          orderDate:new Date()\n        };\n\n        this.service.createOrder(orderDetails).subscribe(\n          (data: any) => {\n            console.log('Order created:', data);\n            this.service.deleteCart(userId).subscribe();\n            this.router.navigate(['/order-summary',data.orderId]);\n          },\n          (error: any) => {\n            console.error('Error creating order:', error);\n          }\n        );\n        this.service.getOrderDetailsByPaymentId(paymentId).subscribe(\n          (orderDetails)=>this.order=orderDetails\n        )\n        \n      },\n      prefill: {\n        email: this.email,\n        contact: this.contact,\n        name: this.name\n      },\n      notes: {\n        address: 'Your Address'\n      },\n      theme: {\n        color: '#6466e3'\n      },\n      modal: {\n        ondismiss: () => {\n          console.log('dismissed');\n        }\n      }\n    };\n\n    const rzp = new Razorpay(options);\n    rzp.on('payment.failed', (response: any) => {\n      console.log('Payment failed:', response.error.code, response.error.description);\n    });\n    rzp.open();\n  \n    // Reset the amount after payment is made\n    rzp.on('payment.success', (response: any) => {\n      this.amount = 0; // Reset the amount to null\n    });\n   \n  }\n\n  payWithCash() {\n    // Handle cash payment logic here\n      this.alertmsg =true;\n      this.isLoading = true; // Show the spinner\n      this.service.getPaymentIdForCod().subscribe(   (id)=>{\n        this.paymentIdForCod=id;\n        console.log(id);\n        \n      })\n      if (this.regForm.invalid) {\n        console.log('Form is invalid. Cannot make payment.');\n        this.message='Form is invalid. Cannot make payment.'\n        return ;\n      }\n    setTimeout(() => {\n    const userId = this.userId;\n    const paymentType = 'cash';\n    const orderDetails = {\n      userId: userId,\n      name: this.name,\n      email: this.email,\n      contact: this.contact,\n      amount: this.amount,\n      address: this.address,\n      city: this.city,\n      state: this.state,\n      zip: this.zip,\n      paymentId:this.paymentIdForCod,\n      paymentMethod: paymentType,\n      orderDate:new Date()\n    };\n\n    this.service.createOrder(orderDetails).subscribe(\n      (data: any) => {\n        console.log('Order created:', data);\n        this.service.deleteCart(userId).subscribe();\n    this.router.navigate(['/order-summary',data.orderId]);\n      },\n      (error: any) => {\n        console.error('Error creating order:', error);\n      }\n    ); \n\n  // Reset isLoading state after navigation\n  setTimeout(() => {\n    this.isLoading = false;\n  }, 100); // A small delay to ensure smooth transition\n}, 100); // Wait for 0.1 seconds\n}\n\n  validateEmail(email: string): void {\n    this.emailInvalid = !/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/.test(email);\n  }\n\n  validateContact(contact: string): void {\n    this.contactInvalid = !/^\\d{10}$/.test(contact);\n  }\n\n  get emailField() {\n    return this.regForm.get('email');\n  }\n\n  get contactField() {\n    return this.regForm.get('contact');\n  }\n\n  get nameField() {\n    return this.regForm.get('name');\n  }\n\n  get addressField() {\n    return this.regForm.get('address');\n  }\n\n  get cityField() {\n    return this.regForm.get('city');\n  }\n\n  get stateField() {\n    return this.regForm.get('state');\n  }\n\n  get zipField() {\n    return this.regForm.get('zip');\n  }\n\n}\n\n\n","\n<div\n  class=\"container-fluid text-dark \"\n  style=\"\n    background-image: url('assets/images/payment_page_bg.jpg');\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    background-size: cover;\n    width: 100%;\n    margin-top: -15px;\n    margin-bottom: -8rem;\n  \"\n>\n\n<div class=\"row mt-3 mx-3\" style=\"margin-top:25px ;\">\n\n  <div class=\"col-md-9 mt-5 mb-5 justify-content-center bg-warning \">\n    <div class=\"card card-custom pb-4 bg-dark text-light\">\n      <div class=\"card-body mt-0 mx-5\">\n        <div class=\"text-center mb-3 pb-2 mt-3 \">\n          <div class=\"text-container\">\n            <h1>Delivery Details</h1>\n          </div>\n        </div>\n        <div class=\" mb-3 pb-2 mt-3 \">\n          <h5><strong>Customer Name:</strong> <span class=\"text text-warning\">{{name}}</span></h5>\n        </div>\n        <form [formGroup]=\"regForm\"class=\"mb-5\">\n\n          <div class=\"row mb-4\">\n            <label for=\"email\" class=\"form-label\">Email:</label>\n            <div class=\"col\">\n              <input\n              type=\"email\"\n              id=\"email\"\n              class=\"form-control text-secondary alert\"\n              name=\"email\"\n              [value]=\"email\"\n              disabled\n              required\n              \n            />\n          </div>\n            </div>\n            <div class=\"col\">\n                             \n                <label for=\"contact\" class=\"form-label\">Contact:</label>\n                <input\n                  type=\"text\"\n                  id=\"contact\"\n                  class=\"form-control text-secondary alert\"\n                  name=\"contact\"\n                  required\n                  [value]=\"contact\"\n                  disabled\n                 />\n                 \n                <!-- [(ngModel)]=\"contact\" -->       \n                \n            </div>\n          \n          <div class=\"row mb-4\">\n            <div class=\"col\">\n              <div class=\"form-outline\">\n                <label for=\"address\" class=\"form-label is-invalid\"\n                >Address:</label\n                >\n                <textarea\n                  id=\"address\"\n                  class=\"form-control\"\n                  formControlName=\"address\"\n                  name=\"address\"\n                  rows=\"3\"\n                  [(ngModel)]=\"address\"\n                  required\n                ></textarea\n                ><!-- [(ngModel)]=\"address\" -->\n                <div\n                  class=\"alert alert-danger\"\n                  *ngIf=\"\n                    regForm.controls.address.touched &&\n                    regForm.controls.address.invalid\n                  \"\n                >\n                  Address should not be blank or invalid\n                </div>\n              </div>\n            </div>\n            <div class=\"col\">\n              <div class=\"form-outline\">\n                <label for=\"city\" class=\"form-label\">City:</label>\n                <input\n                  type=\"text\"\n                  id=\"city\"\n                  formControlName=\"city\"\n                  class=\"form-control\"\n                  name=\"city\"\n                  required\n                  [(ngModel)]=\"city\"\n                /><!--  [(ngModel)]=\"city\" -->\n                <div\n                  class=\"alert alert-danger\"\n                  *ngIf=\"\n                    regForm.controls.city.touched &&\n                    regForm.controls.city.invalid\n                  \"\n                >\n                  City should not be blank or invalid\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row mb-4\">\n            <div class=\"col\">\n              <div class=\"form-outline\">\n                <label for=\"state\" class=\"form-label\">State:</label>\n                <input\n                  type=\"text\"\n                  id=\"state\"\n                  formControlName=\"state\"\n                  class=\"form-control\"\n                  name=\"state\"\n                  [(ngModel)]=\"state\"\n                  required\n                /><!-- [(ngModel)]=\"state\"   -->\n                <div\n                  class=\"alert alert-danger\"\n                  *ngIf=\"\n                    regForm.controls.state.touched &&\n                    regForm.controls.state.invalid\n                  \"\n                >\n                  State should not be blank or invalid\n                </div>\n              </div>\n            </div>\n            <div class=\"col\">\n              <div class=\"form-outline\">\n                <label for=\"zip\" class=\"form-label\">ZIP Code:</label>\n                <input\n                  type=\"text\"\n                  id=\"zip\"\n                  formControlName=\"zip\"\n                  class=\"form-control\"\n                  name=\"zip\"\n                  [(ngModel)]=\"zip\"\n                  required\n                /><!-- [(ngModel)]=\"zip\" -->\n                <div\n                  class=\"alert alert-danger\"\n                  *ngIf=\"\n                    regForm.controls.zip.touched && regForm.controls.zip.invalid\n                  \"\n                >\n                  Zip should not be blank or invalid\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"float-end \">\n            <!-- Submit button -->\n\n             <button\n             type=\"submit\"\n             class=\"btn btn-primary btn-rounded py-2 ml-2 px-4 mb-5\"\n             style=\"margin-left: 10px\"\n             (click)=\"makePayment()\"\n           >\n             Pay\n           </button>\n           <button\n             type=\"button\"\n             class=\"btn btn-secondary btn-rounded py-2 px-4 mb-5\"\n             style=\"margin-right: 10px\"\n             (click)=\"payWithCash()\"\n           >\n             Pay with Cash \n           </button>\n           <div *ngIf=\"alertmsg\" class=\"alert alert-danger\">{{message }}</div>\n          </div>\n\n        </form>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-md-3 mt-5 mb-5 \">\n    <div class=\"card mb-4\">\n      <div class=\"card-header bg-dark text-light py-3\">\n        \n        <h5 class=\"mb-0\">Summary</h5>\n      </div>\n      <div *ngIf=\"cartItems.length > 0\"></div>\n      <div class=\"card-body\">\n        <ul class=\"list-group list-group-flush\">\n          <!-- <li  class=\"list-group-item\"> -->\n          <li *ngFor=\"let cartItem of cartItems\" class=\"list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0\">\n            {{ cartItem.foodItem.name }}-\n            {{ cartItem.quantity }} pcs\n            <span>{{ cartItem.totalFoodItemCost | currency : \"INR\" }}</span>\n          </li>\n          <hr>\n          <li class=\" list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3 \">\n            <div>\n              <strong>Total amount</strong>\n              <strong>\n                <p class=\"mb-0\">(including VAT)</p>\n              </strong>\n            </div>\n            <span><strong>{{ amount | currency : \"INR\" }}</strong></span>\n          </li>\n        \n        </ul>\n\n        <!-- <button type=\"button\" class=\"btn btn-primary btn-lg btn-block\">\n          Make purchase\n        </button> -->\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}